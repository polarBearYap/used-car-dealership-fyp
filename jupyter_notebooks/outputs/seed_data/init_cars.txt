
        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 12800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 3480.0,
            ManufactureYear = 2006,
            Mileage = 95000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 11770.72m,
            PricePerMonth = 1066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 1",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1485.0,
            LengthMM = 4618.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 195.0,
            PredictedPrice = 32159.8m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2702.0,
            WidthMM = 1813.0,
            CarModelID = RenaultFluence.ID,
            CarModel = RenaultFluence,
            Title = "Renault Fluence 2",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 86800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4705.0,
            ManufactureYear = 2014,
            Mileage = 98000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 241.0,
            PredictedPrice = 79405.91m,
            PricePerMonth = 7233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 3",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1584.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4465.0,
            ManufactureYear = 2003,
            Mileage = 185000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 11980.81m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1740.0,
            CarModelID = ProtonWaja.ID,
            CarModel = ProtonWaja,
            Title = "Proton Waja 4",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4536.0,
            ManufactureYear = 2014,
            Mileage = 105000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 31293.39m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonSuprimaS.ID,
            CarModel = ProtonSuprimaS,
            Title = "Proton SuprimaS 5",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 70000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1994.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4680.0,
            ManufactureYear = 2004,
            Mileage = 185000.0,
            PeakPowerHP = 260.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 55056.12m,
            PricePerMonth = 5833.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1730.0,
            CarModelID = SubaruLegacy.ID,
            CarModel = SubaruLegacy,
            Title = "Subaru Legacy 6",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 51800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.0,
            LengthMM = 4627.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 205.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 52208.14m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2774.0,
            WidthMM = 1891.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 7",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 49999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1430.0,
            LengthMM = 4320.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 45873.23m,
            PricePerMonth = 4166.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1765.0,
            CarModelID = LexusCt200H.ID,
            CarModel = LexusCt200H,
            Title = "Lexus Ct200H 8",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 94800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2019,
            Mileage = 15000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 285.0,
            PredictedPrice = 94860.53m,
            PricePerMonth = 7900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 9",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30700.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2017,
            Mileage = 57500.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34717.15m,
            PricePerMonth = 2558.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 10",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2019,
            Mileage = 45000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34678.93m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 11",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 31700.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2199.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1760.0,
            LengthMM = 4660.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 196.0,
            PeakTorqueNM = 442.0,
            PredictedPrice = 64953.49m,
            PricePerMonth = 2641.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1890.0,
            CarModelID = HyundaiSantaFe.ID,
            CarModel = HyundaiSantaFe,
            Title = "Hyundai SantaFe 12",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 65800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5359.0,
            ManufactureYear = 2014,
            Mileage = 95000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 375.0,
            PredictedPrice = 63167.49m,
            PricePerMonth = 5483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3220.0,
            WidthMM = 1850.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 13",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68500.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4545.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 222.0,
            PredictedPrice = 62377.63m,
            PricePerMonth = 5708.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2620.0,
            WidthMM = 1820.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 14",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 83800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1890.0,
            LengthMM = 4850.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 97657.3m,
            PricePerMonth = 6983.33m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1830.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 15",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 325000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 3600.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1300.0,
            LengthMM = 4450.0,
            ManufactureYear = 2008,
            Mileage = 45000.0,
            PeakPowerHP = 480.0,
            PeakTorqueNM = 620.0,
            PredictedPrice = 336745.36m,
            PricePerMonth = 27083.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2350.0,
            WidthMM = 1852.0,
            CarModelID = Porsche911.ID,
            CarModel = Porsche911,
            Title = "Porsche 911 16",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 31391.62m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 17",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 86800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4620.0,
            ManufactureYear = 2018,
            Mileage = 20000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 74703.58m,
            PricePerMonth = 7233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1776.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 18",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1434.0,
            LengthMM = 3898.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 24049.2m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1745.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 19",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4580.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 36592.37m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2640.0,
            WidthMM = 1755.0,
            CarModelID = Mazda3.ID,
            CarModel = Mazda3,
            Title = "Mazda 3 20",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 65800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1740.0,
            LengthMM = 4435.0,
            ManufactureYear = 2020,
            Mileage = 15000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 133.0,
            PredictedPrice = 64108.92m,
            PricePerMonth = 5483.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAruz.ID,
            CarModel = PeroduaAruz,
            Title = "Perodua Aruz 21",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 21800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4530.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 194.0,
            PredictedPrice = 32886.49m,
            PricePerMonth = 1816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1775.0,
            CarModelID = KiaForte.ID,
            CarModel = KiaForte,
            Title = "Kia Forte 22",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 48800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 3955.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 51297.88m,
            PricePerMonth = 4066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 23",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 37800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4150.0,
            ManufactureYear = 2015,
            Mileage = 69238.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 42972.15m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2655.0,
            WidthMM = 1600.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 24",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2009,
            Mileage = 105000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 14383.36m,
            PricePerMonth = 1233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 25",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 32800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1456.0,
            LengthMM = 4792.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 158.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 35625.5m,
            PricePerMonth = 2733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2817.0,
            WidthMM = 2068.0,
            CarModelID = Peugeot508.ID,
            CarModel = Peugeot508,
            Title = "Peugeot 508 26",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 139800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4865.0,
            ManufactureYear = 2013,
            Mileage = 70000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 121712.28m,
            PricePerMonth = 11650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 27",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26500.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2013,
            Mileage = 140000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 30560.75m,
            PricePerMonth = 2208.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 28",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 33800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1655.0,
            LengthMM = 4410.0,
            ManufactureYear = 2011,
            Mileage = 100000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 38153.95m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1820.0,
            CarModelID = HyundaiTucson.ID,
            CarModel = HyundaiTucson,
            Title = "Hyundai Tucson 29",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4530.0,
            ManufactureYear = 2013,
            Mileage = 70000.0,
            PeakPowerHP = 131.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 39112.77m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1775.0,
            CarModelID = HyundaiElantra.ID,
            CarModel = HyundaiElantra,
            Title = "Hyundai Elantra 30",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2017,
            Mileage = 55000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 41393.03m,
            PricePerMonth = 3541.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 31",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 41800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1779.0,
            LengthMM = 5295.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 314.0,
            PredictedPrice = 44341.8m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 32",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 178000.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1457.0,
            LengthMM = 5252.0,
            ManufactureYear = 2013,
            Mileage = 15000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 156648.76m,
            PricePerMonth = 14833.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3157.0,
            WidthMM = 1899.0,
            CarModelID = JaguarXj.ID,
            CarModel = JaguarXj,
            Title = "Jaguar Xj 33",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 46800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1790.0,
            LengthMM = 4845.0,
            ManufactureYear = 2008,
            Mileage = 135000.0,
            PeakPowerHP = 250.0,
            PeakTorqueNM = 309.0,
            PredictedPrice = 52085.89m,
            PricePerMonth = 3900.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2900.0,
            WidthMM = 1830.0,
            CarModelID = HondaElysion.ID,
            CarModel = HondaElysion,
            Title = "Honda Elysion 34",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25183.88m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 35",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 121800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1462.0,
            LengthMM = 4907.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 120475.0m,
            PricePerMonth = 10150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw520I.ID,
            CarModel = Bmw520I,
            Title = "Bmw 520I 36",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1453.0,
            LengthMM = 3970.0,
            ManufactureYear = 2015,
            Mileage = 85000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 153.0,
            PredictedPrice = 31382.98m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2456.0,
            WidthMM = 1682.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 37",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4205.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 30671.38m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 38",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 66888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2179.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1740.0,
            LengthMM = 4500.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 420.0,
            PredictedPrice = 101167.26m,
            PricePerMonth = 5574.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2659.0,
            WidthMM = 1910.0,
            CarModelID = LandRoverFreelander2.ID,
            CarModel = LandRoverFreelander2,
            Title = "LandRover Freelander2 39",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35999.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 37117.92m,
            PricePerMonth = 2999.92m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 40",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 236000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1776.0,
            LengthMM = 4950.0,
            ManufactureYear = 2016,
            Mileage = 30000.0,
            PeakPowerHP = 320.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 275278.51m,
            PricePerMonth = 19666.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2984.0,
            WidthMM = 1958.0,
            CarModelID = VolvoXc90.ID,
            CarModel = VolvoXc90,
            Title = "Volvo Xc90 41",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 29435.17m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 42",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 121800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4624.0,
            ManufactureYear = 2013,
            Mileage = 65000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 115521.55m,
            PricePerMonth = 10150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw328I.ID,
            CarModel = Bmw328I,
            Title = "Bmw 328I 43",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 112999.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2017,
            Mileage = 75000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 127804.5m,
            PricePerMonth = 9416.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw320I.ID,
            CarModel = Bmw320I,
            Title = "Bmw 320I 44",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1426.0,
            LengthMM = 4532.0,
            ManufactureYear = 2005,
            Mileage = 170000.0,
            PeakPowerHP = 261.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 74060.28m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2715.0,
            WidthMM = 1728.0,
            CarModelID = MercedesBenzC230K.ID,
            CarModel = MercedesBenzC230K,
            Title = "MercedesBenz C230K 45",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 43800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2018,
            Mileage = 55000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 38317.66m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 46",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 11500.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1655.0,
            LengthMM = 3705.0,
            ManufactureYear = 1996,
            Mileage = 105000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 181.0,
            PredictedPrice = 45644.6m,
            PricePerMonth = 958.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2200.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRav4.ID,
            CarModel = ToyotaRav4,
            Title = "Toyota Rav4 47",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 40800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 4765.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 43759.88m,
            PricePerMonth = 3400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2830.0,
            WidthMM = 1800.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 48",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2199.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1680.0,
            LengthMM = 4690.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 197.0,
            PeakTorqueNM = 436.0,
            PredictedPrice = 74154.47m,
            PricePerMonth = 5233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1880.0,
            CarModelID = HyundaiSantaFe.ID,
            CarModel = HyundaiSantaFe,
            Title = "Hyundai SantaFe 49",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2017,
            Mileage = 80000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 61931.08m,
            PricePerMonth = 5249.92m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 50",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 65999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1486.0,
            LengthMM = 4278.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 175.0,
            PredictedPrice = 68062.35m,
            PricePerMonth = 5499.92m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2537.0,
            WidthMM = 1808.0,
            CarModelID = VolkswagenBeetle.ID,
            CarModel = VolkswagenBeetle,
            Title = "Volkswagen Beetle 51",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 7800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1468.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1385.0,
            LengthMM = 4270.0,
            ManufactureYear = 2005,
            Mileage = 105000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 126.0,
            PredictedPrice = 9384.85m,
            PricePerMonth = 650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2500.0,
            WidthMM = 1680.0,
            CarModelID = ProtonWira.ID,
            CarModel = ProtonWira,
            Title = "Proton Wira 52",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 235000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1652.0,
            LengthMM = 4425.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 212855.24m,
            PricePerMonth = 19583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2702.0,
            WidthMM = 1863.0,
            CarModelID = VolvoXc40.ID,
            CarModel = VolvoXc40,
            Title = "Volvo Xc40 53",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 4500.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1594.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 4525.0,
            ManufactureYear = 2005,
            Mileage = 130000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 143.0,
            PredictedPrice = 20453.79m,
            PricePerMonth = 375.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = KiaSpectra.ID,
            CarModel = KiaSpectra,
            Title = "Kia Spectra 54",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 118800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2356.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4830.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 96336.92m,
            PricePerMonth = 9900.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1820.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 55",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 96000.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2020,
            Mileage = 25000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 113123.75m,
            PricePerMonth = 8000.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 56",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1835.0,
            LengthMM = 4715.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 56136.61m,
            PricePerMonth = 5749.92m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1770.0,
            CarModelID = MazdaBiante.ID,
            CarModel = MazdaBiante,
            Title = "Mazda Biante 57",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 119800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2356.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4830.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 100754.76m,
            PricePerMonth = 9983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1820.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 58",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 328000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 5000.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1855.0,
            LengthMM = 4999.0,
            ManufactureYear = 2013,
            Mileage = 53000.0,
            PeakPowerHP = 510.0,
            PeakTorqueNM = 625.0,
            PredictedPrice = 317488.23m,
            PricePerMonth = 27333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2922.0,
            WidthMM = 2220.0,
            CarModelID = LandRoverRangeRover.ID,
            CarModel = LandRoverRangeRover,
            Title = "LandRover RangeRover 59",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38888.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1825.0,
            LengthMM = 4520.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 131.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 35339.95m,
            PricePerMonth = 3240.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2695.0,
            WidthMM = 1695.0,
            CarModelID = NissanSerena.ID,
            CarModel = NissanSerena,
            Title = "Nissan Serena 60",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4350.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 39392.41m,
            PricePerMonth = 3241.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2630.0,
            WidthMM = 1800.0,
            CarModelID = KiaSportage.ID,
            CarModel = KiaSportage,
            Title = "Kia Sportage 61",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 53000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4410.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 42660.91m,
            PricePerMonth = 4416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 62",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1948.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4520.0,
            ManufactureYear = 2000,
            Mileage = 205000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 15997.81m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = VolvoV40.ID,
            CarModel = VolvoV40,
            Title = "Volvo V40 63",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 126800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1679.0,
            LengthMM = 4584.0,
            ManufactureYear = 2018,
            Mileage = 75000.0,
            PeakPowerHP = 193.0,
            PeakTorqueNM = 243.0,
            PredictedPrice = 120589.08m,
            PricePerMonth = 10566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1855.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 64",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 183000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 4608.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1870.0,
            LengthMM = 4950.0,
            ManufactureYear = 2012,
            Mileage = 115000.0,
            PeakPowerHP = 318.0,
            PeakTorqueNM = 460.0,
            PredictedPrice = 166613.95m,
            PricePerMonth = 15250.0m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1970.0,
            CarModelID = ToyotaLandCruiser.ID,
            CarModel = ToyotaLandCruiser,
            Title = "Toyota LandCruiser 65",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 129800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2356.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4830.0,
            ManufactureYear = 2016,
            Mileage = 150000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 110081.37m,
            PricePerMonth = 10816.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1820.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 66",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 159800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2016,
            Mileage = 45000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 194426.26m,
            PricePerMonth = 13316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw330I.ID,
            CarModel = Bmw330I,
            Title = "Bmw 330I 67",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 36777.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1395.0,
            LengthMM = 4580.0,
            ManufactureYear = 2010,
            Mileage = 135000.0,
            PeakPowerHP = 193.0,
            PeakTorqueNM = 230.0,
            PredictedPrice = 90550.49m,
            PricePerMonth = 3064.75m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1817.0,
            CarModelID = Bmw323I.ID,
            CarModel = Bmw323I,
            Title = "Bmw 323I 68",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1430.0,
            LengthMM = 4320.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 44107.47m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1765.0,
            CarModelID = LexusCt200H.ID,
            CarModel = LexusCt200H,
            Title = "Lexus Ct200H 69",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 51888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4570.0,
            ManufactureYear = 2011,
            Mileage = 110000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 45691.53m,
            PricePerMonth = 4324.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = HondaStream.ID,
            CarModel = HondaStream,
            Title = "Honda Stream 70",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4856.0,
            ManufactureYear = 2012,
            Mileage = 83123.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 47141.77m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2795.0,
            WidthMM = 1835.0,
            CarModelID = KiaOptimaK5.ID,
            CarModel = KiaOptimaK5,
            Title = "Kia OptimaK5 71",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 255000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1676.0,
            LengthMM = 4708.0,
            ManufactureYear = 2020,
            Mileage = 15000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 267277.08m,
            PricePerMonth = 21250.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2864.0,
            WidthMM = 1891.0,
            CarModelID = BmwX3.ID,
            CarModel = BmwX3,
            Title = "Bmw X3 72",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 118800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1750.0,
            LengthMM = 4795.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 105057.72m,
            PricePerMonth = 9900.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaPrevia.ID,
            CarModel = ToyotaPrevia,
            Title = "Toyota Previa 73",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 11500.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1430.0,
            LengthMM = 3490.0,
            ManufactureYear = 2007,
            Mileage = 95000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 11749.94m,
            PricePerMonth = 958.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 74",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 59800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 54297.14m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 75",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 29800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1794.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4540.0,
            ManufactureYear = 2009,
            Mileage = 115000.0,
            PeakPowerHP = 132.0,
            PeakTorqueNM = 170.0,
            PredictedPrice = 30735.61m,
            PricePerMonth = 2483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 76",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 3905.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 16652.9m,
            PricePerMonth = 1400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1710.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 77",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 43888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2014,
            Mileage = 60000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 45884.67m,
            PricePerMonth = 3657.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 78",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 53800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4320.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 56586.61m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2570.0,
            WidthMM = 1695.0,
            CarModelID = Mazda2.ID,
            CarModel = Mazda2,
            Title = "Mazda 2 79",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3200.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1795.0,
            LengthMM = 5075.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 43852.43m,
            PricePerMonth = 3241.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 80",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 55800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 3955.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 55685.44m,
            PricePerMonth = 4650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 81",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 59800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1797.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4590.0,
            ManufactureYear = 2009,
            Mileage = 70000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 56891.87m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 82",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 11800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4601.090693538827,
            ManufactureYear = 1999,
            Mileage = 205000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 181.0,
            PredictedPrice = 17026.53m,
            PricePerMonth = 983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2735.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaNadia.ID,
            CarModel = ToyotaNadia,
            Title = "Toyota Nadia 83",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 73800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2017,
            Mileage = 80000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 74114.44m,
            PricePerMonth = 6150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 84",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 66800.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1430.0,
            LengthMM = 3723.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 37420.93m,
            PricePerMonth = 5566.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2467.0,
            WidthMM = 1683.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 85",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2018,
            Mileage = 50000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 64458.17m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 86",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 63000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1486.0,
            LengthMM = 4278.0,
            ManufactureYear = 2013,
            Mileage = 60000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 175.0,
            PredictedPrice = 66993.29m,
            PricePerMonth = 5250.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2537.0,
            WidthMM = 1808.0,
            CarModelID = VolkswagenBeetle.ID,
            CarModel = VolkswagenBeetle,
            Title = "Volkswagen Beetle 87",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 203800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2493.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1880.0,
            LengthMM = 4935.0,
            ManufactureYear = 2016,
            Mileage = 50000.0,
            PeakPowerHP = 182.0,
            PeakTorqueNM = 235.0,
            PredictedPrice = 179921.49m,
            PricePerMonth = 16983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1850.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 88",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 68800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 3498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1315.0,
            LengthMM = 4310.0,
            ManufactureYear = 2005,
            Mileage = 70000.0,
            PeakPowerHP = 381.0,
            PeakTorqueNM = 363.0,
            PredictedPrice = 145033.34m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1815.0,
            CarModelID = NissanFairladyZ.ID,
            CarModel = NissanFairladyZ,
            Title = "Nissan FairladyZ 89",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 32164.69m,
            PricePerMonth = 2999.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 90",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26990.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4205.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 32145.25m,
            PricePerMonth = 2249.17m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 91",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 82888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1359.0,
            LengthMM = 4287.0,
            ManufactureYear = 2012,
            Mileage = 80000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 61246.33m,
            PricePerMonth = 6907.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2612.0,
            WidthMM = 2107.0,
            CarModelID = PeugeotRcz.ID,
            CarModel = PeugeotRcz,
            Title = "Peugeot Rcz 92",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 59700.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4580.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 43350.65m,
            PricePerMonth = 4975.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1755.0,
            CarModelID = Mazda3.ID,
            CarModel = Mazda3,
            Title = "Mazda 3 93",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 62800.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4235.0,
            ManufactureYear = 2016,
            Mileage = 90800.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 143.0,
            PredictedPrice = 57933.63m,
            PricePerMonth = 5233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaSienta.ID,
            CarModel = ToyotaSienta,
            Title = "Toyota Sienta 94",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 105900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 4940.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 306.0,
            PeakTorqueNM = 370.0,
            PredictedPrice = 140588.86m,
            PricePerMonth = 8825.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 1881.0,
            CarModelID = MercedesBenzCls350.ID,
            CarModel = MercedesBenzCls350,
            Title = "MercedesBenz Cls350 95",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4300.0,
            ManufactureYear = 2011,
            Mileage = 100000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 30393.42m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 96",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 39648.64m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 97",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 28971.52m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 98",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 72800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1925.0,
            LengthMM = 5125.0,
            ManufactureYear = 2015,
            Mileage = 95000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 392.0,
            PredictedPrice = 69582.43m,
            PricePerMonth = 6066.67m,
            SeatCapacity = 11,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3200.0,
            WidthMM = 1920.0,
            CarModelID = HyundaiGrandStarex.ID,
            CarModel = HyundaiGrandStarex,
            Title = "Hyundai GrandStarex 99",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 22999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1499.0,
            LengthMM = 3925.0,
            ManufactureYear = 2007,
            Mileage = 110000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 153.0,
            PredictedPrice = 24902.86m,
            PricePerMonth = 1916.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1671.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 100",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 293800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1479.0,
            LengthMM = 4936.0,
            ManufactureYear = 2019,
            Mileage = 50000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 241650.15m,
            PricePerMonth = 24483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2975.0,
            WidthMM = 1868.0,
            CarModelID = Bmw530I.ID,
            CarModel = Bmw530I,
            Title = "Bmw 530I 101",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 123800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2016,
            Mileage = 100000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 127804.5m,
            PricePerMonth = 10316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw320I.ID,
            CarModel = Bmw320I,
            Title = "Bmw 320I 102",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 15800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2012,
            Mileage = 135000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 13959.27m,
            PricePerMonth = 1316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 103",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1948.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4520.0,
            ManufactureYear = 1999,
            Mileage = 60000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 27877.62m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = VolvoS40.ID,
            CarModel = VolvoS40,
            Title = "Volvo S40 104",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4420.0,
            ManufactureYear = 2011,
            Mileage = 150000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 31981.43m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1690.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 105",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3690.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 91.0,
            PeakTorqueNM = 117.0,
            PredictedPrice = 23775.26m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 106",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 55800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 46589.75m,
            PricePerMonth = 4650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 107",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62777.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2017,
            Mileage = 60000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 63896.63m,
            PricePerMonth = 5231.42m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 108",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1248.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 3595.0,
            ManufactureYear = 2015,
            Mileage = 25000.0,
            PeakPowerHP = 92.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 26003.25m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2385.0,
            WidthMM = 1595.0,
            CarModelID = KiaPicanto.ID,
            CarModel = KiaPicanto,
            Title = "Kia Picanto 109",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 162800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1630.0,
            LengthMM = 4630.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 238.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 149413.5m,
            PricePerMonth = 13566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2660.0,
            WidthMM = 1845.0,
            CarModelID = LexusNx200T.ID,
            CarModel = LexusNx200T,
            Title = "Lexus Nx200T 110",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 52800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 48967.04m,
            PricePerMonth = 4400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 111",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 113000.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2013,
            Mileage = 60000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 101697.6m,
            PricePerMonth = 9416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA180.ID,
            CarModel = MercedesBenzA180,
            Title = "MercedesBenz A180 112",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 79800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4590.0,
            ManufactureYear = 2015,
            Mileage = 110000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 68565.76m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2620.0,
            WidthMM = 1820.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 113",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 30800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4510.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 260.0,
            PeakTorqueNM = 323.0,
            PredictedPrice = 32801.17m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1740.0,
            CarModelID = ToyotaCaldina.ID,
            CarModel = ToyotaCaldina,
            Title = "Toyota Caldina 114",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 63800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1488.0,
            LengthMM = 4750.0,
            ManufactureYear = 2017,
            Mileage = 40000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 93924.88m,
            PricePerMonth = 5316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2730.0,
            WidthMM = 1820.0,
            CarModelID = Peugeot408.ID,
            CarModel = Peugeot408,
            Title = "Peugeot 408 115",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4384.0,
            ManufactureYear = 2019,
            Mileage = 25000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 175.0,
            PredictedPrice = 65642.77m,
            PricePerMonth = 5208.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2637.0,
            WidthMM = 1699.0,
            CarModelID = VolkswagenVento.ID,
            CarModel = VolkswagenVento,
            Title = "Volkswagen Vento 116",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 118800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2356.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4830.0,
            ManufactureYear = 2014,
            Mileage = 135000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 83965.09m,
            PricePerMonth = 9900.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2900.0,
            WidthMM = 1820.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 117",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 55800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1447.0,
            LengthMM = 4581.0,
            ManufactureYear = 2010,
            Mileage = 100000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 65593.67m,
            PricePerMonth = 4650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 2020.0,
            CarModelID = MercedesBenzC200Cgi.ID,
            CarModel = MercedesBenzC200Cgi,
            Title = "MercedesBenz C200Cgi 118",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 9800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1609.0,
            LengthMM = 4168.0,
            ManufactureYear = 2005,
            Mileage = 120000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 25982.88m,
            PricePerMonth = 816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2685.0,
            WidthMM = 1719.0,
            CarModelID = RenaultScenic.ID,
            CarModel = RenaultScenic,
            Title = "Renault Scenic 119",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 20800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2008,
            Mileage = 135000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 25270.96m,
            PricePerMonth = 1733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 120",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 165800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 2893.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1304.0,
            LengthMM = 4347.0,
            ManufactureYear = 2009,
            Mileage = 60000.0,
            PeakPowerHP = 265.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 183138.93m,
            PricePerMonth = 13816.67m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2416.0,
            WidthMM = 1801.0,
            CarModelID = PorscheCayman.ID,
            CarModel = PorscheCayman,
            Title = "Porsche Cayman 121",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2835.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1800.0,
            LengthMM = 5040.0,
            ManufactureYear = 2013,
            Mileage = 10000.0,
            PeakPowerHP = 97.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 51493.17m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1755.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 122",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 45888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1444.0,
            LengthMM = 4581.0,
            ManufactureYear = 2008,
            Mileage = 115000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 44871.3m,
            PricePerMonth = 3824.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1770.0,
            CarModelID = MercedesBenzC200K.ID,
            CarModel = MercedesBenzC200K,
            Title = "MercedesBenz C200K 123",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 116800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1750.0,
            LengthMM = 4795.0,
            ManufactureYear = 2013,
            Mileage = 100000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 94989.25m,
            PricePerMonth = 9733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaPrevia.ID,
            CarModel = ToyotaPrevia,
            Title = "Toyota Previa 124",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 89800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2979.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1464.0,
            LengthMM = 4899.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 306.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 172090.56m,
            PricePerMonth = 7483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw535I.ID,
            CarModel = Bmw535I,
            Title = "Bmw 535I 125",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 358000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 3604.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1705.0,
            LengthMM = 4855.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 420.0,
            PeakTorqueNM = 550.0,
            PredictedPrice = 285799.09m,
            PricePerMonth = 29833.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2895.0,
            WidthMM = 1939.0,
            CarModelID = PorscheCayenne.ID,
            CarModel = PorscheCayenne,
            Title = "Porsche Cayenne 126",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 27900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1425.0,
            LengthMM = 4395.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 25986.24m,
            PricePerMonth = 2325.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 127",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 21800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 24454.65m,
            PricePerMonth = 1816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2613.0,
            WidthMM = 1837.0,
            CarModelID = Peugeot3008.ID,
            CarModel = Peugeot3008,
            Title = "Peugeot 3008 128",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1438.0,
            LengthMM = 4477.0,
            ManufactureYear = 2011,
            Mileage = 110000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 16849.7m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1725.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 129",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4695.0,
            ManufactureYear = 2009,
            Mileage = 97000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 241.0,
            PredictedPrice = 46356.83m,
            PricePerMonth = 3500.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1540.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 130",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 22534.76m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 131",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1800.0,
            LengthMM = 4935.0,
            ManufactureYear = 2002,
            Mileage = 195000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 22577.41m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2960.0,
            WidthMM = 1775.0,
            CarModelID = MitsubishiStorm.ID,
            CarModel = MitsubishiStorm,
            Title = "Mitsubishi Storm 132",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 34800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1600.0,
            LengthMM = 4560.0,
            ManufactureYear = 2005,
            Mileage = 100000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 192.0,
            PredictedPrice = 38038.87m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1490.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 133",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2521.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1493.0,
            LengthMM = 4851.0,
            ManufactureYear = 2011,
            Mileage = 245000.0,
            PeakPowerHP = 231.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 56336.72m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2835.0,
            WidthMM = 1861.0,
            CarModelID = VolvoS80.ID,
            CarModel = VolvoS80,
            Title = "Volvo S80 134",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 39800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 36229.48m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 135",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23880.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1489.0,
            LengthMM = 3982.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 21645.9m,
            PricePerMonth = 1990.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 136",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 239800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2143.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1796.0,
            LengthMM = 4819.0,
            ManufactureYear = 2016,
            Mileage = 70000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 500.0,
            PredictedPrice = 220454.12m,
            PricePerMonth = 19983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2915.0,
            WidthMM = 1935.0,
            CarModelID = MercedesBenzGle250.ID,
            CarModel = MercedesBenzGle250,
            Title = "MercedesBenz Gle250 137",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 10800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1498.0,
            LengthMM = 4276.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 18664.35m,
            PricePerMonth = 900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2608.0,
            WidthMM = 1815.0,
            CarModelID = Peugeot308.ID,
            CarModel = Peugeot308,
            Title = "Peugeot 308 138",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34800.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 3626.0,
            ManufactureYear = 2005,
            Mileage = 185000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 149.0,
            PredictedPrice = 37077.25m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2467.0,
            WidthMM = 1688.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 139",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34500.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2019,
            Mileage = 40000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34715.81m,
            PricePerMonth = 2875.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 140",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 198800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1557.0,
            LengthMM = 4299.0,
            ManufactureYear = 2019,
            Mileage = 24000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 162082.91m,
            PricePerMonth = 16566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1822.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 141",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 4765.0,
            ManufactureYear = 2006,
            Mileage = 95000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 47036.31m,
            PricePerMonth = 3657.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2830.0,
            WidthMM = 1800.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 142",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 363000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1624.0,
            LengthMM = 4681.0,
            ManufactureYear = 2017,
            Mileage = 40000.0,
            PeakPowerHP = 256.0,
            PeakTorqueNM = 370.0,
            PredictedPrice = 323983.84m,
            PricePerMonth = 30250.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2807.0,
            WidthMM = 1923.0,
            CarModelID = PorscheMacan.ID,
            CarModel = PorscheMacan,
            Title = "Porsche Macan 143",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 19800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2008,
            Mileage = 95000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 26929.5m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 144",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 89000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2191.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2016,
            Mileage = 45000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 420.0,
            PredictedPrice = 172021.28m,
            PricePerMonth = 7416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 145",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1599.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4025.0,
            ManufactureYear = 2007,
            Mileage = 85000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 23253.02m,
            PricePerMonth = 825.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1740.0,
            CarModelID = HyundaiMatrix.ID,
            CarModel = HyundaiMatrix,
            Title = "Hyundai Matrix 146",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 84800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2019,
            Mileage = 105000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 285.0,
            PredictedPrice = 89879.27m,
            PricePerMonth = 7066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 147",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 78800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1429.0,
            LengthMM = 4624.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 380.0,
            PredictedPrice = 95762.64m,
            PricePerMonth = 6566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw320D.ID,
            CarModel = Bmw320D,
            Title = "Bmw 320D 148",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 55800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2015,
            Mileage = 130000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 54157.76m,
            PricePerMonth = 4650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 149",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1447.0,
            LengthMM = 4235.0,
            ManufactureYear = 2012,
            Mileage = 10000.0,
            PeakPowerHP = 110.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 27054.54m,
            PricePerMonth = 816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2443.0,
            WidthMM = 1669.0,
            CarModelID = Peugeot207.ID,
            CarModel = Peugeot207,
            Title = "Peugeot 207 150",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4425.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 29696.41m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 151",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 44800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4080.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 124.0,
            PeakTorqueNM = 167.0,
            PredictedPrice = 46981.56m,
            PricePerMonth = 3733.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 152",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 59800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4705.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 241.0,
            PredictedPrice = 66271.7m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 153",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 5900.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1468.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1385.0,
            LengthMM = 4360.0,
            ManufactureYear = 2000,
            Mileage = 195000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 126.0,
            PredictedPrice = 9328.11m,
            PricePerMonth = 491.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2500.0,
            WidthMM = 1680.0,
            CarModelID = ProtonWira.ID,
            CarModel = ProtonWira,
            Title = "Proton Wira 154",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 308800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1526.0,
            LengthMM = 4360.0,
            ManufactureYear = 2019,
            Mileage = 25000.0,
            PeakPowerHP = 306.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 218358.6m,
            PricePerMonth = 25733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1824.0,
            CarModelID = BmwX2.ID,
            CarModel = BmwX2,
            Title = "Bmw X2 155",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 46800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1702.0,
            LengthMM = 4524.0,
            ManufactureYear = 2014,
            Mileage = 50000.0,
            PeakPowerHP = 179.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 60104.35m,
            PricePerMonth = 3900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2690.0,
            WidthMM = 1838.0,
            CarModelID = FordKuga.ID,
            CarModel = FordKuga,
            Title = "Ford Kuga 156",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1520.0,
            LengthMM = 4278.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 17762.79m,
            PricePerMonth = 1249.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2465.0,
            WidthMM = 1680.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 157",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39899.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2261.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1645.0,
            LengthMM = 4699.0,
            ManufactureYear = 2010,
            Mileage = 100000.0,
            PeakPowerHP = 238.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 82246.62m,
            PricePerMonth = 3324.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1872.0,
            CarModelID = MazdaCx7.ID,
            CarModel = MazdaCx7,
            Title = "Mazda Cx7 158",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 79900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5362.0,
            ManufactureYear = 2017,
            Mileage = 67500.0,
            PeakPowerHP = 200.0,
            PeakTorqueNM = 470.0,
            PredictedPrice = 86346.71m,
            PricePerMonth = 6658.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3220.0,
            WidthMM = 1860.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 159",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 206999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2019,
            Mileage = 20000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 154857.97m,
            PricePerMonth = 17249.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC200.ID,
            CarModel = MercedesBenzC200,
            Title = "MercedesBenz C200 160",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 149800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1432.0,
            LengthMM = 4630.0,
            ManufactureYear = 2013,
            Mileage = 50000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 134302.84m,
            PricePerMonth = 12483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1777.0,
            CarModelID = MercedesBenzCla250.ID,
            CarModel = MercedesBenzCla250,
            Title = "MercedesBenz Cla250 161",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 226800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1494.0,
            LengthMM = 4417.0,
            ManufactureYear = 2015,
            Mileage = 50000.0,
            PeakPowerHP = 360.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 191827.82m,
            PricePerMonth = 18900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1804.0,
            CarModelID = MercedesBenzGla45Amg.ID,
            CarModel = MercedesBenzGla45Amg,
            Title = "MercedesBenz Gla45Amg 162",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 21800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1975.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4350.0,
            ManufactureYear = 2009,
            Mileage = 120000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 184.0,
            PredictedPrice = 31520.01m,
            PricePerMonth = 1816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2630.0,
            WidthMM = 1800.0,
            CarModelID = KiaSportage.ID,
            CarModel = KiaSportage,
            Title = "Kia Sportage 163",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 847.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 3365.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 37.0,
            PeakTorqueNM = 63.0,
            PredictedPrice = 6268.27m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 164",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 157999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1462.0,
            LengthMM = 4907.0,
            ManufactureYear = 2015,
            Mileage = 38000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 189692.41m,
            PricePerMonth = 13166.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw528I.ID,
            CarModel = Bmw528I,
            Title = "Bmw 528I 165",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 195888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 2893.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1292.0,
            LengthMM = 4342.0,
            ManufactureYear = 2011,
            Mileage = 55000.0,
            PeakPowerHP = 256.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 268671.12m,
            PricePerMonth = 16324.0m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2415.0,
            WidthMM = 1801.0,
            CarModelID = PorscheBoxster.ID,
            CarModel = PorscheBoxster,
            Title = "Porsche Boxster 166",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 253800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1479.0,
            LengthMM = 5238.0,
            ManufactureYear = 2017,
            Mileage = 76500.0,
            PeakPowerHP = 258.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 232901.97m,
            PricePerMonth = 21150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3210.0,
            WidthMM = 1902.0,
            CarModelID = Bmw740Le.ID,
            CarModel = Bmw740Le,
            Title = "Bmw 740Le 167",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 86800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 4630.0,
            ManufactureYear = 2017,
            Mileage = 80000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 72311.45m,
            PricePerMonth = 7233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1799.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 168",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 255800.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1479.0,
            LengthMM = 4936.0,
            ManufactureYear = 2018,
            Mileage = 37000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 254064.17m,
            PricePerMonth = 21316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2975.0,
            WidthMM = 1868.0,
            CarModelID = Bmw530I.ID,
            CarModel = Bmw530I,
            Title = "Bmw 530I 169",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 47999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4320.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 59555.46m,
            PricePerMonth = 3999.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2570.0,
            WidthMM = 1695.0,
            CarModelID = Mazda2.ID,
            CarModel = Mazda2,
            Title = "Mazda 2 170",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1452.0,
            LengthMM = 4818.0,
            ManufactureYear = 2006,
            Mileage = 105000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 38859.36m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2854.0,
            WidthMM = 1822.0,
            CarModelID = MercedesBenzE200K.ID,
            CarModel = MercedesBenzE200K,
            Title = "MercedesBenz E200K 171",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 3720.0,
            ManufactureYear = 2006,
            Mileage = 125000.0,
            PeakPowerHP = 87.0,
            PeakTorqueNM = 116.0,
            PredictedPrice = 17740.72m,
            PricePerMonth = 1233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 172",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 30999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1660.0,
            LengthMM = 4801.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 203.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 72296.73m,
            PricePerMonth = 2583.25m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2850.0,
            WidthMM = 1884.0,
            CarModelID = FordSMax.ID,
            CarModel = FordSMax,
            Title = "Ford SMax 173",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 108888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1713.0,
            LengthMM = 4644.0,
            ManufactureYear = 2015,
            Mileage = 60000.0,
            PeakPowerHP = 249.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 140442.0m,
            PricePerMonth = 9074.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2774.0,
            WidthMM = 1891.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 174",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4395.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 35545.35m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 175",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 62800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4570.0,
            ManufactureYear = 2010,
            Mileage = 105000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 50389.42m,
            PricePerMonth = 5233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = HondaStream.ID,
            CarModel = HondaStream,
            Title = "Honda Stream 176",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 83800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4590.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 77249.23m,
            PricePerMonth = 6983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2620.0,
            WidthMM = 1820.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 177",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 19888.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1388.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2011,
            Mileage = 115000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 128.0,
            PredictedPrice = 18730.95m,
            PricePerMonth = 1657.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 178",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4420.0,
            ManufactureYear = 2010,
            Mileage = 110000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 30212.58m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1690.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 179",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1755.0,
            LengthMM = 4555.0,
            ManufactureYear = 2007,
            Mileage = 105000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 36966.87m,
            PricePerMonth = 2291.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1770.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 180",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 98800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1890.0,
            LengthMM = 4850.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 100309.61m,
            PricePerMonth = 8233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1830.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 181",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3945.0,
            ManufactureYear = 2019,
            Mileage = 35000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 36165.4m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 182",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 76800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4705.0,
            ManufactureYear = 2014,
            Mileage = 95000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 241.0,
            PredictedPrice = 83977.0m,
            PricePerMonth = 6400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 183",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 58500.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1395.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1452.0,
            LengthMM = 4255.0,
            ManufactureYear = 2013,
            Mileage = 105000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 63644.38m,
            PricePerMonth = 4875.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2637.0,
            WidthMM = 1799.0,
            CarModelID = VolkswagenGolf.ID,
            CarModel = VolkswagenGolf,
            Title = "Volkswagen Golf 184",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14500.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1434.0,
            LengthMM = 3898.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 20201.77m,
            PricePerMonth = 1208.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1745.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 185",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 147800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2014,
            Mileage = 95000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 141613.74m,
            PricePerMonth = 12316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2662.0,
            WidthMM = 1965.0,
            CarModelID = LandRoverRangeRoverEvoque.ID,
            CarModel = LandRoverRangeRoverEvoque,
            Title = "LandRover RangeRoverEvoque 186",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 53800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5359.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 375.0,
            PredictedPrice = 58845.44m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3220.0,
            WidthMM = 1850.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 187",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 69359.06m,
            PricePerMonth = 5566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 188",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1426.0,
            LengthMM = 4532.0,
            ManufactureYear = 2006,
            Mileage = 125000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 30607.82m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2715.0,
            WidthMM = 1728.0,
            CarModelID = MercedesBenzC230.ID,
            CarModel = MercedesBenzC230,
            Title = "MercedesBenz C230 189",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 139000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3456.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4850.0,
            ManufactureYear = 2014,
            Mileage = 120000.0,
            PeakPowerHP = 317.0,
            PeakTorqueNM = 378.0,
            PredictedPrice = 133654.45m,
            PricePerMonth = 11583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1840.0,
            CarModelID = LexusGs350.ID,
            CarModel = LexusGs350,
            Title = "Lexus Gs350 190",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 89900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 4608.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 5151.0,
            ManufactureYear = 2007,
            Mileage = 80000.0,
            PeakPowerHP = 381.0,
            PeakTorqueNM = 493.0,
            PredictedPrice = 144557.19m,
            PricePerMonth = 7491.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3091.0,
            WidthMM = 1875.0,
            CarModelID = LexusLs460L.ID,
            CarModel = LexusLs460L,
            Title = "Lexus Ls460L 191",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 55808.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1450.0,
            LengthMM = 4865.0,
            ManufactureYear = 2013,
            Mileage = 70000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 59334.15m,
            PricePerMonth = 4650.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2830.0,
            WidthMM = 1840.0,
            CarModelID = Mazda6.ID,
            CarModel = Mazda6,
            Title = "Mazda 6 192",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 22800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4610.0,
            ManufactureYear = 2011,
            Mileage = 75000.0,
            PeakPowerHP = 133.0,
            PeakTorqueNM = 191.0,
            PredictedPrice = 31021.37m,
            PricePerMonth = 1900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1695.0,
            CarModelID = NissanSylphy.ID,
            CarModel = NissanSylphy,
            Title = "Nissan Sylphy 193",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2359.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1680.0,
            LengthMM = 4690.0,
            ManufactureYear = 2015,
            Mileage = 82560.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 227.0,
            PredictedPrice = 73641.19m,
            PricePerMonth = 5566.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1880.0,
            CarModelID = HyundaiSantaFe.ID,
            CarModel = HyundaiSantaFe,
            Title = "Hyundai SantaFe 194",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 142000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2016,
            Mileage = 25000.0,
            PeakPowerHP = 158.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 159097.87m,
            PricePerMonth = 11833.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC180.ID,
            CarModel = MercedesBenzC180,
            Title = "MercedesBenz C180 195",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1468.0,
            LengthMM = 4841.0,
            ManufactureYear = 2006,
            Mileage = 175000.0,
            PeakPowerHP = 177.0,
            PeakTorqueNM = 230.0,
            PredictedPrice = 42753.55m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2888.0,
            WidthMM = 1846.0,
            CarModelID = Bmw523I.ID,
            CarModel = Bmw523I,
            Title = "Bmw 523I 196",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Maroon",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4495.0,
            ManufactureYear = 1997,
            Mileage = 205000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 20215.85m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2535.0,
            WidthMM = 1695.0,
            CarModelID = NissanSentra.ID,
            CarModel = NissanSentra,
            Title = "Nissan Sentra 197",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1199.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1556.0,
            LengthMM = 4159.0,
            ManufactureYear = 2018,
            Mileage = 40000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 54815.86m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2538.0,
            WidthMM = 1739.0,
            CarModelID = Peugeot2008.ID,
            CarModel = Peugeot2008,
            Title = "Peugeot 2008 198",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2017,
            Mileage = 105000.0,
            PeakPowerHP = 68.0,
            PeakTorqueNM = 91.0,
            PredictedPrice = 25796.71m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 199",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 78800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1925.0,
            LengthMM = 5125.0,
            ManufactureYear = 2016,
            Mileage = 70000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 392.0,
            PredictedPrice = 78658.59m,
            PricePerMonth = 6566.67m,
            SeatCapacity = 11,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3200.0,
            WidthMM = 1920.0,
            CarModelID = HyundaiGrandStarex.ID,
            CarModel = HyundaiGrandStarex,
            Title = "Hyundai GrandStarex 200",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 29800.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1462.0,
            LengthMM = 3970.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 175.0,
            PredictedPrice = 38668.97m,
            PricePerMonth = 2483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2470.0,
            WidthMM = 1682.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 201",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 64800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 63896.63m,
            PricePerMonth = 5400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 202",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 33800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1490.0,
            LengthMM = 4480.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 33857.96m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1745.0,
            CarModelID = ToyotaPrius.ID,
            CarModel = ToyotaPrius,
            Title = "Toyota Prius 203",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 44800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4485.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 36602.42m,
            PricePerMonth = 3733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1700.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 204",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4310.0,
            ManufactureYear = 2010,
            Mileage = 170000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 17253.96m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1725.0,
            CarModelID = ProtonGen2.ID,
            CarModel = ProtonGen2,
            Title = "Proton Gen2 205",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4220.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 40991.75m,
            PricePerMonth = 4166.58m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 206",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 111700.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1462.0,
            LengthMM = 4907.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 380.0,
            PredictedPrice = 107356.9m,
            PricePerMonth = 9308.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw520D.ID,
            CarModel = Bmw520D,
            Title = "Bmw 520D 207",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 76800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4624.0,
            ManufactureYear = 2015,
            Mileage = 85000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 94630.47m,
            PricePerMonth = 6400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw316I.ID,
            CarModel = Bmw316I,
            Title = "Bmw 316I 208",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 64800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4870.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 67002.44m,
            PricePerMonth = 5400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1850.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 209",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1760.0,
            LengthMM = 4585.0,
            ManufactureYear = 2014,
            Mileage = 115000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 43344.53m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 210",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 112800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1986.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4720.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 193.0,
            PredictedPrice = 115996.43m,
            PricePerMonth = 9400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 211",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1570.0,
            LengthMM = 3685.0,
            ManufactureYear = 2016,
            Mileage = 50000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 35544.59m,
            PricePerMonth = 2916.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 212",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 37047.61m,
            PricePerMonth = 3574.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 213",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2011,
            Mileage = 125000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 177.0,
            PredictedPrice = 28647.3m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 214",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 429999.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2996.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1496.0,
            LengthMM = 5271.0,
            ManufactureYear = 2018,
            Mileage = 55000.0,
            PeakPowerHP = 367.0,
            PeakTorqueNM = 500.0,
            PredictedPrice = 312614.3m,
            PricePerMonth = 35833.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3165.0,
            WidthMM = 1905.0,
            CarModelID = MercedesBenzS450L.ID,
            CarModel = MercedesBenzS450L,
            Title = "MercedesBenz S450L 215",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 255000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2996.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1496.0,
            LengthMM = 5246.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 337.0,
            PeakTorqueNM = 480.0,
            PredictedPrice = 241625.33m,
            PricePerMonth = 21250.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3165.0,
            WidthMM = 1899.0,
            CarModelID = MercedesBenzS400L.ID,
            CarModel = MercedesBenzS400L,
            Title = "MercedesBenz S400L 216",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 26143.68m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 217",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 63800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 62327.84m,
            PricePerMonth = 5316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 218",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2012,
            Mileage = 75000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 32945.05m,
            PricePerMonth = 2583.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 219",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 26136.8m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 220",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 27800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1466.0,
            LengthMM = 4534.0,
            ManufactureYear = 2013,
            Mileage = 100000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 202.0,
            PredictedPrice = 38349.34m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2648.0,
            WidthMM = 1824.0,
            CarModelID = FordFocus.ID,
            CarModel = FordFocus,
            Title = "Ford Focus 221",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1088.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 3495.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 64.0,
            PeakTorqueNM = 96.0,
            PredictedPrice = 17037.82m,
            PricePerMonth = 816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2370.0,
            WidthMM = 1595.0,
            CarModelID = KiaPicanto.ID,
            CarModel = KiaPicanto,
            Title = "Kia Picanto 222",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 130800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1474.0,
            LengthMM = 4879.0,
            ManufactureYear = 2014,
            Mileage = 61000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 115872.24m,
            PricePerMonth = 10900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE200.ID,
            CarModel = MercedesBenzE200,
            Title = "MercedesBenz E200 223",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 57800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1935.0,
            LengthMM = 4840.0,
            ManufactureYear = 2007,
            Mileage = 155000.0,
            PeakPowerHP = 159.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 53781.76m,
            PricePerMonth = 4816.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2900.0,
            WidthMM = 1805.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 224",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4230.0,
            ManufactureYear = 2015,
            Mileage = 140000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 34966.8m,
            PricePerMonth = 3074.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 225",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2359.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1760.0,
            LengthMM = 4660.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 174.0,
            PeakTorqueNM = 228.0,
            PredictedPrice = 59530.23m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1890.0,
            CarModelID = HyundaiSantaFe.ID,
            CarModel = HyundaiSantaFe,
            Title = "Hyundai SantaFe 226",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 47999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 53831.75m,
            PricePerMonth = 3999.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 227",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39700.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 4765.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 43759.88m,
            PricePerMonth = 3308.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2830.0,
            WidthMM = 1800.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 228",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25183.88m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 229",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 80000.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 3729.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 84932.8m,
            PricePerMonth = 6666.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2467.0,
            WidthMM = 1683.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 230",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 22999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 60000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 26523.72m,
            PricePerMonth = 1916.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 231",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 34106.32m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2613.0,
            WidthMM = 1837.0,
            CarModelID = Peugeot3008.ID,
            CarModel = Peugeot3008,
            Title = "Peugeot 3008 232",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 199800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4725.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 231.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 194215.28m,
            PricePerMonth = 16650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 233",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 218800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4709.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 191066.9m,
            PricePerMonth = 18233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2851.0,
            WidthMM = 1827.0,
            CarModelID = Bmw320I.ID,
            CarModel = Bmw320I,
            Title = "Bmw 320I 234",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 169800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1462.0,
            LengthMM = 4907.0,
            ManufactureYear = 2016,
            Mileage = 110000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 169378.63m,
            PricePerMonth = 14150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw528I.ID,
            CarModel = Bmw528I,
            Title = "Bmw 528I 235",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1485.0,
            LengthMM = 4618.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 195.0,
            PredictedPrice = 32159.8m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2702.0,
            WidthMM = 1813.0,
            CarModelID = RenaultFluence.ID,
            CarModel = RenaultFluence,
            Title = "Renault Fluence 236",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Pink",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1248.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1540.0,
            LengthMM = 3565.0,
            ManufactureYear = 2014,
            Mileage = 30000.0,
            PeakPowerHP = 87.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 18389.1m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2380.0,
            WidthMM = 1595.0,
            CarModelID = HyundaiI10.ID,
            CarModel = HyundaiI10,
            Title = "Hyundai I10 237",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 199000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1724.0,
            LengthMM = 4599.0,
            ManufactureYear = 2015,
            Mileage = 25000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 183668.55m,
            PricePerMonth = 16583.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2741.0,
            WidthMM = 2069.0,
            CarModelID = LandRoverDiscoverySport.ID,
            CarModel = LandRoverDiscoverySport,
            Title = "LandRover DiscoverySport 238",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 175000.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2457.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.LeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4595.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 300.0,
            PeakTorqueNM = 407.0,
            PredictedPrice = 144938.65m,
            PricePerMonth = 14583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2650.0,
            WidthMM = 1795.0,
            CarModelID = SubaruWrxSti.ID,
            CarModel = SubaruWrxSti,
            Title = "Subaru WrxSti 239",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24900.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1434.0,
            LengthMM = 3898.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 22141.24m,
            PricePerMonth = 2075.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1745.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 240",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1477.0,
            LengthMM = 4440.0,
            ManufactureYear = 2016,
            Mileage = 55000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 53632.44m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 241",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 73800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1486.0,
            LengthMM = 4278.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 175.0,
            PredictedPrice = 64610.4m,
            PricePerMonth = 6150.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2537.0,
            WidthMM = 1808.0,
            CarModelID = VolkswagenBeetle.ID,
            CarModel = VolkswagenBeetle,
            Title = "Volkswagen Beetle 242",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 136800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1986.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4720.0,
            ManufactureYear = 2015,
            Mileage = 135000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 193.0,
            PredictedPrice = 109908.45m,
            PricePerMonth = 11400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 243",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 31800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 33750.74m,
            PricePerMonth = 2650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 244",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66300.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4370.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 213.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 75330.92m,
            PricePerMonth = 5525.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2646.0,
            WidthMM = 1802.0,
            CarModelID = VolvoV40CrossCountry.ID,
            CarModel = VolvoV40CrossCountry,
            Title = "Volvo V40CrossCountry 245",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 3905.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 16652.9m,
            PricePerMonth = 1400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1710.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 246",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 352500.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1776.0,
            LengthMM = 4950.0,
            ManufactureYear = 2019,
            Mileage = 5000.0,
            PeakPowerHP = 320.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 292269.7m,
            PricePerMonth = 29375.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2984.0,
            WidthMM = 1958.0,
            CarModelID = VolvoXc90.ID,
            CarModel = VolvoXc90,
            Title = "Volvo Xc90 247",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 40999.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1199.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 3965.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 52824.5m,
            PricePerMonth = 3416.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2538.0,
            WidthMM = 1739.0,
            CarModelID = Peugeot208.ID,
            CarModel = Peugeot208,
            Title = "Peugeot 208 248",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 89800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1462.0,
            LengthMM = 4907.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 101309.64m,
            PricePerMonth = 7483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw520I.ID,
            CarModel = Bmw520I,
            Title = "Bmw 520I 249",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 59800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2979.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1479.0,
            LengthMM = 5072.0,
            ManufactureYear = 2009,
            Mileage = 90000.0,
            PeakPowerHP = 326.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 179223.73m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3070.0,
            WidthMM = 1902.0,
            CarModelID = Bmw740I.ID,
            CarModel = Bmw740I,
            Title = "Bmw 740I 250",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 50800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2953.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1713.0,
            LengthMM = 4628.0,
            ManufactureYear = 2009,
            Mileage = 92500.0,
            PeakPowerHP = 286.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 50927.0m,
            PricePerMonth = 4233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2774.0,
            WidthMM = 1891.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 251",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 208800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 3605.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1418.0,
            LengthMM = 4970.0,
            ManufactureYear = 2012,
            Mileage = 75000.0,
            PeakPowerHP = 299.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 194753.3m,
            PricePerMonth = 17400.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2920.0,
            WidthMM = 1931.0,
            CarModelID = PorschePanamera.ID,
            CarModel = PorschePanamera,
            Title = "Porsche Panamera 252",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 77888.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4595.0,
            ManufactureYear = 2017,
            Mileage = 95000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 70490.48m,
            PricePerMonth = 6490.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2640.0,
            WidthMM = 1795.0,
            CarModelID = SubaruForester.ID,
            CarModel = SubaruForester,
            Title = "Subaru Forester 253",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 39800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1493.0,
            LengthMM = 4851.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 320.0,
            PredictedPrice = 69127.74m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2835.0,
            WidthMM = 1861.0,
            CarModelID = VolvoS80.ID,
            CarModel = VolvoS80,
            Title = "Volvo S80 254",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 76000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4145.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 65167.38m,
            PricePerMonth = 6333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaYaris.ID,
            CarModel = ToyotaYaris,
            Title = "Toyota Yaris 255",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 29999.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2967.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4875.0,
            ManufactureYear = 1999,
            Mileage = 125000.0,
            PeakPowerHP = 324.0,
            PeakTorqueNM = 293.0,
            PredictedPrice = 60769.14m,
            PricePerMonth = 2499.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2910.0,
            WidthMM = 1820.0,
            CarModelID = JaguarSType.ID,
            CarModel = JaguarSType,
            Title = "Jaguar SType 256",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 119800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 4240.0,
            ManufactureYear = 2014,
            Mileage = 50000.0,
            PeakPowerHP = 200.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 96534.92m,
            PricePerMonth = 9983.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2570.0,
            WidthMM = 1775.0,
            CarModelID = SubaruBrz.ID,
            CarModel = SubaruBrz,
            Title = "Subaru Brz 257",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 69899.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 66700.41m,
            PricePerMonth = 5824.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 258",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 52000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4570.0,
            ManufactureYear = 2010,
            Mileage = 135000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 47382.65m,
            PricePerMonth = 4333.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = HondaStream.ID,
            CarModel = HondaStream,
            Title = "Honda Stream 259",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1430.0,
            LengthMM = 4320.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 44821.17m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1765.0,
            CarModelID = LexusCt200H.ID,
            CarModel = LexusCt200H,
            Title = "Lexus Ct200H 260",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4570.0,
            ManufactureYear = 2008,
            Mileage = 135000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 42197.06m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = HondaStream.ID,
            CarModel = HondaStream,
            Title = "Honda Stream 261",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 168888.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2014,
            Mileage = 110000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 141175.32m,
            PricePerMonth = 14074.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC250.ID,
            CarModel = MercedesBenzC250,
            Title = "MercedesBenz C250 262",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 53800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4769.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 62138.88m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2712.0,
            WidthMM = 1820.0,
            CarModelID = VolkswagenPassat.ID,
            CarModel = VolkswagenPassat,
            Title = "Volkswagen Passat 263",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 6900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4310.0,
            ManufactureYear = 2005,
            Mileage = 85000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 18674.47m,
            PricePerMonth = 575.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1725.0,
            CarModelID = ProtonGen2.ID,
            CarModel = ProtonGen2,
            Title = "Proton Gen2 264",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 40627.65m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 265",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 4850.0,
            ManufactureYear = 2011,
            Mileage = 100000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 40669.42m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2775.0,
            WidthMM = 1795.0,
            CarModelID = NissanTeana.ID,
            CarModel = NissanTeana,
            Title = "Nissan Teana 266",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 52000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1566.0,
            LengthMM = 4122.0,
            ManufactureYear = 2018,
            Mileage = 5000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 74643.6m,
            PricePerMonth = 4333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2606.0,
            WidthMM = 1778.0,
            CarModelID = RenaultCaptur.ID,
            CarModel = RenaultCaptur,
            Title = "Renault Captur 267",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4540.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 41404.24m,
            PricePerMonth = 3325.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 268",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 40800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1655.0,
            LengthMM = 5220.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 51996.67m,
            PricePerMonth = 3400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1750.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 269",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1447.0,
            LengthMM = 4676.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 22838.39m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2725.0,
            WidthMM = 1811.0,
            CarModelID = Peugeot407.ID,
            CarModel = Peugeot407,
            Title = "Peugeot 407 270",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 213000.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1414.0,
            LengthMM = 3850.0,
            ManufactureYear = 2019,
            Mileage = 10000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 175388.38m,
            PricePerMonth = 17750.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2495.0,
            WidthMM = 1727.0,
            CarModelID = Mini3Door.ID,
            CarModel = Mini3Door,
            Title = "Mini 3Door 271",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 53800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4075.0,
            ManufactureYear = 2013,
            Mileage = 105000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 48008.3m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 272",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 332800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1621.0,
            LengthMM = 4752.0,
            ManufactureYear = 2020,
            Mileage = 20000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 265470.16m,
            PricePerMonth = 27733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2864.0,
            WidthMM = 1918.0,
            CarModelID = BmwX4.ID,
            CarModel = BmwX4,
            Title = "Bmw X4 273",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4230.0,
            ManufactureYear = 2016,
            Mileage = 85000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 38268.51m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 274",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 218000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1468.0,
            LengthMM = 2939.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 210625.28m,
            PricePerMonth = 18166.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 4923.0,
            WidthMM = 1852.0,
            CarModelID = MercedesBenzE350E.ID,
            CarModel = MercedesBenzE350E,
            Title = "MercedesBenz E350E 275",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 63800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1464.0,
            LengthMM = 4899.0,
            ManufactureYear = 2010,
            Mileage = 190000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 69044.78m,
            PricePerMonth = 5316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw523I.ID,
            CarModel = Bmw523I,
            Title = "Bmw 523I 276",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1502.0,
            LengthMM = 4257.0,
            ManufactureYear = 2008,
            Mileage = 220000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 15078.09m,
            PricePerMonth = 824.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1680.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 277",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1373.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4265.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 92.0,
            PeakTorqueNM = 130.0,
            PredictedPrice = 38173.45m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = ProtonErtiga.ID,
            CarModel = ProtonErtiga,
            Title = "Proton Ertiga 278",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 57800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4525.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 52112.74m,
            PricePerMonth = 4816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1755.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 279",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 148800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1441.0,
            LengthMM = 4253.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 194.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 170584.92m,
            PricePerMonth = 12400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1800.0,
            CarModelID = MiniClubman.ID,
            CarModel = MiniClubman,
            Title = "Mini Clubman 280",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 46888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 54335.84m,
            PricePerMonth = 3907.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 281",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 18800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1535.0,
            LengthMM = 4205.0,
            ManufactureYear = 2007,
            Mileage = 125000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 153.0,
            PredictedPrice = 26982.64m,
            PricePerMonth = 1566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanLatio.ID,
            CarModel = NissanLatio,
            Title = "Nissan Latio 282",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 72888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4870.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 68056.6m,
            PricePerMonth = 6074.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2775.0,
            WidthMM = 1850.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 283",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1520.0,
            LengthMM = 4278.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 16499.77m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1680.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 284",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 29888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4150.0,
            ManufactureYear = 2012,
            Mileage = 105000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 35682.59m,
            PricePerMonth = 2490.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2655.0,
            WidthMM = 1600.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 285",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 847.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 53.0,
            PeakTorqueNM = 76.0,
            PredictedPrice = 11567.87m,
            PricePerMonth = 750.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 286",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2521.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1576.8166666666666,
            LengthMM = 4650.445833333333,
            ManufactureYear = 1997,
            Mileage = 205000.0,
            PeakPowerHP = 236.6375,
            PeakTorqueNM = 329.3333333333333,
            PredictedPrice = 26241.02m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2760.89029535865,
            WidthMM = 1859.5125,
            CarModelID = VolvoS70.ID,
            CarModel = VolvoS70,
            Title = "Volvo S70 287",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 41500.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4570.0,
            ManufactureYear = 2008,
            Mileage = 185000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 40839.16m,
            PricePerMonth = 3458.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = HondaStream.ID,
            CarModel = HondaStream,
            Title = "Honda Stream 288",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4205.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 32145.25m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 289",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 21800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1525.0,
            LengthMM = 4682.0,
            ManufactureYear = 2013,
            Mileage = 100000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 29396.6m,
            PricePerMonth = 1816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2710.0,
            WidthMM = 1815.0,
            CarModelID = Peugeot408.ID,
            CarModel = Peugeot408,
            Title = "Peugeot 408 290",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 105000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 24738.03m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 291",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 57800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 5020.0,
            ManufactureYear = 2016,
            Mileage = 85000.0,
            PeakPowerHP = 181.0,
            PeakTorqueNM = 222.0,
            PredictedPrice = 63408.62m,
            PricePerMonth = 4816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 292",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 268888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1443.0,
            LengthMM = 4963.0,
            ManufactureYear = 2019,
            Mileage = 15000.0,
            PeakPowerHP = 325.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 271653.42m,
            PricePerMonth = 22407.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2941.0,
            WidthMM = 1879.0,
            CarModelID = VolvoS90.ID,
            CarModel = VolvoS90,
            Title = "Volvo S90 293",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 18900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1590.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1389.0,
            LengthMM = 4448.0,
            ManufactureYear = 1999,
            Mileage = 200000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 144.0,
            PredictedPrice = 31238.2m,
            PricePerMonth = 1575.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2621.0,
            WidthMM = 1704.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 294",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5280.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 178.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 69109.92m,
            PricePerMonth = 5740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1815.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 295",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 48800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1855.0,
            LengthMM = 4400.0,
            ManufactureYear = 2016,
            Mileage = 135000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 47641.15m,
            PricePerMonth = 4066.67m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2725.0,
            WidthMM = 1695.0,
            CarModelID = NissanNv200.ID,
            CarModel = NissanNv200,
            Title = "Nissan Nv200 296",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1795.0,
            LengthMM = 5100.0,
            ManufactureYear = 2007,
            Mileage = 125000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 314.0,
            PredictedPrice = 44419.84m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 297",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25988.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2018,
            Mileage = 15000.0,
            PeakPowerHP = 68.0,
            PeakTorqueNM = 91.0,
            PredictedPrice = 27195.59m,
            PricePerMonth = 2165.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 298",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 20800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2008,
            Mileage = 135000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 25270.96m,
            PricePerMonth = 1733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 299",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 47360.66m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 300",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 56800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1495.0,
            LengthMM = 4060.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 56586.61m,
            PricePerMonth = 4733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2570.0,
            WidthMM = 1695.0,
            CarModelID = Mazda2.ID,
            CarModel = Mazda2,
            Title = "Mazda 2 301",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43870.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4215.0,
            ManufactureYear = 2010,
            Mileage = 100000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 39970.07m,
            PricePerMonth = 3655.83m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1700.0,
            CarModelID = HondaFreed.ID,
            CarModel = HondaFreed,
            Title = "Honda Freed 302",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 218000.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1557.0,
            LengthMM = 4299.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 306.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 215571.45m,
            PricePerMonth = 18166.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1822.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 303",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 26588.2m,
            PricePerMonth = 1958.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 304",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 15800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2000,
            Mileage = 115000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 53901.15m,
            PricePerMonth = 1316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC200.ID,
            CarModel = MercedesBenzC200,
            Title = "MercedesBenz C200 305",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 94999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4865.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 102220.49m,
            PricePerMonth = 7916.58m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 306",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 59800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4410.0,
            ManufactureYear = 2018,
            Mileage = 110000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 51900.04m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 307",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2016,
            Mileage = 70000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 37279.33m,
            PricePerMonth = 2908.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 308",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 68.0,
            PeakTorqueNM = 91.0,
            PredictedPrice = 27470.7m,
            PricePerMonth = 2158.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 309",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 575000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 2981.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1295.0,
            LengthMM = 4499.0,
            ManufactureYear = 2016,
            Mileage = 30000.0,
            PeakPowerHP = 420.0,
            PeakTorqueNM = 500.0,
            PredictedPrice = 409823.08m,
            PricePerMonth = 47916.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2450.0,
            WidthMM = 1808.0,
            CarModelID = Porsche911.ID,
            CarModel = Porsche911,
            Title = "Porsche 911 310",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 43988.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 4387.0,
            ManufactureYear = 2019,
            Mileage = 20000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 36548.04m,
            PricePerMonth = 3665.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 311",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 11800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4601.090693538827,
            ManufactureYear = 1999,
            Mileage = 215000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 181.0,
            PredictedPrice = 17026.53m,
            PricePerMonth = 983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2735.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaNadia.ID,
            CarModel = ToyotaNadia,
            Title = "Toyota Nadia 312",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 128000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 118573.34m,
            PricePerMonth = 10666.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1965.0,
            CarModelID = LandRoverRangeRoverEvoque.ID,
            CarModel = LandRoverRangeRoverEvoque,
            Title = "LandRover RangeRoverEvoque 313",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3690.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 91.0,
            PeakTorqueNM = 117.0,
            PredictedPrice = 23239.78m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 314",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 45800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1417.0,
            LengthMM = 4799.0,
            ManufactureYear = 2010,
            Mileage = 105000.0,
            PeakPowerHP = 200.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 52394.69m,
            PricePerMonth = 3816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2708.0,
            WidthMM = 1855.0,
            CarModelID = VolkswagenPassat.ID,
            CarModel = VolkswagenPassat,
            Title = "Volkswagen Passat 315",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1520.0,
            LengthMM = 4278.0,
            ManufactureYear = 2012,
            Mileage = 65000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 17623.54m,
            PricePerMonth = 1241.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2465.0,
            WidthMM = 1680.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 316",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1660.0,
            LengthMM = 3460.0,
            ManufactureYear = 2009,
            Mileage = 75000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 13414.61m,
            PricePerMonth = 1233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1500.0,
            CarModelID = PeroduaKenari.ID,
            CarModel = PeroduaKenari,
            Title = "Perodua Kenari 317",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2015,
            Mileage = 85000.0,
            PeakPowerHP = 67.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 23333.58m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 318",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2972.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1800.0,
            LengthMM = 4995.0,
            ManufactureYear = 2002,
            Mileage = 205000.0,
            PeakPowerHP = 246.0,
            PeakTorqueNM = 255.0,
            PredictedPrice = 23833.27m,
            PricePerMonth = 1400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2960.0,
            WidthMM = 1775.0,
            CarModelID = MitsubishiStorm.ID,
            CarModel = MitsubishiStorm,
            Title = "Mitsubishi Storm 319",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 41800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1779.0,
            LengthMM = 5295.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 314.0,
            PredictedPrice = 44459.8m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 320",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 45800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2017,
            Mileage = 65000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 39779.46m,
            PricePerMonth = 3816.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 321",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 84800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2019,
            Mileage = 105000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 285.0,
            PredictedPrice = 89879.27m,
            PricePerMonth = 7066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 322",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 29800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4580.0,
            ManufactureYear = 2011,
            Mileage = 100000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 33595.99m,
            PricePerMonth = 2483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2640.0,
            WidthMM = 1755.0,
            CarModelID = Mazda3.ID,
            CarModel = Mazda3,
            Title = "Mazda 3 323",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4530.0,
            ManufactureYear = 2011,
            Mileage = 120000.0,
            PeakPowerHP = 124.0,
            PeakTorqueNM = 156.0,
            PredictedPrice = 28480.72m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1775.0,
            CarModelID = KiaForte.ID,
            CarModel = KiaForte,
            Title = "Kia Forte 324",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 21800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1483.0,
            LengthMM = 4263.0,
            ManufactureYear = 2010,
            Mileage = 105000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 135.0,
            PredictedPrice = 25867.59m,
            PricePerMonth = 1816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2490.0,
            WidthMM = 1695.0,
            CarModelID = Mazda2.ID,
            CarModel = Mazda2,
            Title = "Mazda 2 325",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 178800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2018,
            Mileage = 65000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 186481.78m,
            PricePerMonth = 14900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC350E.ID,
            CarModel = MercedesBenzC350E,
            Title = "MercedesBenz C350E 326",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 163700.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 177760.46m,
            PricePerMonth = 13641.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC350E.ID,
            CarModel = MercedesBenzC350E,
            Title = "MercedesBenz C350E 327",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 51800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4075.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 48433.42m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 328",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 85800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4465.0,
            ManufactureYear = 2018,
            Mileage = 65000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 95325.71m,
            PricePerMonth = 7150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2665.0,
            WidthMM = 1800.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 329",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 6800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 847.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 3365.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 37.0,
            PeakTorqueNM = 63.0,
            PredictedPrice = 6268.27m,
            PricePerMonth = 566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 330",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 12888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 1997,
            Mileage = 225000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 30563.5m,
            PricePerMonth = 1074.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw318I.ID,
            CarModel = Bmw318I,
            Title = "Bmw 318I 331",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 225800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2016,
            Mileage = 40000.0,
            PeakPowerHP = 360.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 237714.3m,
            PricePerMonth = 18816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA45Amg.ID,
            CarModel = MercedesBenzA45Amg,
            Title = "MercedesBenz A45Amg 332",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 215000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 3604.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1705.0,
            LengthMM = 4855.0,
            ManufactureYear = 2014,
            Mileage = 105000.0,
            PeakPowerHP = 420.0,
            PeakTorqueNM = 550.0,
            PredictedPrice = 273880.54m,
            PricePerMonth = 17916.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2895.0,
            WidthMM = 1939.0,
            CarModelID = PorscheCayenne.ID,
            CarModel = PorscheCayenne,
            Title = "Porsche Cayenne 333",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4485.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 48223.63m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1700.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 334",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 88800.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1561.0,
            LengthMM = 4110.0,
            ManufactureYear = 2011,
            Mileage = 45000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 95440.94m,
            PricePerMonth = 7400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2595.0,
            WidthMM = 1789.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 335",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 78800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4795.0,
            ManufactureYear = 2009,
            Mileage = 85000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 223.0,
            PredictedPrice = 81831.16m,
            PricePerMonth = 6566.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 1950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 336",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 117800.0m,
            Colour = "Maroon",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1565.0,
            LengthMM = 4360.0,
            ManufactureYear = 2018,
            Mileage = 90000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 171.0,
            PredictedPrice = 94248.41m,
            PricePerMonth = 9816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2640.0,
            WidthMM = 1795.0,
            CarModelID = ToyotaCHr.ID,
            CarModel = ToyotaCHr,
            Title = "Toyota CHr 337",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 56800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 54023.12m,
            PricePerMonth = 4733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 338",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 195800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1762.0,
            LengthMM = 4886.0,
            ManufactureYear = 2017,
            Mileage = 65000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 198525.2m,
            PricePerMonth = 16316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2933.0,
            WidthMM = 1938.0,
            CarModelID = BmwX5.ID,
            CarModel = BmwX5,
            Title = "Bmw X5 339",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2017,
            Mileage = 20000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34778.13m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 340",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 70800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4620.0,
            ManufactureYear = 2015,
            Mileage = 60000.0,
            PeakPowerHP = 139.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 58751.25m,
            PricePerMonth = 5900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1776.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 341",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 4800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 659.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 3365.0,
            ManufactureYear = 2005,
            Mileage = 155000.0,
            PeakPowerHP = 31.0,
            PeakTorqueNM = 49.0,
            PredictedPrice = 5976.62m,
            PricePerMonth = 400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 342",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 39800.0m,
            Colour = "Yellow",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4540.0,
            ManufactureYear = 2007,
            Mileage = 115000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 188.0,
            PredictedPrice = 51435.65m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1750.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 343",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1430.0,
            LengthMM = 3490.0,
            ManufactureYear = 2004,
            Mileage = 90000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 12493.3m,
            PricePerMonth = 816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 344",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 15800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4070.0,
            ManufactureYear = 2005,
            Mileage = 175000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 19453.25m,
            PricePerMonth = 1316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2655.0,
            WidthMM = 1630.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 345",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1640.0,
            LengthMM = 3450.0,
            ManufactureYear = 2009,
            Mileage = 95000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 12297.87m,
            PricePerMonth = 1166.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1480.0,
            CarModelID = PeroduaKenari.ID,
            CarModel = PeroduaKenari,
            Title = "Perodua Kenari 346",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 71800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1715.0,
            LengthMM = 4640.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 76836.59m,
            PricePerMonth = 5983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2705.0,
            WidthMM = 1820.0,
            CarModelID = NissanXTrail.ID,
            CarModel = NissanXTrail,
            Title = "Nissan XTrail 347",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 36888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1762.0,
            LengthMM = 5173.0,
            ManufactureYear = 2010,
            Mileage = 190000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 330.0,
            PredictedPrice = 39668.59m,
            PricePerMonth = 3074.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1788.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 348",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 40800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4215.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 40471.45m,
            PricePerMonth = 3400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1700.0,
            CarModelID = HondaFreed.ID,
            CarModel = HondaFreed,
            Title = "Honda Freed 349",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 148333.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2018,
            Mileage = 80000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 134047.22m,
            PricePerMonth = 12361.08m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw330E.ID,
            CarModel = Bmw330E,
            Title = "Bmw 330E 350",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 203800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2019,
            Mileage = 30000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 154857.97m,
            PricePerMonth = 16983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC200.ID,
            CarModel = MercedesBenzC200,
            Title = "MercedesBenz C200 351",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 31888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 4850.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 182.0,
            PeakTorqueNM = 228.0,
            PredictedPrice = 47527.51m,
            PricePerMonth = 2657.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2775.0,
            WidthMM = 1795.0,
            CarModelID = NissanTeana.ID,
            CarModel = NissanTeana,
            Title = "Nissan Teana 352",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 49800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1417.0,
            LengthMM = 4799.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 200.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 56515.27m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2708.0,
            WidthMM = 1855.0,
            CarModelID = VolkswagenPassat.ID,
            CarModel = VolkswagenPassat,
            Title = "Volkswagen Passat 353",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 53800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1477.0,
            LengthMM = 4440.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 49671.15m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 354",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 129800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1474.0,
            LengthMM = 4879.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 123920.55m,
            PricePerMonth = 10816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE250.ID,
            CarModel = MercedesBenzE250,
            Title = "MercedesBenz E250 355",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 123333.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2016,
            Mileage = 50000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 139760.73m,
            PricePerMonth = 10277.75m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw320I.ID,
            CarModel = Bmw320I,
            Title = "Bmw 320I 356",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 36800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4150.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 35555.91m,
            PricePerMonth = 3066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2655.0,
            WidthMM = 1600.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 357",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1680.0,
            LengthMM = 4520.0,
            ManufactureYear = 2010,
            Mileage = 165000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 39392.76m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2620.0,
            WidthMM = 1820.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 358",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 29900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4730.0,
            ManufactureYear = 2005,
            Mileage = 160000.0,
            PeakPowerHP = 215.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 38899.89m,
            PricePerMonth = 2491.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaMarkX.ID,
            CarModel = ToyotaMarkX,
            Title = "Toyota MarkX 359",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 105800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1865.0,
            LengthMM = 4770.0,
            ManufactureYear = 2018,
            Mileage = 50000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 86481.96m,
            PricePerMonth = 8816.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2860.0,
            WidthMM = 1735.0,
            CarModelID = NissanSerena.ID,
            CarModel = NissanSerena,
            Title = "Nissan Serena 360",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 35393.7m,
            PricePerMonth = 3066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 361",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 45800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 3955.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 49552.24m,
            PricePerMonth = 3816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 362",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 53900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1668.0,
            LengthMM = 3989.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 57604.04m,
            PricePerMonth = 4491.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 363",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 48800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4540.0,
            ManufactureYear = 2013,
            Mileage = 125000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 38622.87m,
            PricePerMonth = 4066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 364",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34988.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2017,
            Mileage = 30000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34702.08m,
            PricePerMonth = 2915.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 365",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 127800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2693.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4760.0,
            ManufactureYear = 2012,
            Mileage = 50000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 246.0,
            PredictedPrice = 84822.53m,
            PricePerMonth = 10650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2790.0,
            WidthMM = 1885.0,
            CarModelID = ToyotaLandCruiserPrado.ID,
            CarModel = ToyotaLandCruiserPrado,
            Title = "Toyota LandCruiserPrado 366",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 35999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1702.0,
            LengthMM = 4524.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 179.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 55012.33m,
            PricePerMonth = 2999.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2690.0,
            WidthMM = 1838.0,
            CarModelID = FordKuga.ID,
            CarModel = FordKuga,
            Title = "Ford Kuga 367",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 179800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2493.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1880.0,
            LengthMM = 4935.0,
            ManufactureYear = 2015,
            Mileage = 55000.0,
            PeakPowerHP = 182.0,
            PeakTorqueNM = 235.0,
            PredictedPrice = 169234.72m,
            PricePerMonth = 14983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1850.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 368",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 35800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1794.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4550.0,
            ManufactureYear = 2005,
            Mileage = 150000.0,
            PeakPowerHP = 179.0,
            PeakTorqueNM = 170.0,
            PredictedPrice = 43504.32m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 369",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1655.0,
            LengthMM = 5220.0,
            ManufactureYear = 2013,
            Mileage = 110000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 43778.53m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1750.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 370",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 65800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 65536.46m,
            PricePerMonth = 5483.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 371",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 36500.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1655.0,
            LengthMM = 4410.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 36974.32m,
            PricePerMonth = 3041.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1820.0,
            CarModelID = HyundaiTucson.ID,
            CarModel = HyundaiTucson,
            Title = "Hyundai Tucson 372",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 27900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1425.0,
            LengthMM = 4395.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 26055.39m,
            PricePerMonth = 2325.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 373",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 35477.46m,
            PricePerMonth = 3075.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 374",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24800.0m,
            Colour = "Maroon",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1951.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1767.0,
            LengthMM = 4382.0,
            ManufactureYear = 2006,
            Mileage = 250000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 66866.71m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2557.0,
            WidthMM = 1776.0,
            CarModelID = LandRoverFreelander.ID,
            CarModel = LandRoverFreelander,
            Title = "LandRover Freelander 375",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2015,
            Mileage = 55000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 28746.26m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 376",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 288000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 2402.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 2286.0,
            LengthMM = 4369.0,
            ManufactureYear = 2008,
            Mileage = 105000.0,
            PeakPowerHP = 121.0,
            PeakTorqueNM = 360.0,
            PredictedPrice = 131097.44m,
            PricePerMonth = 24000.0m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.WormAndRoller],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2794.0,
            WidthMM = 1790.0,
            CarModelID = LandRoverDefender.ID,
            CarModel = LandRoverDefender,
            Title = "LandRover Defender 377",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 41300.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4585.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 180.0,
            PredictedPrice = 40651.13m,
            PricePerMonth = 3441.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1750.0,
            CarModelID = Mazda5.ID,
            CarModel = Mazda5,
            Title = "Mazda 5 378",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 27800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1468.0,
            LengthMM = 4841.0,
            ManufactureYear = 2004,
            Mileage = 95000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 58629.1m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2888.0,
            WidthMM = 1846.0,
            CarModelID = Bmw525I.ID,
            CarModel = Bmw525I,
            Title = "Bmw 525I 379",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26500.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1760.0,
            LengthMM = 5128.0,
            ManufactureYear = 2006,
            Mileage = 235000.0,
            PeakPowerHP = 121.0,
            PeakTorqueNM = 262.0,
            PredictedPrice = 40896.84m,
            PricePerMonth = 2208.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1810.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 380",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 63896.63m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 381",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5230.0,
            ManufactureYear = 2015,
            Mileage = 125000.0,
            PeakPowerHP = 174.0,
            PeakTorqueNM = 403.0,
            PredictedPrice = 62955.68m,
            PricePerMonth = 5741.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3200.0,
            WidthMM = 1850.0,
            CarModelID = NissanNavara.ID,
            CarModel = NissanNavara,
            Title = "Nissan Navara 382",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 22888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4830.0,
            ManufactureYear = 2007,
            Mileage = 95000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 186.0,
            PredictedPrice = 41064.87m,
            PricePerMonth = 1907.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1820.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 383",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 119900.0m,
            Colour = "Yellow",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 3386.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1305.0,
            LengthMM = 4341.0,
            ManufactureYear = 2006,
            Mileage = 42000.0,
            PeakPowerHP = 295.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 186539.79m,
            PricePerMonth = 9991.67m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2415.0,
            WidthMM = 1801.0,
            CarModelID = PorscheCayman.ID,
            CarModel = PorscheCayman,
            Title = "Porsche Cayman 384",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 148800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1494.0,
            LengthMM = 4417.0,
            ManufactureYear = 2016,
            Mileage = 50000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 141835.25m,
            PricePerMonth = 12400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1804.0,
            CarModelID = MercedesBenzGla200.ID,
            CarModel = MercedesBenzGla200,
            Title = "MercedesBenz Gla200 385",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 31000.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 31754.68m,
            PricePerMonth = 2583.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 386",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4530.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 124.0,
            PeakTorqueNM = 156.0,
            PredictedPrice = 32190.6m,
            PricePerMonth = 1991.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2650.0,
            WidthMM = 1775.0,
            CarModelID = KiaForte.ID,
            CarModel = KiaForte,
            Title = "Kia Forte 387",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 29880.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1975.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1680.0,
            LengthMM = 4325.0,
            ManufactureYear = 2010,
            Mileage = 75000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 36678.18m,
            PricePerMonth = 2490.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2630.0,
            WidthMM = 1795.0,
            CarModelID = HyundaiTucson.ID,
            CarModel = HyundaiTucson,
            Title = "Hyundai Tucson 388",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 106800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2393.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5330.0,
            ManufactureYear = 2018,
            Mileage = 90000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 95909.43m,
            PricePerMonth = 8900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3085.0,
            WidthMM = 1855.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 389",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 59333.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4580.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 40708.98m,
            PricePerMonth = 4944.42m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1755.0,
            CarModelID = Mazda3.ID,
            CarModel = Mazda3,
            Title = "Mazda 3 390",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 45800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4215.0,
            ManufactureYear = 2011,
            Mileage = 140000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 41012.81m,
            PricePerMonth = 3816.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1700.0,
            CarModelID = HondaFreed.ID,
            CarModel = HondaFreed,
            Title = "Honda Freed 391",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39888.0m,
            Colour = "Beige",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 3655.0,
            ManufactureYear = 2005,
            Mileage = 150000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 51170.7m,
            PricePerMonth = 3324.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2467.0,
            WidthMM = 1925.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 392",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 143800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4624.0,
            ManufactureYear = 2015,
            Mileage = 72500.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 137013.82m,
            PricePerMonth = 11983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw328I.ID,
            CarModel = Bmw328I,
            Title = "Bmw 328I 393",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4825.0,
            ManufactureYear = 2003,
            Mileage = 110000.0,
            PeakPowerHP = 207.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 27959.27m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2720.0,
            WidthMM = 1810.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 394",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 199800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2493.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1880.0,
            LengthMM = 4935.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 182.0,
            PeakTorqueNM = 235.0,
            PredictedPrice = 177804.12m,
            PricePerMonth = 16650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1850.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 395",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 26800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1660.0,
            LengthMM = 4650.0,
            ManufactureYear = 2004,
            Mileage = 165000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 32831.86m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2825.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaIpsum.ID,
            CarModel = ToyotaIpsum,
            Title = "Toyota Ipsum 396",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 122888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4795.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 223.0,
            PredictedPrice = 101092.86m,
            PricePerMonth = 10240.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 397",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 93700.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1471.0,
            LengthMM = 4868.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 310.0,
            PredictedPrice = 93097.58m,
            PricePerMonth = 7808.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 2071.0,
            CarModelID = MercedesBenzE250Cgi.ID,
            CarModel = MercedesBenzE250Cgi,
            Title = "MercedesBenz E250Cgi 398",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 99800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2014,
            Mileage = 40000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 114766.73m,
            PricePerMonth = 8316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA180.ID,
            CarModel = MercedesBenzA180,
            Title = "MercedesBenz A180 399",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 149800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4865.0,
            ManufactureYear = 2014,
            Mileage = 35000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 131374.58m,
            PricePerMonth = 12483.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 400",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24900.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4145.0,
            ManufactureYear = 2007,
            Mileage = 170000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 28316.98m,
            PricePerMonth = 2075.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2460.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaYaris.ID,
            CarModel = ToyotaYaris,
            Title = "Toyota Yaris 401",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 79800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4999.0,
            ManufactureYear = 2019,
            Mileage = 5000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 75171.63m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 402",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2017,
            Mileage = 97000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 57861.05m,
            PricePerMonth = 5566.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 403",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 85800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1925.0,
            LengthMM = 5125.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 392.0,
            PredictedPrice = 87120.49m,
            PricePerMonth = 7150.0m,
            SeatCapacity = 11,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3200.0,
            WidthMM = 1920.0,
            CarModelID = HyundaiGrandStarex.ID,
            CarModel = HyundaiGrandStarex,
            Title = "Hyundai GrandStarex 404",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 3962.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 26471.82m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2538.0,
            WidthMM = 1739.0,
            CarModelID = Peugeot208.ID,
            CarModel = Peugeot208,
            Title = "Peugeot 208 405",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 125800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1679.0,
            LengthMM = 4584.0,
            ManufactureYear = 2018,
            Mileage = 10000.0,
            PeakPowerHP = 193.0,
            PeakTorqueNM = 243.0,
            PredictedPrice = 142677.22m,
            PricePerMonth = 10483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1855.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 406",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1587.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4601.090693538827,
            ManufactureYear = 1995,
            Mileage = 255000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 22355.79m,
            PricePerMonth = 816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaCorolla.ID,
            CarModel = ToyotaCorolla,
            Title = "Toyota Corolla 407",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 60000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 4000.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1484.0,
            LengthMM = 5179.0,
            ManufactureYear = 2007,
            Mileage = 105000.0,
            PeakPowerHP = 306.0,
            PeakTorqueNM = 390.0,
            PredictedPrice = 92172.46m,
            PricePerMonth = 5000.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3128.0,
            WidthMM = 1902.0,
            CarModelID = Bmw740Li.ID,
            CarModel = Bmw740Li,
            Title = "Bmw 740Li 408",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 7800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 659.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 3365.0,
            ManufactureYear = 2009,
            Mileage = 125000.0,
            PeakPowerHP = 31.0,
            PeakTorqueNM = 49.0,
            PredictedPrice = 6510.86m,
            PricePerMonth = 650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 409",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 198800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2457.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4595.0,
            ManufactureYear = 2016,
            Mileage = 35000.0,
            PeakPowerHP = 300.0,
            PeakTorqueNM = 407.0,
            PredictedPrice = 213114.38m,
            PricePerMonth = 16566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1795.0,
            CarModelID = SubaruWrxSti.ID,
            CarModel = SubaruWrxSti,
            Title = "Subaru WrxSti 410",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 50800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4410.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 42997.0m,
            PricePerMonth = 4233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 411",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4395.0,
            ManufactureYear = 2010,
            Mileage = 125000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 35752.06m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 412",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 44800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 38235.33m,
            PricePerMonth = 3733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 413",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 145800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1561.0,
            LengthMM = 4110.0,
            ManufactureYear = 2017,
            Mileage = 55000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 124778.65m,
            PricePerMonth = 12150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2595.0,
            WidthMM = 1789.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 414",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 12800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2011,
            Mileage = 70000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 14710.9m,
            PricePerMonth = 1066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 415",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 67800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4825.0,
            ManufactureYear = 2013,
            Mileage = 125000.0,
            PeakPowerHP = 148.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 60252.55m,
            PricePerMonth = 5650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1825.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 416",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 69999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1715.0,
            LengthMM = 4640.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 171.0,
            PeakTorqueNM = 233.0,
            PredictedPrice = 71073.37m,
            PricePerMonth = 5833.25m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2705.0,
            WidthMM = 1820.0,
            CarModelID = NissanXTrail.ID,
            CarModel = NissanXTrail,
            Title = "Nissan XTrail 417",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 188888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 4806.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1688.0,
            LengthMM = 4846.0,
            ManufactureYear = 2013,
            Mileage = 105000.0,
            PeakPowerHP = 420.0,
            PeakTorqueNM = 515.0,
            PredictedPrice = 192766.05m,
            PricePerMonth = 15740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2895.0,
            WidthMM = 1954.0,
            CarModelID = PorscheCayenne.ID,
            CarModel = PorscheCayenne,
            Title = "Porsche Cayenne 418",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 47800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1655.0,
            LengthMM = 5220.0,
            ManufactureYear = 2014,
            Mileage = 125000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 44651.47m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1750.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 419",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 56800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4485.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 48223.63m,
            PricePerMonth = 4733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1700.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 420",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 29800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1471.0,
            LengthMM = 4821.0,
            ManufactureYear = 2012,
            Mileage = 225000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 41049.31m,
            PricePerMonth = 2483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2794.0,
            WidthMM = 1834.0,
            CarModelID = HyundaiSonata.ID,
            CarModel = HyundaiSonata,
            Title = "Hyundai Sonata 421",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 129800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1301.0,
            LengthMM = 4134.0,
            ManufactureYear = 2013,
            Mileage = 120000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 143704.65m,
            PricePerMonth = 10816.67m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2430.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzSlk200.ID,
            CarModel = MercedesBenzSlk200,
            Title = "MercedesBenz Slk200 422",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 78800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1795.0,
            LengthMM = 4735.0,
            ManufactureYear = 2017,
            Mileage = 55000.0,
            PeakPowerHP = 139.0,
            PeakTorqueNM = 183.0,
            PredictedPrice = 86979.82m,
            PricePerMonth = 6566.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1830.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 423",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1438.0,
            LengthMM = 4477.0,
            ManufactureYear = 2011,
            Mileage = 185000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 17646.17m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1725.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 424",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1520.0,
            LengthMM = 4278.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 15280.44m,
            PricePerMonth = 1158.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2465.0,
            WidthMM = 1680.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 425",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4205.0,
            ManufactureYear = 2013,
            Mileage = 100000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 31398.64m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 426",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 25500.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2008,
            Mileage = 125000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 26423.41m,
            PricePerMonth = 2125.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 427",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4620.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 139.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 55521.87m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1776.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 428",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 188888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 4806.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1688.0,
            LengthMM = 4846.0,
            ManufactureYear = 2013,
            Mileage = 110000.0,
            PeakPowerHP = 420.0,
            PeakTorqueNM = 515.0,
            PredictedPrice = 194065.57m,
            PricePerMonth = 15740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2895.0,
            WidthMM = 1954.0,
            CarModelID = PorscheCayenne.ID,
            CarModel = PorscheCayenne,
            Title = "Porsche Cayenne 429",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 32800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1525.0,
            LengthMM = 3920.0,
            ManufactureYear = 2008,
            Mileage = 105000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 35838.4m,
            PricePerMonth = 2733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2500.0,
            WidthMM = 1695.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 430",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1490.0,
            LengthMM = 4480.0,
            ManufactureYear = 2012,
            Mileage = 125000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 33324.6m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1745.0,
            CarModelID = ToyotaPrius.ID,
            CarModel = ToyotaPrius,
            Title = "Toyota Prius 431",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 135999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1432.0,
            LengthMM = 4630.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 128961.72m,
            PricePerMonth = 11333.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2699.0,
            WidthMM = 1777.0,
            CarModelID = MercedesBenzCla200.ID,
            CarModel = MercedesBenzCla200,
            Title = "MercedesBenz Cla200 432",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 29999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4425.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 31728.59m,
            PricePerMonth = 2499.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 433",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 31988.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 4850.0,
            ManufactureYear = 2011,
            Mileage = 75000.0,
            PeakPowerHP = 182.0,
            PeakTorqueNM = 228.0,
            PredictedPrice = 47527.51m,
            PricePerMonth = 2665.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1795.0,
            CarModelID = NissanTeana.ID,
            CarModel = NissanTeana,
            Title = "Nissan Teana 434",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 63800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1618.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1565.0,
            LengthMM = 4135.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 49645.11m,
            PricePerMonth = 5316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2530.0,
            WidthMM = 1765.0,
            CarModelID = NissanJuke.ID,
            CarModel = NissanJuke,
            Title = "Nissan Juke 435",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 78888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1470.0,
            LengthMM = 4850.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 213.0,
            PredictedPrice = 85199.08m,
            PricePerMonth = 6574.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2775.0,
            WidthMM = 1825.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 436",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 31800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4425.0,
            ManufactureYear = 2014,
            Mileage = 100000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 31655.49m,
            PricePerMonth = 2650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 437",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1948.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4520.0,
            ManufactureYear = 2000,
            Mileage = 205000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 15997.81m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = VolvoV40.ID,
            CarModel = VolvoV40,
            Title = "Volvo V40 438",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 135000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 2893.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1304.0,
            LengthMM = 4347.0,
            ManufactureYear = 2009,
            Mileage = 90000.0,
            PeakPowerHP = 265.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 181799.78m,
            PricePerMonth = 11250.0m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2416.0,
            WidthMM = 1801.0,
            CarModelID = PorscheCayman.ID,
            CarModel = PorscheCayman,
            Title = "Porsche Cayman 439",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4536.0,
            ManufactureYear = 2015,
            Mileage = 85000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 31461.02m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonSuprimaS.ID,
            CarModel = ProtonSuprimaS,
            Title = "Proton SuprimaS 440",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68999.0m,
            Colour = "Beige",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2017,
            Mileage = 6600.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 75647.25m,
            PricePerMonth = 5749.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 441",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 555000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1298.0,
            LengthMM = 4689.0,
            ManufactureYear = 2017,
            Mileage = 5000.0,
            PeakPowerHP = 231.0,
            PeakTorqueNM = 320.0,
            PredictedPrice = 290641.14m,
            PricePerMonth = 46250.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1942.0,
            CarModelID = BmwI8.ID,
            CarModel = BmwI8,
            Title = "Bmw I8 442",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 790000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 3799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1269.0,
            LengthMM = 4545.0,
            ManufactureYear = 2014,
            Mileage = 15000.0,
            PeakPowerHP = 476.0,
            PeakTorqueNM = 440.0,
            PredictedPrice = 428973.41m,
            PricePerMonth = 65833.33m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2450.0,
            WidthMM = 1852.0,
            CarModelID = Porsche911.ID,
            CarModel = Porsche911,
            Title = "Porsche 911 443",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 275888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1443.0,
            LengthMM = 4963.0,
            ManufactureYear = 2019,
            Mileage = 15000.0,
            PeakPowerHP = 325.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 271653.42m,
            PricePerMonth = 22990.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2941.0,
            WidthMM = 1879.0,
            CarModelID = VolvoS90.ID,
            CarModel = VolvoS90,
            Title = "Volvo S90 444",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 26990.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1794.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4540.0,
            ManufactureYear = 2008,
            Mileage = 155000.0,
            PeakPowerHP = 132.0,
            PeakTorqueNM = 170.0,
            PredictedPrice = 33604.82m,
            PricePerMonth = 2249.17m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 445",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 77800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4480.0,
            ManufactureYear = 2016,
            Mileage = 50000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 192.0,
            PredictedPrice = 80876.92m,
            PricePerMonth = 6483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1855.0,
            CarModelID = KiaSportage.ID,
            CarModel = KiaSportage,
            Title = "Kia Sportage 446",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 85633.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4865.0,
            ManufactureYear = 2008,
            Mileage = 85000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 95075.44m,
            PricePerMonth = 7136.08m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 447",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1948.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4520.0,
            ManufactureYear = 2000,
            Mileage = 195000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 16400.35m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = VolvoV40.ID,
            CarModel = VolvoV40,
            Title = "Volvo V40 448",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 115800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1675.0,
            LengthMM = 4550.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 105916.2m,
            PricePerMonth = 9650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 449",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 210800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1405.0,
            LengthMM = 4686.0,
            ManufactureYear = 2017,
            Mileage = 40000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 199938.13m,
            PricePerMonth = 17566.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC250.ID,
            CarModel = MercedesBenzC250,
            Title = "MercedesBenz C250 450",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3690.0,
            ManufactureYear = 2013,
            Mileage = 135000.0,
            PeakPowerHP = 91.0,
            PeakTorqueNM = 117.0,
            PredictedPrice = 21759.4m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 451",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 379000.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4709.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 387.0,
            PeakTorqueNM = 500.0,
            PredictedPrice = 292784.41m,
            PricePerMonth = 31583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2851.0,
            WidthMM = 1827.0,
            CarModelID = BmwM340I.ID,
            CarModel = BmwM340I,
            Title = "Bmw M340I 452",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 4387.0,
            ManufactureYear = 2017,
            Mileage = 90000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 33578.15m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 453",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 32956.59m,
            PricePerMonth = 3066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 454",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 89800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1925.0,
            LengthMM = 5125.0,
            ManufactureYear = 2017,
            Mileage = 95000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 392.0,
            PredictedPrice = 78227.47m,
            PricePerMonth = 7483.33m,
            SeatCapacity = 11,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3200.0,
            WidthMM = 1920.0,
            CarModelID = HyundaiGrandStarex.ID,
            CarModel = HyundaiGrandStarex,
            Title = "Hyundai GrandStarex 455",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 488888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1624.0,
            LengthMM = 4696.0,
            ManufactureYear = 2019,
            Mileage = 25000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 370.0,
            PredictedPrice = 330004.81m,
            PricePerMonth = 40740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2807.0,
            WidthMM = 1923.0,
            CarModelID = PorscheMacan.ID,
            CarModel = PorscheMacan,
            Title = "Porsche Macan 456",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 22800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1485.0,
            LengthMM = 4618.0,
            ManufactureYear = 2014,
            Mileage = 140000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 195.0,
            PredictedPrice = 38676.43m,
            PricePerMonth = 1900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2702.0,
            WidthMM = 1813.0,
            CarModelID = RenaultFluence.ID,
            CarModel = RenaultFluence,
            Title = "Renault Fluence 457",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 105800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2014,
            Mileage = 50000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 115479.48m,
            PricePerMonth = 8816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA200.ID,
            CarModel = MercedesBenzA200,
            Title = "MercedesBenz A200 458",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 288800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1624.0,
            LengthMM = 4681.0,
            ManufactureYear = 2015,
            Mileage = 60000.0,
            PeakPowerHP = 237.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 240339.61m,
            PricePerMonth = 24066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2807.0,
            WidthMM = 1923.0,
            CarModelID = PorscheMacan.ID,
            CarModel = PorscheMacan,
            Title = "Porsche Macan 459",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 63900.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2018,
            Mileage = 40000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 63878.84m,
            PricePerMonth = 5325.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 460",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 438000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 4367.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1855.0,
            LengthMM = 4999.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 340.0,
            PeakTorqueNM = 700.0,
            PredictedPrice = 372443.36m,
            PricePerMonth = 36500.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2922.0,
            WidthMM = 2220.0,
            CarModelID = LandRoverRangeRover.ID,
            CarModel = LandRoverRangeRover,
            Title = "LandRover RangeRover 461",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27500.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1456.0,
            LengthMM = 4792.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 158.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 36702.64m,
            PricePerMonth = 2291.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2817.0,
            WidthMM = 2068.0,
            CarModelID = Peugeot508.ID,
            CarModel = Peugeot508,
            Title = "Peugeot 508 462",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 47800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1404.0,
            LengthMM = 4256.0,
            ManufactureYear = 2012,
            Mileage = 160000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 68821.45m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2578.0,
            WidthMM = 1810.0,
            CarModelID = VolkswagenScirocco.ID,
            CarModel = VolkswagenScirocco,
            Title = "Volkswagen Scirocco 463",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 47800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4870.0,
            ManufactureYear = 2015,
            Mileage = 55000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 67314.83m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2775.0,
            WidthMM = 1850.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 464",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 22800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1435.0,
            LengthMM = 4395.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 25499.04m,
            PricePerMonth = 1900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 465",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 98800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1464.0,
            LengthMM = 4899.0,
            ManufactureYear = 2012,
            Mileage = 135000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 120934.55m,
            PricePerMonth = 8233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw528I.ID,
            CarModel = Bmw528I,
            Title = "Bmw 528I 466",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 109500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 123221.68m,
            PricePerMonth = 9125.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA200.ID,
            CarModel = MercedesBenzA200,
            Title = "MercedesBenz A200 467",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 45884.67m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 468",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 76800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4525.0,
            ManufactureYear = 2016,
            Mileage = 95000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 60590.13m,
            PricePerMonth = 6400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1755.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 469",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30900.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1680.0,
            LengthMM = 4520.0,
            ManufactureYear = 2008,
            Mileage = 120000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 41182.85m,
            PricePerMonth = 2575.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2620.0,
            WidthMM = 1820.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 470",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 59900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4620.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 139.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 58303.25m,
            PricePerMonth = 4991.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1776.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 471",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 78888.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 91712.72m,
            PricePerMonth = 6574.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 472",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1800.0,
            LengthMM = 4935.0,
            ManufactureYear = 2002,
            Mileage = 195000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 22577.41m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2960.0,
            WidthMM = 1775.0,
            CarModelID = MitsubishiStorm.ID,
            CarModel = MitsubishiStorm,
            Title = "Mitsubishi Storm 473",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 195000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1450.0,
            LengthMM = 4862.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 320.0,
            PredictedPrice = 200858.2m,
            PricePerMonth = 16250.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2837.0,
            WidthMM = 1871.0,
            CarModelID = VolkswagenArteon.ID,
            CarModel = VolkswagenArteon,
            Title = "Volkswagen Arteon 474",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 65800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2016,
            Mileage = 40000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 71217.35m,
            PricePerMonth = 5483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 475",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 20800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2008,
            Mileage = 135000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 25270.96m,
            PricePerMonth = 1733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 476",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 67800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 154.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 63786.94m,
            PricePerMonth = 5650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 477",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 139800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1437.0,
            LengthMM = 4630.0,
            ManufactureYear = 2015,
            Mileage = 60000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 121429.5m,
            PricePerMonth = 11650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2699.0,
            WidthMM = 1777.0,
            CarModelID = MercedesBenzCla180.ID,
            CarModel = MercedesBenzCla180,
            Title = "MercedesBenz Cla180 478",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 210800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1483.0,
            LengthMM = 4936.0,
            ManufactureYear = 2018,
            Mileage = 20000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 197968.97m,
            PricePerMonth = 17566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2975.0,
            WidthMM = 1868.0,
            CarModelID = Bmw530E.ID,
            CarModel = Bmw530E,
            Title = "Bmw 530E 479",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 46800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4075.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 48736.63m,
            PricePerMonth = 3900.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 480",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 319999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1468.0,
            LengthMM = 4923.0,
            ManufactureYear = 2019,
            Mileage = 10000.0,
            PeakPowerHP = 299.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 253909.97m,
            PricePerMonth = 26666.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2939.0,
            WidthMM = 1852.0,
            CarModelID = MercedesBenzE350.ID,
            CarModel = MercedesBenzE350,
            Title = "MercedesBenz E350 481",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 17900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4291.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 24567.76m,
            PricePerMonth = 1491.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 482",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 79800.0m,
            Colour = "Maroon",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1535.0,
            LengthMM = 4275.0,
            ManufactureYear = 2016,
            Mileage = 80000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 204.0,
            PredictedPrice = 75829.31m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2570.0,
            WidthMM = 1765.0,
            CarModelID = MazdaCx3.ID,
            CarModel = MazdaCx3,
            Title = "Mazda Cx3 483",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3685.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 28914.28m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 484",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 27300.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2008,
            Mileage = 95000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 26929.5m,
            PricePerMonth = 2275.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 485",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 380000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 2979.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1410.0,
            LengthMM = 4468.0,
            ManufactureYear = 2018,
            Mileage = 25000.0,
            PeakPowerHP = 370.0,
            PeakTorqueNM = 465.0,
            PredictedPrice = 290652.82m,
            PricePerMonth = 31666.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2693.0,
            WidthMM = 1854.0,
            CarModelID = BmwM2.ID,
            CarModel = BmwM2,
            Title = "Bmw M2 486",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 109900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1740.0,
            LengthMM = 4690.0,
            ManufactureYear = 2019,
            Mileage = 45000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 92869.51m,
            PricePerMonth = 9158.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2705.0,
            WidthMM = 1820.0,
            CarModelID = NissanXTrail.ID,
            CarModel = NissanXTrail,
            Title = "Nissan XTrail 487",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 116800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4865.0,
            ManufactureYear = 2011,
            Mileage = 100000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 102220.49m,
            PricePerMonth = 9733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 488",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 59888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1797.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1432.0,
            LengthMM = 4581.0,
            ManufactureYear = 2012,
            Mileage = 105000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 83399.58m,
            PricePerMonth = 4990.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1770.0,
            CarModelID = MercedesBenzC180Cgi.ID,
            CarModel = MercedesBenzC180Cgi,
            Title = "MercedesBenz C180Cgi 489",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1430.0,
            LengthMM = 3490.0,
            ManufactureYear = 2003,
            Mileage = 155000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 12019.26m,
            PricePerMonth = 1233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 490",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 15888.0m,
            Colour = "Yellow",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4070.0,
            ManufactureYear = 2006,
            Mileage = 115000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 20444.25m,
            PricePerMonth = 1324.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2655.0,
            WidthMM = 1630.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 491",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 89999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1440.0,
            LengthMM = 4329.0,
            ManufactureYear = 2016,
            Mileage = 100000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 106465.55m,
            PricePerMonth = 7499.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2690.0,
            WidthMM = 1765.0,
            CarModelID = Bmw118I.ID,
            CarModel = Bmw118I,
            Title = "Bmw 118I 492",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 118800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 129999.76m,
            PricePerMonth = 9900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA250.ID,
            CarModel = MercedesBenzA250,
            Title = "MercedesBenz A250 493",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 26500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4730.0,
            ManufactureYear = 2005,
            Mileage = 160000.0,
            PeakPowerHP = 215.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 38899.89m,
            PricePerMonth = 2208.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaMarkX.ID,
            CarModel = ToyotaMarkX,
            Title = "Toyota MarkX 494",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 308900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1988.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1295.0,
            LengthMM = 4379.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 299.0,
            PeakTorqueNM = 380.0,
            PredictedPrice = 360018.91m,
            PricePerMonth = 25741.67m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2475.0,
            WidthMM = 1801.0,
            CarModelID = Porsche718.ID,
            CarModel = Porsche718,
            Title = "Porsche 718 495",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 47800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1795.0,
            LengthMM = 5100.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 314.0,
            PredictedPrice = 45280.56m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 496",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 72800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1447.0,
            LengthMM = 4581.0,
            ManufactureYear = 2012,
            Mileage = 70000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 78171.27m,
            PricePerMonth = 6066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 2020.0,
            CarModelID = MercedesBenzC200Cgi.ID,
            CarModel = MercedesBenzC200Cgi,
            Title = "MercedesBenz C200Cgi 497",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 128800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 135261.5m,
            PricePerMonth = 10733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA250.ID,
            CarModel = MercedesBenzA250,
            Title = "MercedesBenz A250 498",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 32164.69m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 499",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 35777.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1400.0,
            LengthMM = 4480.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 194.0,
            PredictedPrice = 78911.06m,
            PricePerMonth = 2981.42m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2650.0,
            WidthMM = 1765.0,
            CarModelID = KiaForteKoup.ID,
            CarModel = KiaForteKoup,
            Title = "Kia ForteKoup 500",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 146800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2015,
            Mileage = 50000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 158462.87m,
            PricePerMonth = 12233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC200.ID,
            CarModel = MercedesBenzC200,
            Title = "MercedesBenz C200 501",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 56900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2359.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1730.0,
            LengthMM = 4685.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 178.0,
            PeakTorqueNM = 227.0,
            PredictedPrice = 73206.83m,
            PricePerMonth = 4741.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1885.0,
            CarModelID = KiaSorento.ID,
            CarModel = KiaSorento,
            Title = "Kia Sorento 502",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 22500.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 67.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 26600.63m,
            PricePerMonth = 1875.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 503",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 119800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4624.0,
            ManufactureYear = 2013,
            Mileage = 105000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 102882.15m,
            PricePerMonth = 9983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw328I.ID,
            CarModel = Bmw328I,
            Title = "Bmw 328I 504",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 209900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1639.0,
            LengthMM = 4656.0,
            ManufactureYear = 2016,
            Mileage = 110000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 192529.93m,
            PricePerMonth = 17491.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2873.0,
            WidthMM = 1890.0,
            CarModelID = MercedesBenzGlc250.ID,
            CarModel = MercedesBenzGlc250,
            Title = "MercedesBenz Glc250 505",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 259800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1630.0,
            LengthMM = 4640.0,
            ManufactureYear = 2018,
            Mileage = 55000.0,
            PeakPowerHP = 238.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 182015.61m,
            PricePerMonth = 21650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2660.0,
            WidthMM = 1845.0,
            CarModelID = LexusNx300.ID,
            CarModel = LexusNx300,
            Title = "Lexus Nx300 506",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1800.0,
            LengthMM = 4935.0,
            ManufactureYear = 2002,
            Mileage = 195000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 22577.41m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2960.0,
            WidthMM = 1775.0,
            CarModelID = MitsubishiStorm.ID,
            CarModel = MitsubishiStorm,
            Title = "Mitsubishi Storm 507",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 5888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 1299.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1385.0,
            LengthMM = 4270.0,
            ManufactureYear = 2001,
            Mileage = 155000.0,
            PeakPowerHP = 75.0,
            PeakTorqueNM = 108.0,
            PredictedPrice = 9526.82m,
            PricePerMonth = 490.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2500.0,
            WidthMM = 1680.0,
            CarModelID = ProtonWira.ID,
            CarModel = ProtonWira,
            Title = "Proton Wira 508",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 35800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2994.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1935.0,
            LengthMM = 4800.0,
            ManufactureYear = 2004,
            Mileage = 135000.0,
            PeakPowerHP = 220.0,
            PeakTorqueNM = 304.0,
            PredictedPrice = 54966.95m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 509",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2016,
            Mileage = 100000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 34050.38m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 510",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 288800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1776.0,
            LengthMM = 4950.0,
            ManufactureYear = 2018,
            Mileage = 60000.0,
            PeakPowerHP = 320.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 244703.26m,
            PricePerMonth = 24066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2984.0,
            WidthMM = 1958.0,
            CarModelID = VolvoXc90.ID,
            CarModel = VolvoXc90,
            Title = "Volvo Xc90 511",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33333.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1760.0,
            LengthMM = 4585.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 38566.96m,
            PricePerMonth = 2777.75m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 512",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4205.0,
            ManufactureYear = 2010,
            Mileage = 95000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 30079.5m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 513",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 4800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2003,
            Mileage = 175000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 179.0,
            PredictedPrice = 32920.57m,
            PricePerMonth = 400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1730.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 514",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2500.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1760.0,
            LengthMM = 5128.0,
            ManufactureYear = 2005,
            Mileage = 205000.0,
            PeakPowerHP = 121.0,
            PeakTorqueNM = 262.0,
            PredictedPrice = 38756.06m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1810.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 515",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 35800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2012,
            Mileage = 70000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 33338.24m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 516",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 22800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 26490.02m,
            PricePerMonth = 1900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 517",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19999.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2009,
            Mileage = 105000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 26878.25m,
            PricePerMonth = 1666.58m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 518",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1373.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4265.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 92.0,
            PeakTorqueNM = 130.0,
            PredictedPrice = 39193.22m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = ProtonErtiga.ID,
            CarModel = ProtonErtiga,
            Title = "Proton Ertiga 519",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 29800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4769.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 41568.58m,
            PricePerMonth = 2483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2712.0,
            WidthMM = 1820.0,
            CarModelID = VolkswagenPassat.ID,
            CarModel = VolkswagenPassat,
            Title = "Volkswagen Passat 520",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 51800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 3955.0,
            ManufactureYear = 2015,
            Mileage = 110000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 49202.55m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 521",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 3800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1360.0,
            LengthMM = 4110.0,
            ManufactureYear = 1999,
            Mileage = 185000.0,
            PeakPowerHP = 75.0,
            PeakTorqueNM = 109.0,
            PredictedPrice = 6391.75m,
            PricePerMonth = 316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2380.0,
            WidthMM = 1655.0,
            CarModelID = ProtonIswara.ID,
            CarModel = ProtonIswara,
            Title = "Proton Iswara 522",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4825.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 49351.98m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1820.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 523",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 46900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4215.0,
            ManufactureYear = 2010,
            Mileage = 135000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 39294.87m,
            PricePerMonth = 3908.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1700.0,
            CarModelID = HondaFreed.ID,
            CarModel = HondaFreed,
            Title = "Honda Freed 524",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 67800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1464.0,
            LengthMM = 4899.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 69454.65m,
            PricePerMonth = 5650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw523I.ID,
            CarModel = Bmw523I,
            Title = "Bmw 523I 525",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 51800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.0,
            LengthMM = 4627.0,
            ManufactureYear = 2010,
            Mileage = 105000.0,
            PeakPowerHP = 205.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 52208.14m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2774.0,
            WidthMM = 1891.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 526",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 124800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2755.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5330.0,
            ManufactureYear = 2020,
            Mileage = 35000.0,
            PeakPowerHP = 177.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 100437.21m,
            PricePerMonth = 10400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3085.0,
            WidthMM = 1855.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 527",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 69800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2015,
            Mileage = 55000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 82990.1m,
            PricePerMonth = 5816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 528",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 65800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1580.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1450.0,
            LengthMM = 4470.0,
            ManufactureYear = 2017,
            Mileage = 55000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 147.0,
            PredictedPrice = 85060.11m,
            PricePerMonth = 5483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1820.0,
            CarModelID = HyundaiIoniq.ID,
            CarModel = HyundaiIoniq,
            Title = "Hyundai Ioniq 529",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 53800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1495.0,
            LengthMM = 4060.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 54053.86m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2570.0,
            WidthMM = 1695.0,
            CarModelID = Mazda2.ID,
            CarModel = Mazda2,
            Title = "Mazda 2 530",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 52888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5295.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 178.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 56215.73m,
            PricePerMonth = 4407.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 531",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 62500.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1450.0,
            LengthMM = 4865.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 188.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 70523.88m,
            PricePerMonth = 5208.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2830.0,
            WidthMM = 1840.0,
            CarModelID = Mazda6.ID,
            CarModel = Mazda6,
            Title = "Mazda 6 532",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 79800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1890.0,
            LengthMM = 4850.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 100309.61m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1830.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 533",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4120.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 29745.72m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2655.0,
            WidthMM = 1635.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 534",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 52900.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2014,
            Mileage = 100000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 48816.12m,
            PricePerMonth = 4408.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 535",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 123800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1612.0,
            LengthMM = 4439.0,
            ManufactureYear = 2016,
            Mileage = 100000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 118188.44m,
            PricePerMonth = 10316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1821.0,
            CarModelID = BmwX1.ID,
            CarModel = BmwX1,
            Title = "Bmw X1 536",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 124800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2199.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1740.0,
            LengthMM = 5115.0,
            ManufactureYear = 2018,
            Mileage = 47900.0,
            PeakPowerHP = 193.0,
            PeakTorqueNM = 440.0,
            PredictedPrice = 98842.57m,
            PricePerMonth = 10400.0m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3060.0,
            WidthMM = 1985.0,
            CarModelID = KiaGrandCarnival.ID,
            CarModel = KiaGrandCarnival,
            Title = "Kia GrandCarnival 537",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 116700.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1835.0,
            LengthMM = 4795.0,
            ManufactureYear = 2016,
            Mileage = 85000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 118895.11m,
            PricePerMonth = 9725.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2745.0,
            WidthMM = 4855.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 538",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1948.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4520.0,
            ManufactureYear = 1999,
            Mileage = 205000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 14818.66m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = VolvoS40.ID,
            CarModel = VolvoS40,
            Title = "Volvo S40 539",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 32333.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1466.0,
            LengthMM = 4358.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 202.0,
            PredictedPrice = 38229.16m,
            PricePerMonth = 2694.42m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2648.0,
            WidthMM = 1824.0,
            CarModelID = FordFocus.ID,
            CarModel = FordFocus,
            Title = "Ford Focus 540",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 5800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1395.0,
            LengthMM = 4200.0,
            ManufactureYear = 2005,
            Mileage = 110000.0,
            PeakPowerHP = 91.0,
            PeakTorqueNM = 133.0,
            PredictedPrice = 16044.03m,
            PricePerMonth = 483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1670.0,
            CarModelID = HyundaiAccent.ID,
            CarModel = HyundaiAccent,
            Title = "Hyundai Accent 541",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 4500.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1360.0,
            LengthMM = 4110.0,
            ManufactureYear = 2004,
            Mileage = 155000.0,
            PeakPowerHP = 75.0,
            PeakTorqueNM = 109.0,
            PredictedPrice = 6321.78m,
            PricePerMonth = 375.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2380.0,
            WidthMM = 1655.0,
            CarModelID = ProtonIswara.ID,
            CarModel = ProtonIswara,
            Title = "Proton Iswara 542",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 89800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1890.0,
            LengthMM = 4850.0,
            ManufactureYear = 2010,
            Mileage = 105000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 100309.61m,
            PricePerMonth = 7483.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1830.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 543",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 51800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.0,
            LengthMM = 4627.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 205.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 52208.14m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2774.0,
            WidthMM = 1891.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 544",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 34783.05m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 545",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 40800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 4765.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 43759.88m,
            PricePerMonth = 3400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2830.0,
            WidthMM = 1800.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 546",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 490000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 5663.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1865.0,
            LengthMM = 5080.0,
            ManufactureYear = 2016,
            Mileage = 25000.0,
            PeakPowerHP = 367.0,
            PeakTorqueNM = 530.0,
            PredictedPrice = 290647.87m,
            PricePerMonth = 40833.33m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1980.0,
            CarModelID = LexusLx570.ID,
            CarModel = LexusLx570,
            Title = "Lexus Lx570 547",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1248.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1540.0,
            LengthMM = 3565.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 87.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 17580.09m,
            PricePerMonth = 1491.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2380.0,
            WidthMM = 1595.0,
            CarModelID = HyundaiI10.ID,
            CarModel = HyundaiI10,
            Title = "Hyundai I10 548",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 61800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1850.0,
            LengthMM = 5260.0,
            ManufactureYear = 2013,
            Mileage = 110000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 65186.55m,
            PricePerMonth = 5150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3085.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 549",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 138000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 3999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1392.0,
            LengthMM = 4615.0,
            ManufactureYear = 2008,
            Mileage = 65000.0,
            PeakPowerHP = 420.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 168196.46m,
            PricePerMonth = 11500.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2761.0,
            WidthMM = 1804.0,
            CarModelID = BmwM3.ID,
            CarModel = BmwM3,
            Title = "Bmw M3 550",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37900.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2018,
            Mileage = 45000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34438.99m,
            PricePerMonth = 3158.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 551",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 116888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2017,
            Mileage = 95000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 132406.13m,
            PricePerMonth = 9740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw330E.ID,
            CarModel = Bmw330E,
            Title = "Bmw 330E 552",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 57800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 4850.0,
            ManufactureYear = 2014,
            Mileage = 95000.0,
            PeakPowerHP = 182.0,
            PeakTorqueNM = 228.0,
            PredictedPrice = 56693.09m,
            PricePerMonth = 4816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1795.0,
            CarModelID = NissanTeana.ID,
            CarModel = NissanTeana,
            Title = "Nissan Teana 553",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25183.88m,
            PricePerMonth = 2075.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 554",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 847.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 3490.0,
            ManufactureYear = 2004,
            Mileage = 165000.0,
            PeakPowerHP = 50.0,
            PeakTorqueNM = 74.0,
            PredictedPrice = 9779.75m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 555",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 31800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2996.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1484.0,
            LengthMM = 5179.0,
            ManufactureYear = 2007,
            Mileage = 185000.0,
            PeakPowerHP = 258.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 81123.65m,
            PricePerMonth = 2650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3128.0,
            WidthMM = 1902.0,
            CarModelID = Bmw730Li.ID,
            CarModel = Bmw730Li,
            Title = "Bmw 730Li 556",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 16604.61m,
            PricePerMonth = 1241.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 557",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34500.0m,
            Colour = "Maroon",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 4387.0,
            ManufactureYear = 2019,
            Mileage = 30000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 36548.04m,
            PricePerMonth = 2875.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 558",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 4387.0,
            ManufactureYear = 2017,
            Mileage = 115000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 32102.22m,
            PricePerMonth = 3066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 559",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 54800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4075.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 48934.5m,
            PricePerMonth = 4566.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 560",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2015,
            Mileage = 85000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 34836.95m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 561",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 123000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2013,
            Mileage = 70000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 129670.22m,
            PricePerMonth = 10250.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2660.0,
            WidthMM = 1965.0,
            CarModelID = LandRoverRangeRoverEvoque.ID,
            CarModel = LandRoverRangeRoverEvoque,
            Title = "LandRover RangeRoverEvoque 562",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 17800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 20194.48m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 563",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5230.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 174.0,
            PeakTorqueNM = 403.0,
            PredictedPrice = 61689.98m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3200.0,
            WidthMM = 1850.0,
            CarModelID = NissanNavara.ID,
            CarModel = NissanNavara,
            Title = "Nissan Navara 564",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1482.0,
            LengthMM = 4644.0,
            ManufactureYear = 2014,
            Mileage = 117506.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 46791.49m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2651.0,
            WidthMM = 1778.0,
            CarModelID = VolkswagenJetta.ID,
            CarModel = VolkswagenJetta,
            Title = "Volkswagen Jetta 565",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1850.0,
            LengthMM = 5260.0,
            ManufactureYear = 2013,
            Mileage = 125000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 66446.53m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3085.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 566",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 88800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4465.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 98595.31m,
            PricePerMonth = 7400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2665.0,
            WidthMM = 1800.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 567",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1850.0,
            LengthMM = 5260.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 67803.59m,
            PricePerMonth = 5241.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3085.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 568",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 223000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1639.0,
            LengthMM = 4656.0,
            ManufactureYear = 2017,
            Mileage = 55000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 195207.42m,
            PricePerMonth = 18583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2873.0,
            WidthMM = 1890.0,
            CarModelID = MercedesBenzGlc250.ID,
            CarModel = MercedesBenzGlc250,
            Title = "MercedesBenz Glc250 569",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 88800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1561.0,
            LengthMM = 4110.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 94612.2m,
            PricePerMonth = 7400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2595.0,
            WidthMM = 1789.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 570",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 79800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2356.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4935.0,
            ManufactureYear = 2016,
            Mileage = 115000.0,
            PeakPowerHP = 238.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 86257.33m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1850.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 571",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 59800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1750.0,
            LengthMM = 4795.0,
            ManufactureYear = 2007,
            Mileage = 75000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 68520.88m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 572",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1482.0,
            LengthMM = 4644.0,
            ManufactureYear = 2013,
            Mileage = 100000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 43236.5m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2651.0,
            WidthMM = 1778.0,
            CarModelID = VolkswagenJetta.ID,
            CarModel = VolkswagenJetta,
            Title = "Volkswagen Jetta 573",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1447.0,
            LengthMM = 4581.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 310.0,
            PredictedPrice = 69375.21m,
            PricePerMonth = 5249.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1770.0,
            CarModelID = MercedesBenzC250Cgi.ID,
            CarModel = MercedesBenzC250Cgi,
            Title = "MercedesBenz C250Cgi 574",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 93800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1561.0,
            LengthMM = 4110.0,
            ManufactureYear = 2013,
            Mileage = 60000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 96034.72m,
            PricePerMonth = 7816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2595.0,
            WidthMM = 1789.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 575",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 24878.39m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 576",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1948.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4520.0,
            ManufactureYear = 2000,
            Mileage = 205000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 15997.81m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = VolvoV40.ID,
            CarModel = VolvoV40,
            Title = "Volvo V40 577",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 15900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2012,
            Mileage = 105000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 14189.93m,
            PricePerMonth = 1325.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 578",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 5500.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 847.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1170.0,
            LengthMM = 3365.0,
            ManufactureYear = 1999,
            Mileage = 180000.0,
            PeakPowerHP = 50.0,
            PeakTorqueNM = 74.0,
            PredictedPrice = 33927.47m,
            PricePerMonth = 458.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 579",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 73800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1675.0,
            LengthMM = 4648.0,
            ManufactureYear = 2012,
            Mileage = 155000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 94913.47m,
            PricePerMonth = 6150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1881.0,
            CarModelID = BmwX3.ID,
            CarModel = BmwX3,
            Title = "Bmw X3 580",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42900.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4350.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 36208.09m,
            PricePerMonth = 3575.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2630.0,
            WidthMM = 1800.0,
            CarModelID = KiaSportage.ID,
            CarModel = KiaSportage,
            Title = "Kia Sportage 581",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 77800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4590.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 222.0,
            PredictedPrice = 81543.71m,
            PricePerMonth = 6483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2620.0,
            WidthMM = 1820.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 582",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 22534.76m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 583",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4825.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 181.0,
            PeakTorqueNM = 231.0,
            PredictedPrice = 74684.57m,
            PricePerMonth = 5566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1825.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 584",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19990.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4610.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 133.0,
            PeakTorqueNM = 191.0,
            PredictedPrice = 31222.06m,
            PricePerMonth = 1665.83m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1695.0,
            CarModelID = NissanSylphy.ID,
            CarModel = NissanSylphy,
            Title = "Nissan Sylphy 585",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 88799.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1561.0,
            LengthMM = 4110.0,
            ManufactureYear = 2012,
            Mileage = 80000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 95882.87m,
            PricePerMonth = 7399.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2595.0,
            WidthMM = 1789.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 586",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 79800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1471.0,
            LengthMM = 4868.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 310.0,
            PredictedPrice = 97403.91m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2874.0,
            WidthMM = 2071.0,
            CarModelID = MercedesBenzE250Cgi.ID,
            CarModel = MercedesBenzE250Cgi,
            Title = "MercedesBenz E250Cgi 587",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 27800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4300.0,
            ManufactureYear = 2008,
            Mileage = 195000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 28292.04m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 588",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 225000.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1467.0,
            LengthMM = 5238.0,
            ManufactureYear = 2016,
            Mileage = 165000.0,
            PeakPowerHP = 258.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 224820.95m,
            PricePerMonth = 18750.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3210.0,
            WidthMM = 1902.0,
            CarModelID = Bmw730Li.ID,
            CarModel = Bmw730Li,
            Title = "Bmw 730Li 589",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 51800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.0,
            LengthMM = 4627.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 205.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 52208.14m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2774.0,
            WidthMM = 1891.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 590",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4560.0,
            ManufactureYear = 2014,
            Mileage = 95000.0,
            PeakPowerHP = 130.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 39190.48m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1780.0,
            CarModelID = KiaCerato.ID,
            CarModel = KiaCerato,
            Title = "Kia Cerato 591",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 18500.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4830.0,
            ManufactureYear = 2005,
            Mileage = 130000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 186.0,
            PredictedPrice = 33141.49m,
            PricePerMonth = 1541.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1820.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 592",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1570.0,
            LengthMM = 3685.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 31677.07m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 593",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 21800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1454.0,
            LengthMM = 4488.0,
            ManufactureYear = 2007,
            Mileage = 95000.0,
            PeakPowerHP = 131.0,
            PeakTorqueNM = 165.0,
            PredictedPrice = 36556.81m,
            PricePerMonth = 1816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.HydraulicPower],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1840.0,
            CarModelID = FordFocus.ID,
            CarModel = FordFocus,
            Title = "Ford Focus 594",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 76800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 3456.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4865.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 280.0,
            PeakTorqueNM = 344.0,
            PredictedPrice = 96482.49m,
            PricePerMonth = 6400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 595",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 42999.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1430.0,
            LengthMM = 4320.0,
            ManufactureYear = 2011,
            Mileage = 60000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 50188.64m,
            PricePerMonth = 3583.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1765.0,
            CarModelID = LexusCt200H.ID,
            CarModel = LexusCt200H,
            Title = "Lexus Ct200H 596",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 36684.99m,
            PricePerMonth = 3000.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 597",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 69990.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1715.0,
            LengthMM = 4640.0,
            ManufactureYear = 2016,
            Mileage = 115000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 75764.1m,
            PricePerMonth = 5832.5m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2705.0,
            WidthMM = 1820.0,
            CarModelID = NissanXTrail.ID,
            CarModel = NissanXTrail,
            Title = "Nissan XTrail 598",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 83800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 4630.0,
            ManufactureYear = 2017,
            Mileage = 95596.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 70456.4m,
            PricePerMonth = 6983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1799.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 599",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1865.0,
            LengthMM = 4770.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 71628.83m,
            PricePerMonth = 5575.0m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2860.0,
            WidthMM = 1735.0,
            CarModelID = NissanSerena.ID,
            CarModel = NissanSerena,
            Title = "Nissan Serena 600",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 29800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3685.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 28516.34m,
            PricePerMonth = 2483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 601",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 179800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1630.0,
            LengthMM = 4630.0,
            ManufactureYear = 2015,
            Mileage = 35000.0,
            PeakPowerHP = 238.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 167827.71m,
            PricePerMonth = 14983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2660.0,
            WidthMM = 1845.0,
            CarModelID = LexusNx200T.ID,
            CarModel = LexusNx200T,
            Title = "Lexus Nx200T 602",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 18000.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 4530.0,
            ManufactureYear = 2004,
            Mileage = 265000.0,
            PeakPowerHP = 110.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 23806.83m,
            PricePerMonth = 1500.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1705.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 603",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 3905.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 16652.9m,
            PricePerMonth = 1408.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1710.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 604",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 63000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4570.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 49103.44m,
            PricePerMonth = 5250.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = HondaStream.ID,
            CarModel = HondaStream,
            Title = "Honda Stream 605",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 39800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4230.0,
            ManufactureYear = 2016,
            Mileage = 55000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 40397.22m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 606",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 32600.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2017,
            Mileage = 60000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 40884.6m,
            PricePerMonth = 2716.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 607",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 243800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2019,
            Mileage = 10000.0,
            PeakPowerHP = 258.0,
            PeakTorqueNM = 370.0,
            PredictedPrice = 226908.85m,
            PricePerMonth = 20316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC300.ID,
            CarModel = MercedesBenzC300,
            Title = "MercedesBenz C300 608",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 167800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1474.0,
            LengthMM = 4879.0,
            ManufactureYear = 2016,
            Mileage = 80000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 172178.39m,
            PricePerMonth = 13983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE250.ID,
            CarModel = MercedesBenzE250,
            Title = "MercedesBenz E250 609",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 105000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 4163.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1860.0,
            LengthMM = 4890.0,
            ManufactureYear = 2003,
            Mileage = 155000.0,
            PeakPowerHP = 196.0,
            PeakTorqueNM = 431.0,
            PredictedPrice = 91237.01m,
            PricePerMonth = 8750.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1940.0,
            CarModelID = ToyotaLandCruiser.ID,
            CarModel = ToyotaLandCruiser,
            Title = "Toyota LandCruiser 610",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 82900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1797.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4590.0,
            ManufactureYear = 2014,
            Mileage = 40000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 60689.49m,
            PricePerMonth = 6908.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 611",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 51800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4190.0,
            ManufactureYear = 2017,
            Mileage = 25000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 57711.62m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2655.0,
            WidthMM = 1660.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 612",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 10999.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1474.0,
            LengthMM = 4879.0,
            ManufactureYear = 1997,
            Mileage = 190000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 69242.65m,
            PricePerMonth = 916.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE200.ID,
            CarModel = MercedesBenzE200,
            Title = "MercedesBenz E200 613",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 46800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1484.0,
            LengthMM = 4628.0,
            ManufactureYear = 2011,
            Mileage = 140000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 320.0,
            PredictedPrice = 65036.05m,
            PricePerMonth = 3900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2776.0,
            WidthMM = 1865.0,
            CarModelID = VolvoS60.ID,
            CarModel = VolvoS60,
            Title = "Volvo S60 614",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 4800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 659.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 3365.0,
            ManufactureYear = 2005,
            Mileage = 165000.0,
            PeakPowerHP = 31.0,
            PeakTorqueNM = 49.0,
            PredictedPrice = 5976.62m,
            PricePerMonth = 400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 615",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 119000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2457.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4415.0,
            ManufactureYear = 2011,
            Mileage = 60000.0,
            PeakPowerHP = 300.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 73234.97m,
            PricePerMonth = 9916.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2625.0,
            WidthMM = 1795.0,
            CarModelID = SubaruImpreza.ID,
            CarModel = SubaruImpreza,
            Title = "Subaru Impreza 616",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1491.0,
            LengthMM = 4331.0,
            ManufactureYear = 2017,
            Mileage = 65000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 26703.81m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2465.0,
            WidthMM = 1689.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 617",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 69800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1797.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4590.0,
            ManufactureYear = 2013,
            Mileage = 40000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 62553.18m,
            PricePerMonth = 5816.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 618",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 155000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1612.0,
            LengthMM = 4439.0,
            ManufactureYear = 2018,
            Mileage = 30000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 132625.03m,
            PricePerMonth = 12916.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1821.0,
            CarModelID = BmwX1.ID,
            CarModel = BmwX1,
            Title = "Bmw X1 619",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 48700.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1703.0,
            LengthMM = 4426.0,
            ManufactureYear = 2012,
            Mileage = 185000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 61158.75m,
            PricePerMonth = 4058.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2604.0,
            WidthMM = 1809.0,
            CarModelID = VolkswagenTiguan.ID,
            CarModel = VolkswagenTiguan,
            Title = "Volkswagen Tiguan 620",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1557.0,
            LengthMM = 4158.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 35440.07m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2538.0,
            WidthMM = 1740.0,
            CarModelID = Peugeot2008.ID,
            CarModel = Peugeot2008,
            Title = "Peugeot 2008 621",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4420.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 31683.2m,
            PricePerMonth = 2158.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1690.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 622",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 76800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1557.0,
            LengthMM = 4359.0,
            ManufactureYear = 2014,
            Mileage = 105000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 89298.18m,
            PricePerMonth = 6400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1786.0,
            CarModelID = MercedesBenzB200.ID,
            CarModel = MercedesBenzB200,
            Title = "MercedesBenz B200 623",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1638.0,
            LengthMM = 4530.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 29141.14m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2727.0,
            WidthMM = 2118.0,
            CarModelID = Peugeot5008.ID,
            CarModel = Peugeot5008,
            Title = "Peugeot 5008 624",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34800.0m,
            Colour = "Yellow",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 3626.0,
            ManufactureYear = 2005,
            Mileage = 165000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 149.0,
            PredictedPrice = 36306.21m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2467.0,
            WidthMM = 1688.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 625",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 119800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2356.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4830.0,
            ManufactureYear = 2014,
            Mileage = 60000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 100754.76m,
            PricePerMonth = 9983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2900.0,
            WidthMM = 1820.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 626",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4495.0,
            ManufactureYear = 2009,
            Mileage = 90000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 143.0,
            PredictedPrice = 26880.78m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2535.0,
            WidthMM = 1695.0,
            CarModelID = NissanSentra.ID,
            CarModel = NissanSentra,
            Title = "Nissan Sentra 627",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4930.0,
            ManufactureYear = 2003,
            Mileage = 160000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 179.0,
            PredictedPrice = 27099.76m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1780.0,
            CarModelID = NissanCefiro.ID,
            CarModel = NissanCefiro,
            Title = "Nissan Cefiro 628",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 59800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 3239.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1360.0,
            LengthMM = 5025.0,
            ManufactureYear = 1997,
            Mileage = 155000.0,
            PeakPowerHP = 243.0,
            PeakTorqueNM = 316.0,
            PredictedPrice = 42646.21m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2870.0,
            WidthMM = 1800.0,
            CarModelID = JaguarXj6.ID,
            CarModel = JaguarXj6,
            Title = "Jaguar Xj6 629",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 22999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1435.0,
            LengthMM = 4395.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 26249.71m,
            PricePerMonth = 1916.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 630",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1430.0,
            LengthMM = 3490.0,
            ManufactureYear = 2006,
            Mileage = 300000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 12310.19m,
            PricePerMonth = 1083.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 631",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 195800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4526.0,
            ManufactureYear = 2020,
            Mileage = 10000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 142644.91m,
            PricePerMonth = 16316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1800.0,
            CarModelID = Bmw218I.ID,
            CarModel = Bmw218I,
            Title = "Bmw 218I 632",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 106999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1440.0,
            LengthMM = 4329.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 177.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 98881.34m,
            PricePerMonth = 8916.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2690.0,
            WidthMM = 1765.0,
            CarModelID = Bmw120I.ID,
            CarModel = Bmw120I,
            Title = "Bmw 120I 633",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4420.0,
            ManufactureYear = 2010,
            Mileage = 165000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 32168.32m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1690.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 634",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4530.0,
            ManufactureYear = 2013,
            Mileage = 100000.0,
            PeakPowerHP = 131.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 35683.66m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1775.0,
            CarModelID = HyundaiElantra.ID,
            CarModel = HyundaiElantra,
            Title = "Hyundai Elantra 635",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 73800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4705.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 241.0,
            PredictedPrice = 79055.97m,
            PricePerMonth = 6150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 636",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 35800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1790.0,
            LengthMM = 4920.0,
            ManufactureYear = 2004,
            Mileage = 175000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 38480.31m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1845.0,
            CarModelID = HondaElysion.ID,
            CarModel = HondaElysion,
            Title = "Honda Elysion 637",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 95888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 130027.97m,
            PricePerMonth = 7990.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 638",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4525.0,
            ManufactureYear = 2013,
            Mileage = 96000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 46679.55m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1755.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 639",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 6000.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1587.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4601.090693538827,
            ManufactureYear = 1994,
            Mileage = 125000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 20673.17m,
            PricePerMonth = 500.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaCorolla.ID,
            CarModel = ToyotaCorolla,
            Title = "Toyota Corolla 640",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8000.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4465.0,
            ManufactureYear = 2006,
            Mileage = 210000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 14243.76m,
            PricePerMonth = 666.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1740.0,
            CarModelID = ProtonWaja.ID,
            CarModel = ProtonWaja,
            Title = "Proton Waja 641",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 126800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1450.0,
            LengthMM = 4580.0,
            ManufactureYear = 2019,
            Mileage = 10000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 112322.0m,
            PricePerMonth = 10566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1795.0,
            CarModelID = Mazda3.ID,
            CarModel = Mazda3,
            Title = "Mazda 3 642",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 47800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 43363.06m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 643",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68800.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 4800.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 188.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 72989.12m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1840.0,
            CarModelID = Mazda6.ID,
            CarModel = Mazda6,
            Title = "Mazda 6 644",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 39900.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1779.0,
            LengthMM = 5295.0,
            ManufactureYear = 2011,
            Mileage = 55000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 314.0,
            PredictedPrice = 49098.21m,
            PricePerMonth = 3325.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 645",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 36888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4695.0,
            ManufactureYear = 2005,
            Mileage = 150000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 241.0,
            PredictedPrice = 37264.22m,
            PricePerMonth = 3074.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1540.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 646",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 479800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4922.0,
            ManufactureYear = 2019,
            Mileage = 5000.0,
            PeakPowerHP = 340.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 390712.18m,
            PricePerMonth = 39983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2975.0,
            WidthMM = 2004.0,
            CarModelID = BmwX5.ID,
            CarModel = BmwX5,
            Title = "Bmw X5 647",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4410.0,
            ManufactureYear = 2014,
            Mileage = 50000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 43594.98m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 648",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37700.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1373.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4265.0,
            ManufactureYear = 2017,
            Mileage = 30000.0,
            PeakPowerHP = 92.0,
            PeakTorqueNM = 130.0,
            PredictedPrice = 38197.82m,
            PricePerMonth = 3141.67m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = ProtonErtiga.ID,
            CarModel = ProtonErtiga,
            Title = "Proton Ertiga 649",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 7800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2299.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.LeadedPetrol],
            HeightMM = 1463.0,
            LengthMM = 4818.0,
            ManufactureYear = 1989,
            Mileage = 105000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 41431.75m,
            PricePerMonth = 650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2854.0,
            WidthMM = 1822.0,
            CarModelID = MercedesBenzE230.ID,
            CarModel = MercedesBenzE230,
            Title = "MercedesBenz E230 650",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 155800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2693.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4760.0,
            ManufactureYear = 2014,
            Mileage = 40000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 246.0,
            PredictedPrice = 119461.71m,
            PricePerMonth = 12983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2790.0,
            WidthMM = 1885.0,
            CarModelID = ToyotaLandCruiserPrado.ID,
            CarModel = ToyotaLandCruiserPrado,
            Title = "Toyota LandCruiserPrado 651",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 3600.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1360.0,
            LengthMM = 4110.0,
            ManufactureYear = 2001,
            Mileage = 125000.0,
            PeakPowerHP = 75.0,
            PeakTorqueNM = 109.0,
            PredictedPrice = 6484.45m,
            PricePerMonth = 300.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2380.0,
            WidthMM = 1655.0,
            CarModelID = ProtonIswara.ID,
            CarModel = ProtonIswara,
            Title = "Proton Iswara 652",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 49800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4320.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 54053.86m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2570.0,
            WidthMM = 1695.0,
            CarModelID = Mazda2.ID,
            CarModel = Mazda2,
            Title = "Mazda 2 653",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 143000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1986.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4720.0,
            ManufactureYear = 2015,
            Mileage = 55000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 193.0,
            PredictedPrice = 118501.92m,
            PricePerMonth = 11916.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 654",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 43900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1810.0,
            LengthMM = 5255.0,
            ManufactureYear = 2009,
            Mileage = 150000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 51099.39m,
            PricePerMonth = 3658.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3085.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 655",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2017,
            Mileage = 75000.0,
            PeakPowerHP = 68.0,
            PeakTorqueNM = 91.0,
            PredictedPrice = 26800.12m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 656",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30888.0m,
            Colour = "Yellow",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3775.0,
            ManufactureYear = 2012,
            Mileage = 130788.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 29352.35m,
            PricePerMonth = 2574.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 657",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1421.0,
            LengthMM = 4324.0,
            ManufactureYear = 2014,
            Mileage = 115000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 62722.97m,
            PricePerMonth = 5566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2690.0,
            WidthMM = 1765.0,
            CarModelID = Bmw118I.ID,
            CarModel = Bmw118I,
            Title = "Bmw 118I 658",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 33800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1490.0,
            LengthMM = 4480.0,
            ManufactureYear = 2012,
            Mileage = 145000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 34343.58m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1745.0,
            CarModelID = ToyotaPrius.ID,
            CarModel = ToyotaPrius,
            Title = "Toyota Prius 659",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 149900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1441.0,
            LengthMM = 4253.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 194.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 165797.62m,
            PricePerMonth = 12491.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1800.0,
            CarModelID = MiniClubman.ID,
            CarModel = MiniClubman,
            Title = "Mini Clubman 660",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1438.0,
            LengthMM = 4477.0,
            ManufactureYear = 2010,
            Mileage = 120000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 17633.86m,
            PricePerMonth = 1400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1725.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 661",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 60900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1668.0,
            LengthMM = 3989.0,
            ManufactureYear = 2017,
            Mileage = 90000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 58107.92m,
            PricePerMonth = 5075.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 662",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1438.0,
            LengthMM = 4477.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 20494.64m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1725.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 663",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 82800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2442.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5280.0,
            ManufactureYear = 2018,
            Mileage = 55000.0,
            PeakPowerHP = 181.0,
            PeakTorqueNM = 430.0,
            PredictedPrice = 90270.14m,
            PricePerMonth = 6900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1815.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 664",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2008,
            Mileage = 115000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 14383.36m,
            PricePerMonth = 816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 665",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 96800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2442.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5280.0,
            ManufactureYear = 2017,
            Mileage = 57500.0,
            PeakPowerHP = 181.0,
            PeakTorqueNM = 430.0,
            PredictedPrice = 90270.14m,
            PricePerMonth = 8066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1815.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 666",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 31800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1466.0,
            LengthMM = 4358.0,
            ManufactureYear = 2012,
            Mileage = 89000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 202.0,
            PredictedPrice = 38913.77m,
            PricePerMonth = 2650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2648.0,
            WidthMM = 1824.0,
            CarModelID = FordFocus.ID,
            CarModel = FordFocus,
            Title = "Ford Focus 667",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 64800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4454.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 81838.61m,
            PricePerMonth = 5400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1798.0,
            CarModelID = BmwX1.ID,
            CarModel = BmwX1,
            Title = "Bmw X1 668",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 65800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4825.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 181.0,
            PeakTorqueNM = 231.0,
            PredictedPrice = 73058.17m,
            PricePerMonth = 5483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1825.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 669",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 55500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5359.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 375.0,
            PredictedPrice = 58327.43m,
            PricePerMonth = 4625.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3220.0,
            WidthMM = 1850.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 670",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25183.88m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 671",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 62800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1750.0,
            LengthMM = 4795.0,
            ManufactureYear = 2006,
            Mileage = 170000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 62158.5m,
            PricePerMonth = 5233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 672",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4425.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 30125.86m,
            PricePerMonth = 2075.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 673",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 269888.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1431.0,
            LengthMM = 4761.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 324.0,
            PeakTorqueNM = 640.0,
            PredictedPrice = 237514.99m,
            PricePerMonth = 22490.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2872.0,
            WidthMM = 1850.0,
            CarModelID = VolvoS60.ID,
            CarModel = VolvoS60,
            Title = "Volvo S60 674",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 42800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4080.0,
            ManufactureYear = 2012,
            Mileage = 10000.0,
            PeakPowerHP = 124.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 50221.64m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 675",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 52800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1477.0,
            LengthMM = 4440.0,
            ManufactureYear = 2016,
            Mileage = 95000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 52650.99m,
            PricePerMonth = 4400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 676",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 18800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 21852.85m,
            PricePerMonth = 1566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 677",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 186800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1762.0,
            LengthMM = 4886.0,
            ManufactureYear = 2018,
            Mileage = 80000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 200354.49m,
            PricePerMonth = 15566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2933.0,
            WidthMM = 1938.0,
            CarModelID = BmwX5.ID,
            CarModel = BmwX5,
            Title = "Bmw X5 678",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 12800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1511.357142857143,
            LengthMM = 4512.571428571428,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 75.0,
            PeakTorqueNM = 114.0,
            PredictedPrice = 16611.77m,
            PricePerMonth = 1066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2605.0,
            WidthMM = 1804.857142857143,
            CarModelID = RenaultKangoo.ID,
            CarModel = RenaultKangoo,
            Title = "Renault Kangoo 679",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1557.0,
            LengthMM = 4158.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 35440.07m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2538.0,
            WidthMM = 1740.0,
            CarModelID = Peugeot2008.ID,
            CarModel = Peugeot2008,
            Title = "Peugeot 2008 680",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 67800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1715.0,
            LengthMM = 4640.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 72881.39m,
            PricePerMonth = 5650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2705.0,
            WidthMM = 1820.0,
            CarModelID = NissanXTrail.ID,
            CarModel = NissanXTrail,
            Title = "Nissan XTrail 681",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 47800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4525.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 43123.16m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1755.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 682",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 42800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1790.0,
            LengthMM = 4845.0,
            ManufactureYear = 2008,
            Mileage = 130000.0,
            PeakPowerHP = 250.0,
            PeakTorqueNM = 309.0,
            PredictedPrice = 52085.89m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1830.0,
            CarModelID = HondaElysion.ID,
            CarModel = HondaElysion,
            Title = "Honda Elysion 683",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4530.0,
            ManufactureYear = 2016,
            Mileage = 85000.0,
            PeakPowerHP = 129.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 46715.83m,
            PricePerMonth = 3083.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1775.0,
            CarModelID = HyundaiElantra.ID,
            CarModel = HyundaiElantra,
            Title = "Hyundai Elantra 684",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 50800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1421.0,
            LengthMM = 4531.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 222.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 38961.04m,
            PricePerMonth = 4233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1817.0,
            CarModelID = Bmw325I.ID,
            CarModel = Bmw325I,
            Title = "Bmw 325I 685",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 30800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4510.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 152.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 34171.28m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1740.0,
            CarModelID = ToyotaCaldina.ID,
            CarModel = ToyotaCaldina,
            Title = "Toyota Caldina 686",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 16888.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2011,
            Mileage = 70000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 22030.36m,
            PricePerMonth = 1407.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 687",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1865.0,
            LengthMM = 4770.0,
            ManufactureYear = 2014,
            Mileage = 60000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 59984.98m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2860.0,
            WidthMM = 1735.0,
            CarModelID = NissanSerena.ID,
            CarModel = NissanSerena,
            Title = "Nissan Serena 688",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 55700.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 4575.0,
            ManufactureYear = 2009,
            Mileage = 115000.0,
            PeakPowerHP = 208.0,
            PeakTorqueNM = 252.0,
            PredictedPrice = 67425.33m,
            PricePerMonth = 4641.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1800.0,
            CarModelID = LexusIs250.ID,
            CarModel = LexusIs250,
            Title = "Lexus Is250 689",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 35800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 34326.79m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 690",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 145900.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1450.0,
            LengthMM = 4900.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 235.0,
            PredictedPrice = 117976.34m,
            PricePerMonth = 12158.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2820.0,
            WidthMM = 1820.0,
            CarModelID = LexusEs250.ID,
            CarModel = LexusEs250,
            Title = "Lexus Es250 691",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 23596.64m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 692",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4395.0,
            ManufactureYear = 2009,
            Mileage = 75000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 38595.11m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 693",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 62700.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4235.0,
            ManufactureYear = 2016,
            Mileage = 35000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 143.0,
            PredictedPrice = 64967.81m,
            PricePerMonth = 5225.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaSienta.ID,
            CarModel = ToyotaSienta,
            Title = "Toyota Sienta 694",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 92888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1710.0,
            LengthMM = 4520.0,
            ManufactureYear = 2016,
            Mileage = 70000.0,
            PeakPowerHP = 171.0,
            PeakTorqueNM = 226.0,
            PredictedPrice = 99191.85m,
            PricePerMonth = 7740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2690.0,
            WidthMM = 1865.0,
            CarModelID = RenaultKoleos.ID,
            CarModel = RenaultKoleos,
            Title = "Renault Koleos 695",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 66800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4595.0,
            ManufactureYear = 2016,
            Mileage = 55000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 68822.49m,
            PricePerMonth = 5566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2640.0,
            WidthMM = 1795.0,
            CarModelID = SubaruForester.ID,
            CarModel = SubaruForester,
            Title = "Subaru Forester 696",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23900.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1491.0,
            LengthMM = 4331.0,
            ManufactureYear = 2018,
            Mileage = 45000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 27107.3m,
            PricePerMonth = 1991.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1689.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 697",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 64800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1797.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4600.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 55515.29m,
            PricePerMonth = 5400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1720.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 698",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 72888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2015,
            Mileage = 75233.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 67004.36m,
            PricePerMonth = 6074.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 699",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 103800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2393.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5330.0,
            ManufactureYear = 2018,
            Mileage = 80000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 95909.43m,
            PricePerMonth = 8650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3085.0,
            WidthMM = 1855.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 700",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 148800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1561.0,
            LengthMM = 4110.0,
            ManufactureYear = 2017,
            Mileage = 70000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 122117.52m,
            PricePerMonth = 12400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2595.0,
            WidthMM = 1789.0,
            CarModelID = MiniCountryman.ID,
            CarModel = MiniCountryman,
            Title = "Mini Countryman 701",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 53800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4560.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 194.0,
            PredictedPrice = 47948.7m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1780.0,
            CarModelID = KiaCerato.ID,
            CarModel = KiaCerato,
            Title = "Kia Cerato 702",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 52800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1484.0,
            LengthMM = 4628.0,
            ManufactureYear = 2012,
            Mileage = 115000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 63016.11m,
            PricePerMonth = 4400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2776.0,
            WidthMM = 1865.0,
            CarModelID = VolvoV60.ID,
            CarModel = VolvoV60,
            Title = "Volvo V60 703",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 52800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4075.0,
            ManufactureYear = 2013,
            Mileage = 105000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 48008.3m,
            PricePerMonth = 4400.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 704",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 44888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4560.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 129.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 40298.39m,
            PricePerMonth = 3740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1780.0,
            CarModelID = KiaCerato.ID,
            CarModel = KiaCerato,
            Title = "Kia Cerato 705",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 45800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5280.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 324.0,
            PredictedPrice = 59422.87m,
            PricePerMonth = 3816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1815.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 706",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1638.0,
            LengthMM = 4530.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 27311.66m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2727.0,
            WidthMM = 2118.0,
            CarModelID = Peugeot5008.ID,
            CarModel = Peugeot5008,
            Title = "Peugeot 5008 707",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1471.0,
            LengthMM = 4868.0,
            ManufactureYear = 2010,
            Mileage = 110000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 86073.44m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE200Cgi.ID,
            CarModel = MercedesBenzE200Cgi,
            Title = "MercedesBenz E200Cgi 708",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 139800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1432.0,
            LengthMM = 4630.0,
            ManufactureYear = 2015,
            Mileage = 90000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 128961.72m,
            PricePerMonth = 11650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1777.0,
            CarModelID = MercedesBenzCla200.ID,
            CarModel = MercedesBenzCla200,
            Title = "MercedesBenz Cla200 709",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 46888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1655.0,
            LengthMM = 5200.0,
            ManufactureYear = 2015,
            Mileage = 125000.0,
            PeakPowerHP = 110.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 57130.3m,
            PricePerMonth = 3907.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1785.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 710",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4395.0,
            ManufactureYear = 2009,
            Mileage = 125000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 35850.6m,
            PricePerMonth = 2333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 711",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 73888.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2014,
            Mileage = 115000.0,
            PeakPowerHP = 185.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 74153.36m,
            PricePerMonth = 6157.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 712",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 19888.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2261.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1770.0,
            LengthMM = 4480.0,
            ManufactureYear = 2012,
            Mileage = 80000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 51900.79m,
            PricePerMonth = 1657.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2620.0,
            WidthMM = 1845.0,
            CarModelID = FordEscape.ID,
            CarModel = FordEscape,
            Title = "Ford Escape 713",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 26800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4410.0,
            ManufactureYear = 2008,
            Mileage = 95000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 27872.08m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRush.ID,
            CarModel = ToyotaRush,
            Title = "Toyota Rush 714",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2017,
            Mileage = 66000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 74233.99m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 715",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1760.0,
            LengthMM = 4585.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 39804.64m,
            PricePerMonth = 3166.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 716",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 54999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1750.0,
            LengthMM = 4795.0,
            ManufactureYear = 2006,
            Mileage = 55000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 69478.81m,
            PricePerMonth = 4583.25m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 717",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 3905.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 16652.9m,
            PricePerMonth = 1400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1710.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 718",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 136880.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1835.0,
            LengthMM = 4795.0,
            ManufactureYear = 2018,
            Mileage = 75000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 122761.17m,
            PricePerMonth = 11406.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2745.0,
            WidthMM = 4855.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 719",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 248800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1780.0,
            LengthMM = 4850.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 340.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 275246.9m,
            PricePerMonth = 20733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2923.0,
            WidthMM = 2073.0,
            CarModelID = LandRoverRangeRoverSport.ID,
            CarModel = LandRoverRangeRoverSport,
            Title = "LandRover RangeRoverSport 720",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 55000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 1300.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1472.8516746411483,
            LengthMM = 3942.555023923445,
            ManufactureYear = 1968,
            Mileage = 80000.0,
            PeakPowerHP = 166.83644859813083,
            PeakTorqueNM = 231.285046728972,
            PredictedPrice = 66865.26m,
            PricePerMonth = 4583.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2545.845794392523,
            WidthMM = 1747.066985645933,
            CarModelID = MiniMk2.ID,
            CarModel = MiniMk2,
            Title = "Mini Mk2 721",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2012,
            Mileage = 105000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 23660.85m,
            PricePerMonth = 1483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 722",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16999.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1800.0,
            LengthMM = 4935.0,
            ManufactureYear = 2002,
            Mileage = 80000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 33151.13m,
            PricePerMonth = 1416.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2960.0,
            WidthMM = 1775.0,
            CarModelID = MitsubishiStorm.ID,
            CarModel = MitsubishiStorm,
            Title = "Mitsubishi Storm 723",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 55800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1760.0,
            LengthMM = 4585.0,
            ManufactureYear = 2014,
            Mileage = 115000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 45432.45m,
            PricePerMonth = 4650.0m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 724",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 63800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1456.0,
            LengthMM = 4830.0,
            ManufactureYear = 2017,
            Mileage = 80000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 101482.41m,
            PricePerMonth = 5316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2817.0,
            WidthMM = 1828.0,
            CarModelID = Peugeot508.ID,
            CarModel = Peugeot508,
            Title = "Peugeot 508 725",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25730.32m,
            PricePerMonth = 2083.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 726",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 10800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1296.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1715.0,
            LengthMM = 3875.0,
            ManufactureYear = 1998,
            Mileage = 190000.0,
            PeakPowerHP = 83.0,
            PeakTorqueNM = 105.0,
            PredictedPrice = 13939.06m,
            PricePerMonth = 900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2420.0,
            WidthMM = 1555.0,
            CarModelID = PeroduaKembara.ID,
            CarModel = PeroduaKembara,
            Title = "Perodua Kembara 727",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4999.0,
            ManufactureYear = 2017,
            Mileage = 40000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 72022.61m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 728",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 11800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4601.090693538827,
            ManufactureYear = 1999,
            Mileage = 205000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 181.0,
            PredictedPrice = 17026.53m,
            PricePerMonth = 983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2735.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaNadia.ID,
            CarModel = ToyotaNadia,
            Title = "Toyota Nadia 729",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1488.0,
            LengthMM = 4750.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 93924.88m,
            PricePerMonth = 5233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1820.0,
            CarModelID = Peugeot408.ID,
            CarModel = Peugeot408,
            Title = "Peugeot 408 730",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 133888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4595.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 268.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 142441.89m,
            PricePerMonth = 11157.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1795.0,
            CarModelID = SubaruWrx.ID,
            CarModel = SubaruWrx,
            Title = "Subaru Wrx 731",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 248000.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 2979.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1383.0,
            LengthMM = 4671.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 431.0,
            PeakTorqueNM = 550.0,
            PredictedPrice = 293028.54m,
            PricePerMonth = 20666.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2812.0,
            WidthMM = 1870.0,
            CarModelID = BmwM4.ID,
            CarModel = BmwM4,
            Title = "Bmw M4 732",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 59900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4545.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 51267.1m,
            PricePerMonth = 4991.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2620.0,
            WidthMM = 1820.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 733",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 188000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4690.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 194576.33m,
            PricePerMonth = 15666.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC200.ID,
            CarModel = MercedesBenzC200,
            Title = "MercedesBenz C200 734",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 88800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4795.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 223.0,
            PredictedPrice = 82974.57m,
            PricePerMonth = 7400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 1950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 735",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 228900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1432.0,
            LengthMM = 4630.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 360.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 191759.21m,
            PricePerMonth = 19075.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1777.0,
            CarModelID = MercedesBenzCla45Amg.ID,
            CarModel = MercedesBenzCla45Amg,
            Title = "MercedesBenz Cla45Amg 736",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 4800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1150.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1480.0,
            LengthMM = 3710.0,
            ManufactureYear = 2007,
            Mileage = 257440.0,
            PeakPowerHP = 75.0,
            PeakTorqueNM = 105.0,
            PredictedPrice = 11460.5m,
            PricePerMonth = 400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2395.0,
            WidthMM = 1643.0,
            CarModelID = ProtonSavvy.ID,
            CarModel = ProtonSavvy,
            Title = "Proton Savvy 737",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 188800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.2183673469387,
            LengthMM = 4735.030612244898,
            ManufactureYear = 2016,
            Mileage = 90000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 185426.85m,
            PricePerMonth = 15733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2868.4591836734694,
            WidthMM = 1851.308163265306,
            CarModelID = Bmw430I.ID,
            CarModel = Bmw430I,
            Title = "Bmw 430I 738",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 60800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 3955.0,
            ManufactureYear = 2016,
            Mileage = 65840.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 55621.12m,
            PricePerMonth = 5066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 739",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 39800.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2018,
            Mileage = 65000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 36602.51m,
            PricePerMonth = 3316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 740",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 95900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4624.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 113911.78m,
            PricePerMonth = 7991.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw320I.ID,
            CarModel = Bmw320I,
            Title = "Bmw 320I 741",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 399000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2996.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1496.0,
            LengthMM = 5125.0,
            ManufactureYear = 2019,
            Mileage = 20000.0,
            PeakPowerHP = 367.0,
            PeakTorqueNM = 500.0,
            PredictedPrice = 347069.94m,
            PricePerMonth = 33250.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3035.0,
            WidthMM = 1899.0,
            CarModelID = MercedesBenzS560E.ID,
            CarModel = MercedesBenzS560E,
            Title = "MercedesBenz S560E 742",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23707.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1425.0,
            LengthMM = 4395.0,
            ManufactureYear = 2012,
            Mileage = 82000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 25986.24m,
            PricePerMonth = 1975.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 743",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1471.0,
            LengthMM = 4821.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 194.0,
            PredictedPrice = 46435.43m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2794.0,
            WidthMM = 1834.0,
            CarModelID = HyundaiSonata.ID,
            CarModel = HyundaiSonata,
            Title = "Hyundai Sonata 744",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 99800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2017,
            Mileage = 70000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 124908.02m,
            PricePerMonth = 8316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw318I.ID,
            CarModel = Bmw318I,
            Title = "Bmw 318I 745",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1584.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4465.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 12411.3m,
            PricePerMonth = 816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1740.0,
            CarModelID = ProtonWaja.ID,
            CarModel = ProtonWaja,
            Title = "Proton Waja 746",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 17500.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2012,
            Mileage = 105000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 21580.17m,
            PricePerMonth = 1458.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 747",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1430.0,
            LengthMM = 4320.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 45485.41m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1765.0,
            CarModelID = LexusCt200H.ID,
            CarModel = LexusCt200H,
            Title = "Lexus Ct200H 748",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 54800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1477.0,
            LengthMM = 4442.0,
            ManufactureYear = 2017,
            Mileage = 95000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 55658.5m,
            PricePerMonth = 4566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1694.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 749",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 26800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1435.0,
            LengthMM = 4395.0,
            ManufactureYear = 2011,
            Mileage = 90000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 25758.67m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 750",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 847.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 3490.0,
            ManufactureYear = 2004,
            Mileage = 175000.0,
            PeakPowerHP = 50.0,
            PeakTorqueNM = 74.0,
            PredictedPrice = 9779.75m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 751",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 18800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 3750.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 87.0,
            PeakTorqueNM = 116.0,
            PredictedPrice = 20041.11m,
            PricePerMonth = 1566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 752",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 57900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4410.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 42007.32m,
            PricePerMonth = 4825.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 753",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1715.0,
            LengthMM = 5080.0,
            ManufactureYear = 2005,
            Mileage = 120000.0,
            PeakPowerHP = 133.0,
            PeakTorqueNM = 304.0,
            PredictedPrice = 36543.28m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1825.0,
            CarModelID = NissanFrontier.ID,
            CarModel = NissanFrontier,
            Title = "Nissan Frontier 754",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1447.0,
            LengthMM = 4676.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 21789.24m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2725.0,
            WidthMM = 1811.0,
            CarModelID = Peugeot407.ID,
            CarModel = Peugeot407,
            Title = "Peugeot 407 755",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2014,
            Mileage = 115000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 35470.6m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 756",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 79800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2967.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4961.0,
            ManufactureYear = 2010,
            Mileage = 80000.0,
            PeakPowerHP = 238.0,
            PeakTorqueNM = 293.0,
            PredictedPrice = 76361.1m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2909.0,
            WidthMM = 1877.0,
            CarModelID = JaguarXf.ID,
            CarModel = JaguarXf,
            Title = "Jaguar Xf 757",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 93999.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1713.0,
            LengthMM = 4627.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 320.0,
            PredictedPrice = 93910.0m,
            PricePerMonth = 7833.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2774.0,
            WidthMM = 2120.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 758",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1471.0,
            LengthMM = 4821.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 194.0,
            PredictedPrice = 45884.51m,
            PricePerMonth = 3658.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2794.0,
            WidthMM = 1834.0,
            CarModelID = HyundaiSonata.ID,
            CarModel = HyundaiSonata,
            Title = "Hyundai Sonata 759",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 185000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 4806.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1702.0,
            LengthMM = 4846.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 500.0,
            PeakTorqueNM = 700.0,
            PredictedPrice = 267045.98m,
            PricePerMonth = 15416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2895.0,
            WidthMM = 1939.0,
            CarModelID = PorscheCayenne.ID,
            CarModel = PorscheCayenne,
            Title = "Porsche Cayenne 760",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 4387.0,
            ManufactureYear = 2017,
            Mileage = 60000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 34817.56m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 761",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 47800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 43363.06m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 762",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 128800.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 4005.0,
            ManufactureYear = 2015,
            Mileage = 95000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 126815.01m,
            PricePerMonth = 10733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2567.0,
            WidthMM = 1727.0,
            CarModelID = Mini5Door.ID,
            CarModel = Mini5Door,
            Title = "Mini 5Door 763",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 47800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1452.0,
            LengthMM = 3976.0,
            ManufactureYear = 2012,
            Mileage = 98100.0,
            PeakPowerHP = 179.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 49555.26m,
            PricePerMonth = 3983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2468.0,
            WidthMM = 1682.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 764",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 113000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4850.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 209.0,
            PeakTorqueNM = 253.0,
            PredictedPrice = 112502.75m,
            PricePerMonth = 9416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2850.0,
            WidthMM = 1840.0,
            CarModelID = LexusGs250.ID,
            CarModel = LexusGs250,
            Title = "Lexus Gs250 765",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41995.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1373.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4265.0,
            ManufactureYear = 2018,
            Mileage = 120000.0,
            PeakPowerHP = 92.0,
            PeakTorqueNM = 130.0,
            PredictedPrice = 35182.63m,
            PricePerMonth = 3499.58m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = ProtonErtiga.ID,
            CarModel = ProtonErtiga,
            Title = "Proton Ertiga 766",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 64800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4610.0,
            ManufactureYear = 2016,
            Mileage = 85000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 66108.39m,
            PricePerMonth = 5400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1795.0,
            CarModelID = SubaruForester.ID,
            CarModel = SubaruForester,
            Title = "Subaru Forester 767",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 85700.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4624.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 96052.44m,
            PricePerMonth = 7141.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw320I.ID,
            CarModel = Bmw320I,
            Title = "Bmw 320I 768",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 45800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5230.0,
            ManufactureYear = 2011,
            Mileage = 110000.0,
            PeakPowerHP = 174.0,
            PeakTorqueNM = 403.0,
            PredictedPrice = 54759.41m,
            PricePerMonth = 3816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3200.0,
            WidthMM = 1850.0,
            CarModelID = NissanNavara.ID,
            CarModel = NissanNavara,
            Title = "Nissan Navara 769",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 234999.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1468.0,
            LengthMM = 4923.0,
            ManufactureYear = 2017,
            Mileage = 55000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 188549.46m,
            PricePerMonth = 19583.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2939.0,
            WidthMM = 1852.0,
            CarModelID = MercedesBenzE250.ID,
            CarModel = MercedesBenzE250,
            Title = "MercedesBenz E250 770",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26800.0m,
            Colour = "Yellow",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3685.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 29517.17m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 771",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 32800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1421.0,
            LengthMM = 4531.0,
            ManufactureYear = 2010,
            Mileage = 122500.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 37240.86m,
            PricePerMonth = 2733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1817.0,
            CarModelID = Bmw320I.ID,
            CarModel = Bmw320I,
            Title = "Bmw 320I 772",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 25800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4540.0,
            ManufactureYear = 2009,
            Mileage = 90000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 32893.49m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaCorollaAltis.ID,
            CarModel = ToyotaCorollaAltis,
            Title = "Toyota CorollaAltis 773",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 41800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4856.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 51602.09m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2795.0,
            WidthMM = 1835.0,
            CarModelID = KiaOptimaK5.ID,
            CarModel = KiaOptimaK5,
            Title = "Kia OptimaK5 774",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 62800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2359.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1680.0,
            LengthMM = 4690.0,
            ManufactureYear = 2014,
            Mileage = 160000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 227.0,
            PredictedPrice = 66638.02m,
            PricePerMonth = 5233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1880.0,
            CarModelID = HyundaiSantaFe.ID,
            CarModel = HyundaiSantaFe,
            Title = "Hyundai SantaFe 775",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 69800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4560.0,
            ManufactureYear = 2018,
            Mileage = 15000.0,
            PeakPowerHP = 129.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 55161.45m,
            PricePerMonth = 5816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1780.0,
            CarModelID = KiaCerato.ID,
            CarModel = KiaCerato,
            Title = "Kia Cerato 776",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 9900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1441.0,
            LengthMM = 4818.0,
            ManufactureYear = 1997,
            Mileage = 105000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 33657.78m,
            PricePerMonth = 825.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.HydraulicPower],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2833.0,
            WidthMM = 1799.0,
            CarModelID = MercedesBenzE280.ID,
            CarModel = MercedesBenzE280,
            Title = "MercedesBenz E280 777",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 37888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1655.0,
            LengthMM = 5220.0,
            ManufactureYear = 2014,
            Mileage = 285000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 41698.14m,
            PricePerMonth = 3157.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1750.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 778",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 22800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 3962.0,
            ManufactureYear = 2014,
            Mileage = 86500.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 26705.99m,
            PricePerMonth = 1900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2538.0,
            WidthMM = 1739.0,
            CarModelID = Peugeot208.ID,
            CarModel = Peugeot208,
            Title = "Peugeot 208 779",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4536.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 28676.7m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonSuprimaS.ID,
            CarModel = ProtonSuprimaS,
            Title = "Proton SuprimaS 780",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 116888.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1565.0,
            LengthMM = 4360.0,
            ManufactureYear = 2018,
            Mileage = 35000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 171.0,
            PredictedPrice = 95260.11m,
            PricePerMonth = 9740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1795.0,
            CarModelID = ToyotaCHr.ID,
            CarModel = ToyotaCHr,
            Title = "Toyota CHr 781",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2019,
            Mileage = 40000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34702.08m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 782",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 35800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1790.0,
            LengthMM = 4920.0,
            ManufactureYear = 2004,
            Mileage = 180000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 37785.24m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1845.0,
            CarModelID = HondaElysion.ID,
            CarModel = HondaElysion,
            Title = "Honda Elysion 783",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 28888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1490.0,
            LengthMM = 4460.0,
            ManufactureYear = 2011,
            Mileage = 100000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 33728.09m,
            PricePerMonth = 2407.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1745.0,
            CarModelID = ToyotaPrius.ID,
            CarModel = ToyotaPrius,
            Title = "Toyota Prius 784",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 112700.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1395.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1673.0,
            LengthMM = 4486.0,
            ManufactureYear = 2018,
            Mileage = 50000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 116902.67m,
            PricePerMonth = 9391.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2677.0,
            WidthMM = 1839.0,
            CarModelID = VolkswagenTiguan.ID,
            CarModel = VolkswagenTiguan,
            Title = "Volkswagen Tiguan 785",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 179999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2993.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1837.0,
            LengthMM = 4829.0,
            ManufactureYear = 2013,
            Mileage = 145000.0,
            PeakPowerHP = 253.0,
            PeakTorqueNM = 600.0,
            PredictedPrice = 213922.69m,
            PricePerMonth = 14999.92m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2885.0,
            WidthMM = 2022.0,
            CarModelID = LandRoverDiscovery4.ID,
            CarModel = LandRoverDiscovery4,
            Title = "LandRover Discovery4 786",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 44800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4215.0,
            ManufactureYear = 2010,
            Mileage = 165000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 41339.54m,
            PricePerMonth = 3733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1700.0,
            CarModelID = HondaFreed.ID,
            CarModel = HondaFreed,
            Title = "Honda Freed 787",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 76700.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5362.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 200.0,
            PeakTorqueNM = 470.0,
            PredictedPrice = 85606.74m,
            PricePerMonth = 6391.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3220.0,
            WidthMM = 1860.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 788",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 66900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4235.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 143.0,
            PredictedPrice = 60923.67m,
            PricePerMonth = 5575.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaSienta.ID,
            CarModel = ToyotaSienta,
            Title = "Toyota Sienta 789",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 41800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4215.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 40471.45m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1700.0,
            CarModelID = HondaFreed.ID,
            CarModel = HondaFreed,
            Title = "Honda Freed 790",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 46800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4856.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 48881.13m,
            PricePerMonth = 3900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2795.0,
            WidthMM = 1835.0,
            CarModelID = KiaOptimaK5.ID,
            CarModel = KiaOptimaK5,
            Title = "Kia OptimaK5 791",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 26200.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1660.0,
            LengthMM = 4650.0,
            ManufactureYear = 2004,
            Mileage = 165000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 32831.86m,
            PricePerMonth = 2183.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2825.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaIpsum.ID,
            CarModel = ToyotaIpsum,
            Title = "Toyota Ipsum 792",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1373.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4265.0,
            ManufactureYear = 2017,
            Mileage = 80000.0,
            PeakPowerHP = 92.0,
            PeakTorqueNM = 130.0,
            PredictedPrice = 37809.61m,
            PricePerMonth = 3166.58m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = ProtonErtiga.ID,
            CarModel = ProtonErtiga,
            Title = "Proton Ertiga 793",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1570.0,
            LengthMM = 3695.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 91.0,
            PeakTorqueNM = 117.0,
            PredictedPrice = 24476.64m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 794",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 248800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2979.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1702.0,
            LengthMM = 4909.0,
            ManufactureYear = 2015,
            Mileage = 50000.0,
            PeakPowerHP = 306.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 237026.42m,
            PricePerMonth = 20733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2933.0,
            WidthMM = 1989.0,
            CarModelID = BmwX6.ID,
            CarModel = BmwX6,
            Title = "Bmw X6 795",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 82800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1810.0,
            LengthMM = 5255.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 403.0,
            PredictedPrice = 76903.33m,
            PricePerMonth = 6900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3150.0,
            WidthMM = 1850.0,
            CarModelID = NissanNavara.ID,
            CarModel = NissanNavara,
            Title = "Nissan Navara 796",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 133000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1986.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4720.0,
            ManufactureYear = 2015,
            Mileage = 50000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 193.0,
            PredictedPrice = 120848.02m,
            PricePerMonth = 11083.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 797",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 15800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2994.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1669.0,
            LengthMM = 4575.0,
            ManufactureYear = 1998,
            Mileage = 205000.0,
            PeakPowerHP = 220.0,
            PeakTorqueNM = 304.0,
            PredictedPrice = 20153.44m,
            PricePerMonth = 1316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2619.0,
            WidthMM = 1816.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 798",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4420.0,
            ManufactureYear = 2008,
            Mileage = 85000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 31635.63m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1690.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 799",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 27800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1425.0,
            LengthMM = 4395.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 26055.39m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 800",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 35800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1790.0,
            LengthMM = 4920.0,
            ManufactureYear = 2004,
            Mileage = 175000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 38480.31m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1845.0,
            CarModelID = HondaElysion.ID,
            CarModel = HondaElysion,
            Title = "Honda Elysion 801",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 56800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1925.0,
            LengthMM = 5125.0,
            ManufactureYear = 2012,
            Mileage = 110000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 392.0,
            PredictedPrice = 64848.03m,
            PricePerMonth = 4733.33m,
            SeatCapacity = 11,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3200.0,
            WidthMM = 1920.0,
            CarModelID = HyundaiGrandStarex.ID,
            CarModel = HyundaiGrandStarex,
            Title = "Hyundai GrandStarex 802",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 44800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4560.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 129.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 39852.01m,
            PricePerMonth = 3733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1780.0,
            CarModelID = KiaCerato.ID,
            CarModel = KiaCerato,
            Title = "Kia Cerato 803",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34800.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 3626.0,
            ManufactureYear = 2005,
            Mileage = 165000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 149.0,
            PredictedPrice = 37077.25m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2467.0,
            WidthMM = 1688.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 804",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 189000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4310.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 360.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 191365.82m,
            PricePerMonth = 15750.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA45Amg.ID,
            CarModel = MercedesBenzA45Amg,
            Title = "MercedesBenz A45Amg 805",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2359.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1750.0,
            LengthMM = 4685.0,
            ManufactureYear = 2011,
            Mileage = 110000.0,
            PeakPowerHP = 177.0,
            PeakTorqueNM = 226.0,
            PredictedPrice = 42576.45m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1885.0,
            CarModelID = KiaSorento.ID,
            CarModel = KiaSorento,
            Title = "Kia Sorento 806",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 176800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1414.0,
            LengthMM = 3850.0,
            ManufactureYear = 2018,
            Mileage = 20000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 164893.42m,
            PricePerMonth = 14733.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2495.0,
            WidthMM = 1727.0,
            CarModelID = Mini3Door.ID,
            CarModel = Mini3Door,
            Title = "Mini 3Door 807",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 59800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 52759.07m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 808",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 82999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1474.0,
            LengthMM = 4879.0,
            ManufactureYear = 2014,
            Mileage = 100000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 137160.4m,
            PricePerMonth = 6916.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE250.ID,
            CarModel = MercedesBenzE250,
            Title = "MercedesBenz E250 809",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 179800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1747.0,
            LengthMM = 5075.0,
            ManufactureYear = 2017,
            Mileage = 100000.0,
            PeakPowerHP = 231.0,
            PeakTorqueNM = 420.0,
            PredictedPrice = 176127.41m,
            PricePerMonth = 14983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2930.0,
            WidthMM = 1969.0,
            CarModelID = MazdaCx9.ID,
            CarModel = MazdaCx9,
            Title = "Mazda Cx9 810",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 74800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1557.0,
            LengthMM = 4359.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 90826.83m,
            PricePerMonth = 6233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1786.0,
            CarModelID = MercedesBenzB200.ID,
            CarModel = MercedesBenzB200,
            Title = "MercedesBenz B200 811",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 81800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 74547.78m,
            PricePerMonth = 6816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 812",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 847.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 3490.0,
            ManufactureYear = 2004,
            Mileage = 175000.0,
            PeakPowerHP = 50.0,
            PeakTorqueNM = 74.0,
            PredictedPrice = 9779.75m,
            PricePerMonth = 733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 813",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 67999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1430.0,
            LengthMM = 3723.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 38698.34m,
            PricePerMonth = 5666.58m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2467.0,
            WidthMM = 1683.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 814",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 19800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1585.0,
            LengthMM = 4995.0,
            ManufactureYear = 2006,
            Mileage = 145000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 158.0,
            PredictedPrice = 33961.06m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2950.0,
            WidthMM = 1695.0,
            CarModelID = MitsubishiL200.ID,
            CarModel = MitsubishiL200,
            Title = "Mitsubishi L200 815",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19990.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4530.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 124.0,
            PeakTorqueNM = 156.0,
            PredictedPrice = 29356.34m,
            PricePerMonth = 1665.83m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1775.0,
            CarModelID = KiaForte.ID,
            CarModel = KiaForte,
            Title = "Kia Forte 816",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 28800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1785.0,
            LengthMM = 4750.0,
            ManufactureYear = 2001,
            Mileage = 370000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 221.0,
            PredictedPrice = 36516.98m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2900.0,
            WidthMM = 1790.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 817",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 47700.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4150.0,
            ManufactureYear = 2015,
            Mileage = 50000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 42845.99m,
            PricePerMonth = 3975.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2655.0,
            WidthMM = 1600.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 818",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1570.0,
            LengthMM = 3695.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 91.0,
            PeakTorqueNM = 117.0,
            PredictedPrice = 24632.98m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 819",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14400.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1434.0,
            LengthMM = 3898.0,
            ManufactureYear = 2011,
            Mileage = 100000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 20950.61m,
            PricePerMonth = 1200.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1745.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 820",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 118800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1675.0,
            LengthMM = 4550.0,
            ManufactureYear = 2018,
            Mileage = 40000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 106340.41m,
            PricePerMonth = 9900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 821",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 70800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4560.0,
            ManufactureYear = 2019,
            Mileage = 10000.0,
            PeakPowerHP = 129.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 54644.96m,
            PricePerMonth = 5900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1780.0,
            CarModelID = KiaCerato.ID,
            CarModel = KiaCerato,
            Title = "Kia Cerato 822",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 97800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4865.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 102220.49m,
            PricePerMonth = 8150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 823",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 29700.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4300.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 34470.8m,
            PricePerMonth = 2475.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 824",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 36286.2m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 825",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 45000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.3862212943632,
            LengthMM = 4581.0,
            ManufactureYear = 2009,
            Mileage = 90000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 230.0,
            PredictedPrice = 39435.77m,
            PricePerMonth = 3750.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 1770.0,
            CarModelID = MercedesBenzC180K.ID,
            CarModel = MercedesBenzC180K,
            Title = "MercedesBenz C180K 826",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4769.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 62168.42m,
            PricePerMonth = 4150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2712.0,
            WidthMM = 1820.0,
            CarModelID = VolkswagenPassat.ID,
            CarModel = VolkswagenPassat,
            Title = "Volkswagen Passat 827",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 200800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1414.0,
            LengthMM = 3850.0,
            ManufactureYear = 2019,
            Mileage = 35000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 160040.46m,
            PricePerMonth = 16733.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2495.0,
            WidthMM = 1727.0,
            CarModelID = Mini3Door.ID,
            CarModel = Mini3Door,
            Title = "Mini 3Door 828",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 56800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2013,
            Mileage = 125000.0,
            PeakPowerHP = 154.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 62890.59m,
            PricePerMonth = 4733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 829",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1396.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4045.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 137.0,
            PredictedPrice = 28628.3m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2570.0,
            WidthMM = 1720.0,
            CarModelID = KiaRio.ID,
            CarModel = KiaRio,
            Title = "Kia Rio 830",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 26800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1660.0,
            LengthMM = 4650.0,
            ManufactureYear = 2004,
            Mileage = 175000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 31657.34m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2825.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaIpsum.ID,
            CarModel = ToyotaIpsum,
            Title = "Toyota Ipsum 831",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 128888.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1675.0,
            LengthMM = 4550.0,
            ManufactureYear = 2019,
            Mileage = 35000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 106340.41m,
            PricePerMonth = 10740.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 832",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 49900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4395.0,
            ManufactureYear = 2009,
            Mileage = 145000.0,
            PeakPowerHP = 152.0,
            PeakTorqueNM = 194.0,
            PredictedPrice = 35375.73m,
            PricePerMonth = 4158.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2560.0,
            WidthMM = 1815.0,
            CarModelID = ToyotaRav4.ID,
            CarModel = ToyotaRav4,
            Title = "Toyota Rav4 833",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 32800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2694.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1850.0,
            LengthMM = 4695.0,
            ManufactureYear = 2005,
            Mileage = 155000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 241.0,
            PredictedPrice = 37264.22m,
            PricePerMonth = 2733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1540.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 834",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 400888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1665.0,
            LengthMM = 4803.0,
            ManufactureYear = 2017,
            Mileage = 10000.0,
            PeakPowerHP = 381.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 357210.74m,
            PricePerMonth = 33407.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 2032.0,
            CarModelID = LandRoverRangeRoverVelar.ID,
            CarModel = LandRoverRangeRoverVelar,
            Title = "LandRover RangeRoverVelar 835",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 42800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4080.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 124.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 44791.84m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 836",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 79800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 3598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1699.0,
            LengthMM = 4792.0,
            ManufactureYear = 2007,
            Mileage = 95000.0,
            PeakPowerHP = 290.0,
            PeakTorqueNM = 385.0,
            PredictedPrice = 154922.71m,
            PricePerMonth = 6650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2855.0,
            WidthMM = 1928.0,
            CarModelID = PorscheCayenne.ID,
            CarModel = PorscheCayenne,
            Title = "Porsche Cayenne 837",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 54800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4075.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 48934.5m,
            PricePerMonth = 4566.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 838",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 179000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4725.0,
            ManufactureYear = 2018,
            Mileage = 85000.0,
            PeakPowerHP = 231.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 152138.88m,
            PricePerMonth = 14916.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 839",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 59800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4595.0,
            ManufactureYear = 2014,
            Mileage = 95000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 53027.0m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2640.0,
            WidthMM = 1795.0,
            CarModelID = SubaruForester.ID,
            CarModel = SubaruForester,
            Title = "Subaru Forester 840",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 29000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2013,
            Mileage = 115000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 26457.76m,
            PricePerMonth = 2416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 841",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 3690.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 91.0,
            PeakTorqueNM = 117.0,
            PredictedPrice = 24170.63m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 842",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34777.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4825.0,
            ManufactureYear = 2008,
            Mileage = 135000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 41680.72m,
            PricePerMonth = 2898.08m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2775.0,
            WidthMM = 1820.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 843",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1557.0,
            LengthMM = 4158.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 35440.07m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2538.0,
            WidthMM = 1740.0,
            CarModelID = Peugeot2008.ID,
            CarModel = Peugeot2008,
            Title = "Peugeot 2008 844",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 9900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1399.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1495.0,
            LengthMM = 3825.0,
            ManufactureYear = 2007,
            Mileage = 80000.0,
            PeakPowerHP = 97.0,
            PeakTorqueNM = 122.0,
            PredictedPrice = 19312.48m,
            PricePerMonth = 825.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1665.0,
            CarModelID = HyundaiGetz.ID,
            CarModel = HyundaiGetz,
            Title = "Hyundai Getz 845",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25888.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2012,
            Mileage = 105000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 26193.3m,
            PricePerMonth = 2157.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 846",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 29800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2012,
            Mileage = 170000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 28204.41m,
            PricePerMonth = 2483.33m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 847",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 43800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1457.0,
            LengthMM = 4522.0,
            ManufactureYear = 2012,
            Mileage = 80000.0,
            PeakPowerHP = 145.0,
            PeakTorqueNM = 185.0,
            PredictedPrice = 36161.53m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2640.0,
            WidthMM = 1770.0,
            CarModelID = VolvoV50.ID,
            CarModel = VolvoV50,
            Title = "Volvo V50 848",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 37800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1600.0,
            LengthMM = 4560.0,
            ManufactureYear = 2006,
            Mileage = 125000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 192.0,
            PredictedPrice = 40703.89m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1490.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 849",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 30800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4510.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 152.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 34171.28m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1740.0,
            CarModelID = ToyotaCaldina.ID,
            CarModel = ToyotaCaldina,
            Title = "Toyota Caldina 850",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 265888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1658.0,
            LengthMM = 4688.0,
            ManufactureYear = 2019,
            Mileage = 20000.0,
            PeakPowerHP = 320.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 276350.53m,
            PricePerMonth = 22157.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2865.0,
            WidthMM = 1902.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 851",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2013,
            Mileage = 50000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 32870.43m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 852",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 20999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1675.0,
            LengthMM = 4273.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 110.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 36267.72m,
            PricePerMonth = 1749.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2519.0,
            WidthMM = 1765.0,
            CarModelID = FordEcosport.ID,
            CarModel = FordEcosport,
            Title = "Ford Ecosport 853",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 28800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25419.14m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 854",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4825.0,
            ManufactureYear = 2009,
            Mileage = 120000.0,
            PeakPowerHP = 147.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 45400.26m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2775.0,
            WidthMM = 1820.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 855",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 86800.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2019,
            Mileage = 40000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 285.0,
            PredictedPrice = 93590.69m,
            PricePerMonth = 7233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 856",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2996.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1471.0,
            LengthMM = 4868.0,
            ManufactureYear = 2010,
            Mileage = 145000.0,
            PeakPowerHP = 231.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 64785.45m,
            PricePerMonth = 5708.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE300.ID,
            CarModel = MercedesBenzE300,
            Title = "MercedesBenz E300 857",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 31800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4420.0,
            ManufactureYear = 2011,
            Mileage = 115000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 29380.88m,
            PricePerMonth = 2650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1690.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 858",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34702.08m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 859",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 45500.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4540.0,
            ManufactureYear = 2012,
            Mileage = 80000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 40714.96m,
            PricePerMonth = 3791.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1755.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 860",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 45000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4856.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 48881.13m,
            PricePerMonth = 3750.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2795.0,
            WidthMM = 1835.0,
            CarModelID = KiaOptimaK5.ID,
            CarModel = KiaOptimaK5,
            Title = "Kia OptimaK5 861",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 12800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2009,
            Mileage = 105000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 14747.11m,
            PricePerMonth = 1066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 862",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38999.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1487.0,
            LengthMM = 4813.0,
            ManufactureYear = 2012,
            Mileage = 70000.0,
            PeakPowerHP = 158.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 60112.26m,
            PricePerMonth = 3249.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2817.0,
            WidthMM = 2068.0,
            CarModelID = Peugeot508.ID,
            CarModel = Peugeot508,
            Title = "Peugeot 508 863",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 208888.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1496.0,
            LengthMM = 5246.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 306.0,
            PeakTorqueNM = 370.0,
            PredictedPrice = 198334.01m,
            PricePerMonth = 17407.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3165.0,
            WidthMM = 1899.0,
            CarModelID = MercedesBenzS400L.ID,
            CarModel = MercedesBenzS400L,
            Title = "MercedesBenz S400L 864",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 26800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1498.0,
            LengthMM = 4276.0,
            ManufactureYear = 2012,
            Mileage = 40000.0,
            PeakPowerHP = 158.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 31371.76m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2608.0,
            WidthMM = 1815.0,
            CarModelID = Peugeot308.ID,
            CarModel = Peugeot308,
            Title = "Peugeot 308 865",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 219000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1969.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1652.0,
            LengthMM = 4425.0,
            ManufactureYear = 2019,
            Mileage = 8000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 215043.94m,
            PricePerMonth = 18250.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2702.0,
            WidthMM = 1863.0,
            CarModelID = VolvoXc40.ID,
            CarModel = VolvoXc40,
            Title = "Volvo Xc40 866",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 148000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2018,
            Mileage = 20000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 145473.18m,
            PricePerMonth = 12333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw330E.ID,
            CarModel = Bmw330E,
            Title = "Bmw 330E 867",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 32800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1434.0,
            LengthMM = 3898.0,
            ManufactureYear = 2013,
            Mileage = 84000.0,
            PeakPowerHP = 126.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 23979.33m,
            PricePerMonth = 2733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1745.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 868",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 238800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1414.0,
            LengthMM = 3874.0,
            ManufactureYear = 2018,
            Mileage = 25000.0,
            PeakPowerHP = 231.0,
            PeakTorqueNM = 320.0,
            PredictedPrice = 182819.74m,
            PricePerMonth = 19900.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2495.0,
            WidthMM = 1727.0,
            CarModelID = Mini3Door.ID,
            CarModel = Mini3Door,
            Title = "Mini 3Door 869",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 22800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 90000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25522.4m,
            PricePerMonth = 1900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 870",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 388000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 4395.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1393.0,
            LengthMM = 5011.0,
            ManufactureYear = 2014,
            Mileage = 38061.0,
            PeakPowerHP = 560.0,
            PeakTorqueNM = 680.0,
            PredictedPrice = 276436.89m,
            PricePerMonth = 32333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2964.0,
            WidthMM = 1899.0,
            CarModelID = BmwM6.ID,
            CarModel = BmwM6,
            Title = "Bmw M6 871",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 77999.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1840.0,
            LengthMM = 5255.0,
            ManufactureYear = 2017,
            Mileage = 65000.0,
            PeakPowerHP = 190.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 86825.38m,
            PricePerMonth = 6499.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3150.0,
            WidthMM = 1850.0,
            CarModelID = NissanNavara.ID,
            CarModel = NissanNavara,
            Title = "Nissan Navara 872",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1491.0,
            LengthMM = 4331.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 25828.39m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2465.0,
            WidthMM = 1689.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 873",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 58700.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1395.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1452.0,
            LengthMM = 4255.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 63982.01m,
            PricePerMonth = 4891.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2637.0,
            WidthMM = 1799.0,
            CarModelID = VolkswagenGolf.ID,
            CarModel = VolkswagenGolf,
            Title = "Volkswagen Golf 874",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1308.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1340.0,
            LengthMM = 4460.0,
            ManufactureYear = 2008,
            Mileage = 110000.0,
            PeakPowerHP = 215.0,
            PeakTorqueNM = 211.0,
            PredictedPrice = 43037.96m,
            PricePerMonth = 5740.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1770.0,
            CarModelID = MazdaRx8.ID,
            CarModel = MazdaRx8,
            Title = "Mazda Rx8 875",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 3750.0,
            ManufactureYear = 2010,
            Mileage = 135000.0,
            PeakPowerHP = 87.0,
            PeakTorqueNM = 116.0,
            PredictedPrice = 19607.75m,
            PricePerMonth = 1490.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 876",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 69800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1850.0,
            LengthMM = 5260.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 69711.91m,
            PricePerMonth = 5816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3085.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 877",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68800.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4235.0,
            ManufactureYear = 2016,
            Mileage = 35000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 143.0,
            PredictedPrice = 64969.84m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaSienta.ID,
            CarModel = ToyotaSienta,
            Title = "Toyota Sienta 878",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 78800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1450.0,
            LengthMM = 4580.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 78809.26m,
            PricePerMonth = 6566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1795.0,
            CarModelID = Mazda3.ID,
            CarModel = Mazda3,
            Title = "Mazda 3 879",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13888.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1781.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1815.0,
            LengthMM = 4535.0,
            ManufactureYear = 2003,
            Mileage = 200000.0,
            PeakPowerHP = 83.0,
            PeakTorqueNM = 147.0,
            PredictedPrice = 21405.68m,
            PricePerMonth = 1157.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1710.0,
            CarModelID = ToyotaUnser.ID,
            CarModel = ToyotaUnser,
            Title = "Toyota Unser 880",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1373.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4265.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 92.0,
            PeakTorqueNM = 130.0,
            PredictedPrice = 38896.46m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 6,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = ProtonErtiga.ID,
            CarModel = ProtonErtiga,
            Title = "Proton Ertiga 881",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 61800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2013,
            Mileage = 100000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 60985.25m,
            PricePerMonth = 5150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 882",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 600000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1667.0,
            LengthMM = 4731.0,
            ManufactureYear = 2016,
            Mileage = 10000.0,
            PeakPowerHP = 385.0,
            PeakTorqueNM = 450.0,
            PredictedPrice = 356464.09m,
            PricePerMonth = 50000.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 1936.0,
            CarModelID = JaguarFPace.ID,
            CarModel = JaguarFPace,
            Title = "Jaguar FPace 883",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 51800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.0,
            LengthMM = 4627.0,
            ManufactureYear = 2010,
            Mileage = 125000.0,
            PeakPowerHP = 205.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 52208.14m,
            PricePerMonth = 4316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2774.0,
            WidthMM = 1891.0,
            CarModelID = VolvoXc60.ID,
            CarModel = VolvoXc60,
            Title = "Volvo Xc60 884",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 59800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2500.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4770.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 245.0,
            PredictedPrice = 67790.58m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2825.0,
            WidthMM = 1880.0,
            CarModelID = NissanMurano.ID,
            CarModel = NissanMurano,
            Title = "Nissan Murano 885",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 173000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 3956.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1830.0,
            LengthMM = 4670.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 272.0,
            PeakTorqueNM = 380.0,
            PredictedPrice = 141132.59m,
            PricePerMonth = 14416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2690.0,
            WidthMM = 1905.0,
            CarModelID = ToyotaFjCruiser.ID,
            CarModel = ToyotaFjCruiser,
            Title = "Toyota FjCruiser 886",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 71800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5362.0,
            ManufactureYear = 2016,
            Mileage = 5000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 385.0,
            PredictedPrice = 87259.95m,
            PricePerMonth = 5983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3220.0,
            WidthMM = 1860.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 887",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 23596.64m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 888",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 12800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4465.0,
            ManufactureYear = 2010,
            Mileage = 110000.0,
            PeakPowerHP = 125.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 18413.37m,
            PricePerMonth = 1066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1740.0,
            CarModelID = ProtonWaja.ID,
            CarModel = ProtonWaja,
            Title = "Proton Waja 889",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 58800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1797.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4600.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 173.0,
            PredictedPrice = 53215.72m,
            PricePerMonth = 4900.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1720.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 890",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 57800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1456.0,
            LengthMM = 4830.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 67781.53m,
            PricePerMonth = 4816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2817.0,
            WidthMM = 1828.0,
            CarModelID = Peugeot508.ID,
            CarModel = Peugeot508,
            Title = "Peugeot 508 891",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 3955.0,
            ManufactureYear = 2016,
            Mileage = 93000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 54683.37m,
            PricePerMonth = 4157.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2530.0,
            WidthMM = 1694.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 892",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 44800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1395.0,
            LengthMM = 4075.0,
            ManufactureYear = 2013,
            Mileage = 10000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 53949.59m,
            PricePerMonth = 3733.33m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2435.0,
            WidthMM = 1740.0,
            CarModelID = HondaCrZ.ID,
            CarModel = HondaCrZ,
            Title = "Honda CrZ 893",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 106800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4268.0,
            ManufactureYear = 2013,
            Mileage = 70000.0,
            PeakPowerHP = 220.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 118146.39m,
            PricePerMonth = 8900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2631.0,
            WidthMM = 1799.0,
            CarModelID = VolkswagenGolf.ID,
            CarModel = VolkswagenGolf,
            Title = "Volkswagen Golf 894",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 129800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1675.0,
            LengthMM = 4550.0,
            ManufactureYear = 2019,
            Mileage = 15000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 210.0,
            PredictedPrice = 115358.03m,
            PricePerMonth = 10816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 895",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 22852.4m,
            PricePerMonth = 1333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 896",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 263800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectOrMultiPointInjection],
            Doors = 5,
            EngineCC = 3456.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4890.0,
            ManufactureYear = 2016,
            Mileage = 95000.0,
            PeakPowerHP = 299.0,
            PeakTorqueNM = 370.0,
            PredictedPrice = 217295.67m,
            PricePerMonth = 21983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2790.0,
            WidthMM = 1895.0,
            CarModelID = LexusRx350.ID,
            CarModel = LexusRx350,
            Title = "Lexus Rx350 897",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 5800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1468.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1385.0,
            LengthMM = 4360.0,
            ManufactureYear = 2000,
            Mileage = 135000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 126.0,
            PredictedPrice = 8838.95m,
            PricePerMonth = 483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2500.0,
            WidthMM = 1680.0,
            CarModelID = ProtonWira.ID,
            CarModel = ProtonWira,
            Title = "Proton Wira 898",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 57799.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4769.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 62168.42m,
            PricePerMonth = 4816.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2712.0,
            WidthMM = 1820.0,
            CarModelID = VolkswagenPassat.ID,
            CarModel = VolkswagenPassat,
            Title = "Volkswagen Passat 899",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 265000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 4395.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1467.0,
            LengthMM = 4910.0,
            ManufactureYear = 2014,
            Mileage = 50000.0,
            PeakPowerHP = 560.0,
            PeakTorqueNM = 680.0,
            PredictedPrice = 265431.68m,
            PricePerMonth = 22083.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2964.0,
            WidthMM = 1891.0,
            CarModelID = BmwM5.ID,
            CarModel = BmwM5,
            Title = "Bmw M5 900",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 32800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1482.0,
            LengthMM = 4644.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 43790.99m,
            PricePerMonth = 2733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2651.0,
            WidthMM = 1778.0,
            CarModelID = VolkswagenJetta.ID,
            CarModel = VolkswagenJetta,
            Title = "Volkswagen Jetta 901",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 65800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1447.0,
            LengthMM = 4581.0,
            ManufactureYear = 2011,
            Mileage = 75000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 74905.57m,
            PricePerMonth = 5483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2760.0,
            WidthMM = 2020.0,
            CarModelID = MercedesBenzC200Cgi.ID,
            CarModel = MercedesBenzC200Cgi,
            Title = "MercedesBenz C200Cgi 902",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2014,
            Mileage = 40000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 57063.83m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 903",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 139000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4355.0,
            ManufactureYear = 2016,
            Mileage = 65000.0,
            PeakPowerHP = 222.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 175693.86m,
            PricePerMonth = 11583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA250.ID,
            CarModel = MercedesBenzA250,
            Title = "MercedesBenz A250 904",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1329.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 4150.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34438.99m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 905",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 50000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 4163.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1860.0,
            LengthMM = 4890.0,
            ManufactureYear = 2000,
            Mileage = 180000.0,
            PeakPowerHP = 205.0,
            PeakTorqueNM = 431.0,
            PredictedPrice = 92547.52m,
            PricePerMonth = 4166.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1940.0,
            CarModelID = ToyotaLandCruiser.ID,
            CarModel = ToyotaLandCruiser,
            Title = "Toyota LandCruiser 906",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 216800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 2261.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1379.0,
            LengthMM = 4784.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 317.0,
            PeakTorqueNM = 432.0,
            PredictedPrice = 253287.61m,
            PricePerMonth = 18066.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2720.0,
            WidthMM = 1916.0,
            CarModelID = FordMustang.ID,
            CarModel = FordMustang,
            Title = "Ford Mustang 907",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 4387.0,
            ManufactureYear = 2019,
            Mileage = 40000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 36172.12m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonPersona.ID,
            CarModel = ProtonPersona,
            Title = "Proton Persona 908",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2014,
            Mileage = 110000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 27411.56m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2613.0,
            WidthMM = 1837.0,
            CarModelID = Peugeot3008.ID,
            CarModel = Peugeot3008,
            Title = "Peugeot 3008 909",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1498.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1500.0,
            LengthMM = 4425.0,
            ManufactureYear = 2017,
            Mileage = 85000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 139.0,
            PredictedPrice = 35212.72m,
            PricePerMonth = 3483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = NissanAlmera.ID,
            CarModel = NissanAlmera,
            Title = "Nissan Almera 910",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2012,
            Mileage = 65000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 22305.68m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 911",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 185000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 4806.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1702.0,
            LengthMM = 4846.0,
            ManufactureYear = 2010,
            Mileage = 80000.0,
            PeakPowerHP = 500.0,
            PeakTorqueNM = 700.0,
            PredictedPrice = 280650.74m,
            PricePerMonth = 15416.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2895.0,
            WidthMM = 1939.0,
            CarModelID = PorscheCayenne.ID,
            CarModel = PorscheCayenne,
            Title = "Porsche Cayenne 912",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 50600.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 37047.61m,
            PricePerMonth = 4216.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 913",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 37800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1600.0,
            LengthMM = 4560.0,
            ManufactureYear = 2006,
            Mileage = 125000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 192.0,
            PredictedPrice = 40703.89m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1490.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 914",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 144800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1442.0,
            LengthMM = 4686.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 147607.89m,
            PricePerMonth = 12066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2840.0,
            WidthMM = 1810.0,
            CarModelID = MercedesBenzC200.ID,
            CarModel = MercedesBenzC200,
            Title = "MercedesBenz C200 915",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 86800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2996.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1473.0,
            LengthMM = 5209.0,
            ManufactureYear = 2010,
            Mileage = 110000.0,
            PeakPowerHP = 314.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 69293.02m,
            PricePerMonth = 7233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3165.0,
            WidthMM = 1872.0,
            CarModelID = MercedesBenzS300L.ID,
            CarModel = MercedesBenzS300L,
            Title = "MercedesBenz S300L 916",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24500.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1485.0,
            LengthMM = 4618.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 195.0,
            PredictedPrice = 35336.59m,
            PricePerMonth = 2041.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2702.0,
            WidthMM = 1813.0,
            CarModelID = RenaultFluence.ID,
            CarModel = RenaultFluence,
            Title = "Renault Fluence 917",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 229800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1479.0,
            LengthMM = 4936.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 261245.47m,
            PricePerMonth = 19150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2975.0,
            WidthMM = 1868.0,
            CarModelID = Bmw530I.ID,
            CarModel = Bmw530I,
            Title = "Bmw 530I 918",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38500.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2477.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1779.0,
            LengthMM = 5295.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 314.0,
            PredictedPrice = 42090.28m,
            PricePerMonth = 3208.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 919",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 40800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1794.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4550.0,
            ManufactureYear = 2008,
            Mileage = 135000.0,
            PeakPowerHP = 179.0,
            PeakTorqueNM = 170.0,
            PredictedPrice = 45457.56m,
            PricePerMonth = 3400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaWish.ID,
            CarModel = ToyotaWish,
            Title = "Toyota Wish 920",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 48999.0m,
            Colour = "Brown",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1590.0,
            LengthMM = 4485.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 41816.29m,
            PricePerMonth = 4083.25m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1700.0,
            CarModelID = NissanGrandLivina.ID,
            CarModel = NissanGrandLivina,
            Title = "Nissan GrandLivina 921",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 53999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1821.0,
            LengthMM = 5365.0,
            ManufactureYear = 2015,
            Mileage = 85000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 375.0,
            PredictedPrice = 65252.31m,
            PricePerMonth = 4499.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3220.0,
            WidthMM = 1850.0,
            CarModelID = MazdaBt50.ID,
            CarModel = MazdaBt50,
            Title = "Mazda Bt50 922",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 178800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1436.0,
            LengthMM = 4276.0,
            ManufactureYear = 2015,
            Mileage = 95000.0,
            PeakPowerHP = 280.0,
            PeakTorqueNM = 380.0,
            PredictedPrice = 166345.21m,
            PricePerMonth = 14900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2630.0,
            WidthMM = 1799.0,
            CarModelID = VolkswagenGolf.ID,
            CarModel = VolkswagenGolf,
            Title = "Volkswagen Golf 923",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 64800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1850.0,
            LengthMM = 5260.0,
            ManufactureYear = 2012,
            Mileage = 130000.0,
            PeakPowerHP = 144.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 62710.44m,
            PricePerMonth = 5400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3085.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 924",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 42800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4856.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 44581.12m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2795.0,
            WidthMM = 1835.0,
            CarModelID = KiaOptimaK5.ID,
            CarModel = KiaOptimaK5,
            Title = "Kia OptimaK5 925",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 63988.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1740.0,
            LengthMM = 4435.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 133.0,
            PredictedPrice = 63823.15m,
            PricePerMonth = 5332.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAruz.ID,
            CarModel = PeroduaAruz,
            Title = "Perodua Aruz 926",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2018,
            Mileage = 15000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 64229.97m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 927",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1430.0,
            LengthMM = 4320.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 99.0,
            PeakTorqueNM = 142.0,
            PredictedPrice = 45485.41m,
            PricePerMonth = 3650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1765.0,
            CarModelID = LexusCt200H.ID,
            CarModel = LexusCt200H,
            Title = "Lexus Ct200H 928",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 96888.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2019,
            Mileage = 35000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 285.0,
            PredictedPrice = 93590.69m,
            PricePerMonth = 8074.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 929",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 183800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 3605.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1418.0,
            LengthMM = 4970.0,
            ManufactureYear = 2012,
            Mileage = 75000.0,
            PeakPowerHP = 299.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 189642.44m,
            PricePerMonth = 15316.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2920.0,
            WidthMM = 1931.0,
            CarModelID = PorschePanamera.ID,
            CarModel = PorschePanamera,
            Title = "Porsche Panamera 930",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24988.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 3962.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 26769.01m,
            PricePerMonth = 2082.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2538.0,
            WidthMM = 1739.0,
            CarModelID = Peugeot208.ID,
            CarModel = Peugeot208,
            Title = "Peugeot 208 931",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 48800.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 3,
            EngineCC = 2953.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1990.0,
            LengthMM = 4990.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 209.0,
            PredictedPrice = 48241.66m,
            PricePerMonth = 4066.67m,
            SeatCapacity = 14,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2715.0,
            WidthMM = 1690.0,
            CarModelID = NissanUrvan.ID,
            CarModel = NissanUrvan,
            Title = "Nissan Urvan 932",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 47600.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2994.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1935.0,
            LengthMM = 4800.0,
            ManufactureYear = 2006,
            Mileage = 185000.0,
            PeakPowerHP = 220.0,
            PeakTorqueNM = 304.0,
            PredictedPrice = 54313.58m,
            PricePerMonth = 3966.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1805.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 933",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 114999.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1433.0,
            LengthMM = 4292.0,
            ManufactureYear = 2015,
            Mileage = 45000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 132404.96m,
            PricePerMonth = 9583.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2699.0,
            WidthMM = 1780.0,
            CarModelID = MercedesBenzA200.ID,
            CarModel = MercedesBenzA200,
            Title = "MercedesBenz A200 934",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34500.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1525.0,
            LengthMM = 3900.0,
            ManufactureYear = 2014,
            Mileage = 100000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 34015.56m,
            PricePerMonth = 2875.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2500.0,
            WidthMM = 1695.0,
            CarModelID = HondaJazz.ID,
            CarModel = HondaJazz,
            Title = "Honda Jazz 935",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 48500.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2354.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1790.0,
            LengthMM = 4920.0,
            ManufactureYear = 2008,
            Mileage = 105000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 218.0,
            PredictedPrice = 44718.25m,
            PricePerMonth = 4041.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1845.0,
            CarModelID = HondaElysion.ID,
            CarModel = HondaElysion,
            Title = "Honda Elysion 936",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 42800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1984.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1703.0,
            LengthMM = 4426.0,
            ManufactureYear = 2012,
            Mileage = 70000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 70892.26m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2604.0,
            WidthMM = 1809.0,
            CarModelID = VolkswagenTiguan.ID,
            CarModel = VolkswagenTiguan,
            Title = "Volkswagen Tiguan 937",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34880.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1512.0,
            LengthMM = 4199.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 45730.32m,
            PricePerMonth = 2906.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2575.0,
            WidthMM = 1786.0,
            CarModelID = VolkswagenGolf.ID,
            CarModel = VolkswagenGolf,
            Title = "Volkswagen Golf 938",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 125888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2017,
            Mileage = 115000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 290.0,
            PredictedPrice = 132406.13m,
            PricePerMonth = 10490.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw330E.ID,
            CarModel = Bmw330E,
            Title = "Bmw 330E 939",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 34888.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2994.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1680.0,
            LengthMM = 4730.0,
            ManufactureYear = 2003,
            Mileage = 165000.0,
            PeakPowerHP = 299.0,
            PeakTorqueNM = 304.0,
            PredictedPrice = 48416.73m,
            PricePerMonth = 2907.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2715.0,
            WidthMM = 1845.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 940",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 19800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1750.0,
            LengthMM = 5135.0,
            ManufactureYear = 2000,
            Mileage = 225000.0,
            PeakPowerHP = 87.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 35201.75m,
            PricePerMonth = 1650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1695.0,
            CarModelID = MazdaFighter.ID,
            CarModel = MazdaFighter,
            Title = "Mazda Fighter 941",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 69800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5359.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 375.0,
            PredictedPrice = 63313.48m,
            PricePerMonth = 5816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3220.0,
            WidthMM = 1850.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 942",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 18800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4830.0,
            ManufactureYear = 2005,
            Mileage = 285000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 186.0,
            PredictedPrice = 31006.35m,
            PricePerMonth = 1566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1820.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 943",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 72800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2018,
            Mileage = 80000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 74547.78m,
            PricePerMonth = 6066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 944",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 158800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2014,
            Mileage = 80000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 141613.74m,
            PricePerMonth = 13233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1965.0,
            CarModelID = LandRoverRangeRoverEvoque.ID,
            CarModel = LandRoverRangeRoverEvoque,
            Title = "LandRover RangeRoverEvoque 945",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 12800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1640.0,
            LengthMM = 3450.0,
            ManufactureYear = 2003,
            Mileage = 187000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 11790.28m,
            PricePerMonth = 1066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1480.0,
            CarModelID = PeroduaKenari.ID,
            CarModel = PeroduaKenari,
            Title = "Perodua Kenari 946",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 11800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1584.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4465.0,
            ManufactureYear = 2006,
            Mileage = 150000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 13551.69m,
            PricePerMonth = 983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1740.0,
            CarModelID = ProtonWaja.ID,
            CarModel = ProtonWaja,
            Title = "Proton Waja 947",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 95000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 26386.28m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 948",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 72800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1850.0,
            LengthMM = 4705.0,
            ManufactureYear = 2012,
            Mileage = 65000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 62011.83m,
            PricePerMonth = 6066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaFortuner.ID,
            CarModel = ToyotaFortuner,
            Title = "Toyota Fortuner 949",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 139000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1986.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4720.0,
            ManufactureYear = 2015,
            Mileage = 30000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 193.0,
            PredictedPrice = 118501.92m,
            PricePerMonth = 11583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 950",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25183.88m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 951",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 30800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4510.0,
            ManufactureYear = 2006,
            Mileage = 155000.0,
            PeakPowerHP = 260.0,
            PeakTorqueNM = 323.0,
            PredictedPrice = 32801.17m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1740.0,
            CarModelID = ToyotaCaldina.ID,
            CarModel = ToyotaCaldina,
            Title = "Toyota Caldina 952",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2015,
            Mileage = 60000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 38304.95m,
            PricePerMonth = 2816.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 953",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 157999.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1429.0,
            LengthMM = 4633.0,
            ManufactureYear = 2017,
            Mileage = 65000000.0,
            PeakPowerHP = 252.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 156427.06m,
            PricePerMonth = 13166.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2810.0,
            WidthMM = 1811.0,
            CarModelID = Bmw330I.ID,
            CarModel = Bmw330I,
            Title = "Bmw 330I 954",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 14800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 14781.37m,
            PricePerMonth = 1233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 955",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1755.0,
            LengthMM = 4555.0,
            ManufactureYear = 2010,
            Mileage = 85000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 37641.5m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1770.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 956",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 32800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1462.0,
            LengthMM = 3970.0,
            ManufactureYear = 2013,
            Mileage = 149999.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 175.0,
            PredictedPrice = 39546.2m,
            PricePerMonth = 2733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2470.0,
            WidthMM = 1682.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 957",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 57800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1925.0,
            LengthMM = 5125.0,
            ManufactureYear = 2013,
            Mileage = 80000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 392.0,
            PredictedPrice = 64848.03m,
            PricePerMonth = 4816.67m,
            SeatCapacity = 11,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3200.0,
            WidthMM = 1920.0,
            CarModelID = HyundaiGrandStarex.ID,
            CarModel = HyundaiGrandStarex,
            Title = "Hyundai GrandStarex 958",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1638.0,
            LengthMM = 4530.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 27311.66m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2727.0,
            WidthMM = 2118.0,
            CarModelID = Peugeot5008.ID,
            CarModel = Peugeot5008,
            Title = "Peugeot 5008 959",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 16800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4530.0,
            ManufactureYear = 2010,
            Mileage = 105000.0,
            PeakPowerHP = 124.0,
            PeakTorqueNM = 156.0,
            PredictedPrice = 28733.55m,
            PricePerMonth = 1400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1775.0,
            CarModelID = KiaForte.ID,
            CarModel = KiaForte,
            Title = "Kia Forte 960",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 98900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 3456.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4770.0,
            ManufactureYear = 2010,
            Mileage = 140000.0,
            PeakPowerHP = 276.0,
            PeakTorqueNM = 342.0,
            PredictedPrice = 90958.73m,
            PricePerMonth = 8241.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1885.0,
            CarModelID = LexusRx350.ID,
            CarModel = LexusRx350,
            Title = "Lexus Rx350 961",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 63300.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1740.0,
            LengthMM = 4435.0,
            ManufactureYear = 2019,
            Mileage = 15000.0,
            PeakPowerHP = 102.0,
            PeakTorqueNM = 133.0,
            PredictedPrice = 63771.61m,
            PricePerMonth = 5275.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2685.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAruz.ID,
            CarModel = PeroduaAruz,
            Title = "Perodua Aruz 962",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 4800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 659.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 3365.0,
            ManufactureYear = 2005,
            Mileage = 165000.0,
            PeakPowerHP = 31.0,
            PeakTorqueNM = 49.0,
            PredictedPrice = 5976.62m,
            PricePerMonth = 400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 963",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1638.0,
            LengthMM = 4530.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 27311.66m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2727.0,
            WidthMM = 2118.0,
            CarModelID = Peugeot5008.ID,
            CarModel = Peugeot5008,
            Title = "Peugeot 5008 964",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4530.0,
            ManufactureYear = 2012,
            Mileage = 70000.0,
            PeakPowerHP = 131.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 38445.2m,
            PricePerMonth = 3066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1775.0,
            CarModelID = HyundaiElantra.ID,
            CarModel = HyundaiElantra,
            Title = "Hyundai Elantra 965",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 136800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4885.0,
            ManufactureYear = 2013,
            Mileage = 120000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 114398.03m,
            PricePerMonth = 11400.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 966",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 26800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1660.0,
            LengthMM = 4650.0,
            ManufactureYear = 2004,
            Mileage = 165000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 32831.86m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2825.0,
            WidthMM = 1760.0,
            CarModelID = ToyotaIpsum.ID,
            CarModel = ToyotaIpsum,
            Title = "Toyota Ipsum 967",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 53800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4770.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 177.0,
            PeakTorqueNM = 213.0,
            PredictedPrice = 51237.02m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2770.0,
            WidthMM = 1815.0,
            CarModelID = HyundaiI40.ID,
            CarModel = HyundaiI40,
            Title = "Hyundai I40 968",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 26800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1762.0,
            LengthMM = 5173.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 330.0,
            PredictedPrice = 37873.69m,
            PricePerMonth = 2233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1788.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 969",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 6800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1412.0,
            LengthMM = 4598.0,
            ManufactureYear = 1997,
            Mileage = 245000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 14809.72m,
            PricePerMonth = 566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1765.0,
            CarModelID = Peugeot406.ID,
            CarModel = Peugeot406,
            Title = "Peugeot 406 970",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1948.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 4520.0,
            ManufactureYear = 2000,
            Mileage = 140000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 16045.31m,
            PricePerMonth = 1157.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2560.0,
            WidthMM = 1720.0,
            CarModelID = VolvoV40.ID,
            CarModel = VolvoV40,
            Title = "Volvo V40 971",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 69999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2016,
            Mileage = 70000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 71217.35m,
            PricePerMonth = 5833.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 972",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4530.0,
            ManufactureYear = 2012,
            Mileage = 120000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 194.0,
            PredictedPrice = 33227.82m,
            PricePerMonth = 2158.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1775.0,
            CarModelID = KiaForte.ID,
            CarModel = KiaForte,
            Title = "Kia Forte 973",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 62800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5359.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 375.0,
            PredictedPrice = 60859.1m,
            PricePerMonth = 5233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3220.0,
            WidthMM = 1850.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 974",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 139800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1986.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1690.0,
            LengthMM = 4720.0,
            ManufactureYear = 2015,
            Mileage = 60000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 193.0,
            PredictedPrice = 116991.9m,
            PricePerMonth = 11650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2660.0,
            WidthMM = 1835.0,
            CarModelID = ToyotaHarrier.ID,
            CarModel = ToyotaHarrier,
            Title = "Toyota Harrier 975",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1675.0,
            LengthMM = 4510.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 32240.29m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2705.0,
            WidthMM = 1765.0,
            CarModelID = NissanXTrail.ID,
            CarModel = NissanXTrail,
            Title = "Nissan XTrail 976",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 33999.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1390.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4406.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 63887.26m,
            PricePerMonth = 2833.25m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2677.0,
            WidthMM = 1799.0,
            CarModelID = VolkswagenCrossTouran.ID,
            CarModel = VolkswagenCrossTouran,
            Title = "Volkswagen CrossTouran 977",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1699.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1603.0,
            LengthMM = 4273.0,
            ManufactureYear = 2010,
            Mileage = 95000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 155.0,
            PredictedPrice = 35628.74m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2778.0,
            WidthMM = 1551.0,
            CarModelID = MercedesBenzB180.ID,
            CarModel = MercedesBenzB180,
            Title = "MercedesBenz B180 978",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 36800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 35977.98m,
            PricePerMonth = 3066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 979",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Green",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2016,
            Mileage = 50000.0,
            PeakPowerHP = 67.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 27030.08m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 980",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 35800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4150.0,
            ManufactureYear = 2013,
            Mileage = 95000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 35547.72m,
            PricePerMonth = 2983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2655.0,
            WidthMM = 1600.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 981",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 50800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2488.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 5230.0,
            ManufactureYear = 2013,
            Mileage = 105000.0,
            PeakPowerHP = 174.0,
            PeakTorqueNM = 403.0,
            PredictedPrice = 59963.06m,
            PricePerMonth = 4233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3200.0,
            WidthMM = 1850.0,
            CarModelID = NissanNavara.ID,
            CarModel = NissanNavara,
            Title = "Nissan Navara 982",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 86500.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1925.0,
            LengthMM = 5125.0,
            ManufactureYear = 2018,
            Mileage = 130000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 392.0,
            PredictedPrice = 78227.47m,
            PricePerMonth = 7208.33m,
            SeatCapacity = 11,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3200.0,
            WidthMM = 1920.0,
            CarModelID = HyundaiGrandStarex.ID,
            CarModel = HyundaiGrandStarex,
            Title = "Hyundai GrandStarex 983",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 80800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1535.0,
            LengthMM = 4275.0,
            ManufactureYear = 2016,
            Mileage = 85000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 204.0,
            PredictedPrice = 75052.14m,
            PricePerMonth = 6733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2570.0,
            WidthMM = 1765.0,
            CarModelID = MazdaCx3.ID,
            CarModel = MazdaCx3,
            Title = "Mazda Cx3 984",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 90800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1694.0,
            LengthMM = 4519.0,
            ManufactureYear = 2019,
            Mileage = 27500.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 285.0,
            PredictedPrice = 93166.48m,
            PricePerMonth = 7566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1831.0,
            CarModelID = ProtonX70.ID,
            CarModel = ProtonX70,
            Title = "Proton X70 985",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 110800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2143.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1474.0,
            LengthMM = 4879.0,
            ManufactureYear = 2015,
            Mileage = 40000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 500.0,
            PredictedPrice = 146107.79m,
            PricePerMonth = 9233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2874.0,
            WidthMM = 1854.0,
            CarModelID = MercedesBenzE300.ID,
            CarModel = MercedesBenzE300,
            Title = "MercedesBenz E300 986",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 488888.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 2,
            EngineCC = 3800.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1296.0,
            LengthMM = 4491.0,
            ManufactureYear = 2013,
            Mileage = 45000.0,
            PeakPowerHP = 400.0,
            PeakTorqueNM = 440.0,
            PredictedPrice = 371159.14m,
            PricePerMonth = 40740.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2450.0,
            WidthMM = 1852.0,
            CarModelID = Porsche911.ID,
            CarModel = Porsche911,
            Title = "Porsche 911 987",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 58888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2198.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5359.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 375.0,
            PredictedPrice = 60508.89m,
            PricePerMonth = 4907.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3220.0,
            WidthMM = 1850.0,
            CarModelID = FordRanger.ID,
            CarModel = FordRanger,
            Title = "Ford Ranger 988",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 15800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1655.0,
            LengthMM = 3705.0,
            ManufactureYear = 1996,
            Mileage = 185000.0,
            PeakPowerHP = 135.0,
            PeakTorqueNM = 181.0,
            PredictedPrice = 35913.7m,
            PricePerMonth = 1316.67m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2200.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaRav4.ID,
            CarModel = ToyotaRav4,
            Title = "Toyota Rav4 989",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 310000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 2993.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1780.0,
            LengthMM = 4850.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 292.0,
            PeakTorqueNM = 600.0,
            PredictedPrice = 267899.98m,
            PricePerMonth = 25833.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2923.0,
            WidthMM = 1983.0,
            CarModelID = LandRoverRangeRoverSport.ID,
            CarModel = LandRoverRangeRoverSport,
            Title = "LandRover RangeRoverSport 990",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30988.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1525.0,
            LengthMM = 4170.0,
            ManufactureYear = 2020,
            Mileage = 10000.0,
            PeakPowerHP = 68.0,
            PeakTorqueNM = 91.0,
            PredictedPrice = 30421.41m,
            PricePerMonth = 2582.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaBezza.ID,
            CarModel = PeroduaBezza,
            Title = "Perodua Bezza 991",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1640.0,
            LengthMM = 3450.0,
            ManufactureYear = 2004,
            Mileage = 165000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 11790.28m,
            PricePerMonth = 741.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1480.0,
            CarModelID = PeroduaKenari.ID,
            CarModel = PeroduaKenari,
            Title = "Perodua Kenari 992",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23900.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4543.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 26424.71m,
            PricePerMonth = 1991.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonPreve.ID,
            CarModel = ProtonPreve,
            Title = "Proton Preve 993",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 183800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4370.0,
            ManufactureYear = 2016,
            Mileage = 60000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 190117.62m,
            PricePerMonth = 15316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2660.0,
            WidthMM = 2090.0,
            CarModelID = LandRoverRangeRoverEvoque.ID,
            CarModel = LandRoverRangeRoverEvoque,
            Title = "LandRover RangeRoverEvoque 994",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4769.0,
            ManufactureYear = 2011,
            Mileage = 80000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 41661.12m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2712.0,
            WidthMM = 1820.0,
            CarModelID = VolkswagenPassat.ID,
            CarModel = VolkswagenPassat,
            Title = "Volkswagen Passat 995",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 88888.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1416.0,
            LengthMM = 3626.0,
            ManufactureYear = 2015,
            Mileage = 25000.0,
            PeakPowerHP = 116.0,
            PeakTorqueNM = 149.0,
            PredictedPrice = 72749.64m,
            PricePerMonth = 7407.33m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2467.0,
            WidthMM = 1688.0,
            CarModelID = MiniCooper.ID,
            CarModel = MiniCooper,
            Title = "Mini Cooper 996",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 81500.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1605.0,
            LengthMM = 4294.0,
            ManufactureYear = 2018,
            Mileage = 95000.0,
            PeakPowerHP = 143.0,
            PeakTorqueNM = 172.0,
            PredictedPrice = 72891.56m,
            PricePerMonth = 6791.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2610.0,
            WidthMM = 1772.0,
            CarModelID = HondaHrV.ID,
            CarModel = HondaHrV,
            Title = "Honda HrV 997",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 30800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1524.0,
            LengthMM = 4536.0,
            ManufactureYear = 2013,
            Mileage = 70000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 29748.76m,
            PricePerMonth = 2566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2650.0,
            WidthMM = 1786.0,
            CarModelID = ProtonSuprimaS.ID,
            CarModel = ProtonSuprimaS,
            Title = "Proton SuprimaS 998",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 3962.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 122.0,
            PeakTorqueNM = 160.0,
            PredictedPrice = 26522.35m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2538.0,
            WidthMM = 1739.0,
            CarModelID = Peugeot208.ID,
            CarModel = Peugeot208,
            Title = "Peugeot 208 999",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 94999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1623.0,
            LengthMM = 4447.0,
            ManufactureYear = 2018,
            Mileage = 75000.0,
            PeakPowerHP = 165.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 84590.96m,
            PricePerMonth = 7916.58m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2675.0,
            WidthMM = 1841.0,
            CarModelID = Peugeot3008.ID,
            CarModel = Peugeot3008,
            Title = "Peugeot 3008 1000",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 55000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4825.0,
            ManufactureYear = 2008,
            Mileage = 140000.0,
            PeakPowerHP = 249.0,
            PeakTorqueNM = 312.0,
            PredictedPrice = 75013.42m,
            PricePerMonth = 4583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1820.0,
            CarModelID = LexusGs300.ID,
            CarModel = LexusGs300,
            Title = "Lexus Gs300 1001",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 83800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4795.0,
            ManufactureYear = 2010,
            Mileage = 95000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 223.0,
            PredictedPrice = 81185.2m,
            PricePerMonth = 6983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 1950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 1002",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 36999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1545.0,
            LengthMM = 4570.0,
            ManufactureYear = 2009,
            Mileage = 95000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 174.0,
            PredictedPrice = 45101.42m,
            PricePerMonth = 3083.25m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1695.0,
            CarModelID = HondaStream.ID,
            CarModel = HondaStream,
            Title = "Honda Stream 1003",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 55800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1935.0,
            LengthMM = 4840.0,
            ManufactureYear = 2006,
            Mileage = 105000.0,
            PeakPowerHP = 159.0,
            PeakTorqueNM = 220.0,
            PredictedPrice = 54752.69m,
            PricePerMonth = 4650.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2900.0,
            WidthMM = 1805.0,
            CarModelID = ToyotaAlphard.ID,
            CarModel = ToyotaAlphard,
            Title = "Toyota Alphard 1004",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 145000.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1999.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1635.0,
            LengthMM = 4365.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 241.0,
            PeakTorqueNM = 340.0,
            PredictedPrice = 149983.06m,
            PricePerMonth = 12083.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2662.0,
            WidthMM = 1965.0,
            CarModelID = LandRoverRangeRoverEvoque.ID,
            CarModel = LandRoverRangeRoverEvoque,
            Title = "LandRover RangeRoverEvoque 1005",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 205000.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1762.0,
            LengthMM = 4886.0,
            ManufactureYear = 2017,
            Mileage = 65000.0,
            PeakPowerHP = 245.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 197593.96m,
            PricePerMonth = 17083.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2933.0,
            WidthMM = 1938.0,
            CarModelID = BmwX5.ID,
            CarModel = BmwX5,
            Title = "Bmw X5 1006",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 53800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4190.0,
            ManufactureYear = 2016,
            Mileage = 70000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 54933.11m,
            PricePerMonth = 4483.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2655.0,
            WidthMM = 1660.0,
            CarModelID = ToyotaAvanza.ID,
            CarModel = ToyotaAvanza,
            Title = "Toyota Avanza 1007",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 34000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3200.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1795.0,
            LengthMM = 5075.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 43852.43m,
            PricePerMonth = 2833.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 1008",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 67.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 24772.1m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 1009",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 169800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1595.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1432.0,
            LengthMM = 4630.0,
            ManufactureYear = 2017,
            Mileage = 35000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 144322.69m,
            PricePerMonth = 14150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1777.0,
            CarModelID = MercedesBenzCla200.ID,
            CarModel = MercedesBenzCla200,
            Title = "MercedesBenz Cla200 1010",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 61800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4525.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 45217.93m,
            PricePerMonth = 5150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2670.0,
            WidthMM = 1755.0,
            CarModelID = HondaCivic.ID,
            CarModel = HondaCivic,
            Title = "Honda Civic 1011",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 113333.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1450.0,
            LengthMM = 4900.0,
            ManufactureYear = 2014,
            Mileage = 95000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 235.0,
            PredictedPrice = 121705.03m,
            PricePerMonth = 9444.42m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2820.0,
            WidthMM = 1820.0,
            CarModelID = LexusEs250.ID,
            CarModel = LexusEs250,
            Title = "Lexus Es250 1012",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4950.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 156.0,
            PeakTorqueNM = 189.0,
            PredictedPrice = 46178.71m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2800.0,
            WidthMM = 1845.0,
            CarModelID = ProtonPerdana.ID,
            CarModel = ProtonPerdana,
            Title = "Proton Perdana 1013",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 25800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1485.0,
            LengthMM = 4618.0,
            ManufactureYear = 2014,
            Mileage = 65000.0,
            PeakPowerHP = 141.0,
            PeakTorqueNM = 195.0,
            PredictedPrice = 35336.59m,
            PricePerMonth = 2150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2702.0,
            WidthMM = 1813.0,
            CarModelID = RenaultFluence.ID,
            CarModel = RenaultFluence,
            Title = "Renault Fluence 1014",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 45800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1515.0,
            LengthMM = 3895.0,
            ManufactureYear = 2019,
            Mileage = 33000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 45192.34m,
            PricePerMonth = 3816.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2500.0,
            WidthMM = 1735.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 1015",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 3900.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1430.0,
            LengthMM = 3490.0,
            ManufactureYear = 2003,
            Mileage = 170000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 11265.01m,
            PricePerMonth = 325.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1490.0,
            CarModelID = PeroduaKelisa.ID,
            CarModel = PeroduaKelisa,
            Title = "Perodua Kelisa 1016",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1452.0,
            LengthMM = 4818.0,
            ManufactureYear = 2004,
            Mileage = 150000.0,
            PeakPowerHP = 177.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 37447.0m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2854.0,
            WidthMM = 1822.0,
            CarModelID = MercedesBenzE240.ID,
            CarModel = MercedesBenzE240,
            Title = "MercedesBenz E240 1017",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 10800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1498.0,
            LengthMM = 4276.0,
            ManufactureYear = 2010,
            Mileage = 115000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 18664.35m,
            PricePerMonth = 900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2608.0,
            WidthMM = 1815.0,
            CarModelID = Peugeot308.ID,
            CarModel = Peugeot308,
            Title = "Peugeot 308 1018",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 38800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 3200.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1795.0,
            LengthMM = 5075.0,
            ManufactureYear = 2011,
            Mileage = 95000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 343.0,
            PredictedPrice = 43852.43m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 3000.0,
            WidthMM = 1800.0,
            CarModelID = MitsubishiTriton.ID,
            CarModel = MitsubishiTriton,
            Title = "Mitsubishi Triton 1019",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 11800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1530.0,
            LengthMM = 3575.0,
            ManufactureYear = 2010,
            Mileage = 75000.0,
            PeakPowerHP = 61.0,
            PeakTorqueNM = 90.0,
            PredictedPrice = 15449.17m,
            PricePerMonth = 983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2390.0,
            WidthMM = 1475.0,
            CarModelID = PeroduaViva.ID,
            CarModel = PeroduaViva,
            Title = "Perodua Viva 1020",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 105000.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1745.0,
            LengthMM = 4795.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 223.0,
            PredictedPrice = 98884.96m,
            PricePerMonth = 8750.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 1021",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 11800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4601.090693538827,
            ManufactureYear = 1999,
            Mileage = 205000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 181.0,
            PredictedPrice = 17026.53m,
            PricePerMonth = 983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2735.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaNadia.ID,
            CarModel = ToyotaNadia,
            Title = "Toyota Nadia 1022",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23870.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1339.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1435.0,
            LengthMM = 4395.0,
            ManufactureYear = 2011,
            Mileage = 170000.0,
            PeakPowerHP = 88.0,
            PeakTorqueNM = 121.0,
            PredictedPrice = 25759.0m,
            PricePerMonth = 1989.17m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaInsight.ID,
            CarModel = HondaInsight,
            Title = "Honda Insight 1023",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 78800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 1796.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1296.0,
            LengthMM = 4082.0,
            ManufactureYear = 2008,
            Mileage = 80000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 117416.83m,
            PricePerMonth = 6566.67m,
            SeatCapacity = 2,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2430.0,
            WidthMM = 1777.0,
            CarModelID = MercedesBenzSlk200K.ID,
            CarModel = MercedesBenzSlk200K,
            Title = "MercedesBenz Slk200K 1024",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 20800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1444.0,
            LengthMM = 5038.0,
            ManufactureYear = 2001,
            Mileage = 105000.0,
            PeakPowerHP = 204.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 45958.92m,
            PricePerMonth = 1733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2965.0,
            WidthMM = 1855.0,
            CarModelID = MercedesBenzS280.ID,
            CarModel = MercedesBenzS280,
            Title = "MercedesBenz S280 1025",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 29988.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1710.0,
            LengthMM = 4610.0,
            ManufactureYear = 2007,
            Mileage = 150000.0,
            PeakPowerHP = 212.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 38951.97m,
            PricePerMonth = 2499.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2625.0,
            WidthMM = 1785.0,
            CarModelID = HondaCrV.ID,
            CarModel = HondaCrV,
            Title = "Honda CrV 1026",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34988.0m,
            Colour = "Maroon",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1491.0,
            LengthMM = 4331.0,
            ManufactureYear = 2020,
            Mileage = 5000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 26809.09m,
            PricePerMonth = 2915.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1689.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 1027",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8200.0m,
            Colour = "Gold",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 989.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1640.0,
            LengthMM = 3450.0,
            ManufactureYear = 2002,
            Mileage = 185000.0,
            PeakPowerHP = 55.0,
            PeakTorqueNM = 88.0,
            PredictedPrice = 11855.9m,
            PricePerMonth = 683.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2360.0,
            WidthMM = 1480.0,
            CarModelID = PeroduaKenari.ID,
            CarModel = PeroduaKenari,
            Title = "Perodua Kenari 1028",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1591.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4530.0,
            ManufactureYear = 2013,
            Mileage = 85000.0,
            PeakPowerHP = 131.0,
            PeakTorqueNM = 157.0,
            PredictedPrice = 36991.59m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2700.0,
            WidthMM = 1775.0,
            CarModelID = HyundaiElantra.ID,
            CarModel = HyundaiElantra,
            Title = "Hyundai Elantra 1029",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 85800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1464.0,
            LengthMM = 4899.0,
            ManufactureYear = 2012,
            Mileage = 65000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 270.0,
            PredictedPrice = 97770.04m,
            PricePerMonth = 7150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2968.0,
            WidthMM = 1860.0,
            CarModelID = Bmw520I.ID,
            CarModel = Bmw520I,
            Title = "Bmw 520I 1030",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2019,
            Mileage = 10000.0,
            PeakPowerHP = 68.0,
            PeakTorqueNM = 91.0,
            PredictedPrice = 27729.51m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 1031",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 51999.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1798.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1421.0,
            LengthMM = 4802.0,
            ManufactureYear = 2012,
            Mileage = 100000.0,
            PeakPowerHP = 160.0,
            PeakTorqueNM = 250.0,
            PredictedPrice = 56833.14m,
            PricePerMonth = 4333.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2710.0,
            WidthMM = 1855.0,
            CarModelID = VolkswagenCc.ID,
            CarModel = VolkswagenCc,
            Title = "Volkswagen Cc 1032",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 30320.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4510.0,
            ManufactureYear = 2006,
            Mileage = 105000.0,
            PeakPowerHP = 260.0,
            PeakTorqueNM = 323.0,
            PredictedPrice = 34846.21m,
            PricePerMonth = 2526.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1740.0,
            CarModelID = ToyotaCaldina.ID,
            CarModel = ToyotaCaldina,
            Title = "Toyota Caldina 1033",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 68800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1672.2348711803477,
            LengthMM = 4145.0,
            ManufactureYear = 2019,
            Mileage = 25000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 65167.38m,
            PricePerMonth = 5733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1811.421210305572,
            CarModelID = ToyotaYaris.ID,
            CarModel = ToyotaYaris,
            Title = "Toyota Yaris 1034",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34900.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1620.0,
            LengthMM = 4270.0,
            ManufactureYear = 2014,
            Mileage = 75000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 36249.16m,
            PricePerMonth = 2908.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1695.0,
            CarModelID = PeroduaAlza.ID,
            CarModel = PeroduaAlza,
            Title = "Perodua Alza 1035",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 24800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
            HeightMM = 1455.0,
            LengthMM = 3995.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 73.0,
            PeakTorqueNM = 111.0,
            PredictedPrice = 25183.88m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = ToyotaPriusC.ID,
            CarModel = ToyotaPriusC,
            Title = "Toyota PriusC 1036",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 448800.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1665.0,
            LengthMM = 4803.0,
            ManufactureYear = 2019,
            Mileage = 25300.0,
            PeakPowerHP = 250.0,
            PeakTorqueNM = 365.0,
            PredictedPrice = 372286.59m,
            PricePerMonth = 37400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2874.0,
            WidthMM = 2032.0,
            CarModelID = LandRoverRangeRoverVelar.ID,
            CarModel = LandRoverRangeRoverVelar,
            Title = "LandRover RangeRoverVelar 1037",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 33333.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1490.0,
            LengthMM = 4570.0,
            ManufactureYear = 2013,
            Mileage = 50000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 197.0,
            PredictedPrice = 34911.18m,
            PricePerMonth = 2777.75m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2635.0,
            WidthMM = 1760.0,
            CarModelID = ProtonInspira.ID,
            CarModel = ProtonInspira,
            Title = "Proton Inspira 1038",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 40800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1515.0,
            LengthMM = 3895.0,
            ManufactureYear = 2018,
            Mileage = 40000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 42319.21m,
            PricePerMonth = 3400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2500.0,
            WidthMM = 1735.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 1039",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 87800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1795.0,
            LengthMM = 4735.0,
            ManufactureYear = 2017,
            Mileage = 45000.0,
            PeakPowerHP = 139.0,
            PeakTorqueNM = 183.0,
            PredictedPrice = 85473.32m,
            PricePerMonth = 7316.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1830.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 1040",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 42800.0m,
            Colour = "Purple",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1515.0,
            LengthMM = 3895.0,
            ManufactureYear = 2019,
            Mileage = 55000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 42342.19m,
            PricePerMonth = 3566.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2500.0,
            WidthMM = 1735.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 1041",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 157700.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4885.0,
            ManufactureYear = 2019,
            Mileage = 30000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 235.0,
            PredictedPrice = 140081.78m,
            PricePerMonth = 13141.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2825.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 1042",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 43988.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1561.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1691.0,
            LengthMM = 4592.0,
            ManufactureYear = 2018,
            Mileage = 30000.0,
            PeakPowerHP = 140.0,
            PeakTorqueNM = 205.0,
            PredictedPrice = 38711.68m,
            PricePerMonth = 3665.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2730.0,
            WidthMM = 1809.0,
            CarModelID = ProtonExora.ID,
            CarModel = ProtonExora,
            Title = "Proton Exora 1043",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 34800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1453.0,
            LengthMM = 3970.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 153.0,
            PredictedPrice = 29234.84m,
            PricePerMonth = 2900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2456.0,
            WidthMM = 1682.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 1044",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 13800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1520.0,
            LengthMM = 4278.0,
            ManufactureYear = 2013,
            Mileage = 55000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 18734.97m,
            PricePerMonth = 1150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2465.0,
            WidthMM = 1680.0,
            CarModelID = ProtonSaga.ID,
            CarModel = ProtonSaga,
            Title = "Proton Saga 1045",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 132800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2362.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1900.0,
            LengthMM = 4885.0,
            ManufactureYear = 2013,
            Mileage = 55000.0,
            PeakPowerHP = 170.0,
            PeakTorqueNM = 224.0,
            PredictedPrice = 121846.15m,
            PricePerMonth = 11066.67m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaVellfire.ID,
            CarModel = ToyotaVellfire,
            Title = "Toyota Vellfire 1046",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 8800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1781.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1815.0,
            LengthMM = 4535.0,
            ManufactureYear = 1998,
            Mileage = 150000.0,
            PeakPowerHP = 83.0,
            PeakTorqueNM = 147.0,
            PredictedPrice = 18820.69m,
            PricePerMonth = 733.33m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1710.0,
            CarModelID = ToyotaUnser.ID,
            CarModel = ToyotaUnser,
            Title = "Toyota Unser 1047",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 59800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2495.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1390.0,
            LengthMM = 4670.0,
            ManufactureYear = 2008,
            Mileage = 65000.0,
            PeakPowerHP = 196.0,
            PeakTorqueNM = 244.0,
            PredictedPrice = 41489.57m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2710.0,
            WidthMM = 1790.0,
            CarModelID = JaguarXType.ID,
            CarModel = JaguarXType,
            Title = "Jaguar XType 1048",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 44800.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1470.0,
            LengthMM = 4415.0,
            ManufactureYear = 2014,
            Mileage = 90000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 45038.11m,
            PricePerMonth = 3733.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2550.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 1049",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 175000.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1425.0,
            LengthMM = 4005.0,
            ManufactureYear = 2017,
            Mileage = 50000.0,
            PeakPowerHP = 192.0,
            PeakTorqueNM = 280.0,
            PredictedPrice = 160670.23m,
            PricePerMonth = 14583.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2567.0,
            WidthMM = 1727.0,
            CarModelID = Mini5Door.ID,
            CarModel = Mini5Door,
            Title = "Mini 5Door 1050",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 51900.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1477.0,
            LengthMM = 4440.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 54459.57m,
            PricePerMonth = 4325.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2600.0,
            WidthMM = 1695.0,
            CarModelID = HondaCity.ID,
            CarModel = HondaCity,
            Title = "Honda City 1051",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24889.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4275.0,
            ManufactureYear = 2012,
            Mileage = 85000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 150.0,
            PredictedPrice = 32672.22m,
            PricePerMonth = 2074.08m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2600.0,
            WidthMM = 1730.0,
            CarModelID = NissanLivinaXGear.ID,
            CarModel = NissanLivinaXGear,
            Title = "Nissan LivinaXGear 1052",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1453.0,
            LengthMM = 3970.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 153.0,
            PredictedPrice = 30065.52m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2456.0,
            WidthMM = 1682.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 1053",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 119800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2356.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1695.0,
            LengthMM = 4830.0,
            ManufactureYear = 2014,
            Mileage = 100000.0,
            PeakPowerHP = 175.0,
            PeakTorqueNM = 225.0,
            PredictedPrice = 94092.24m,
            PricePerMonth = 9983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2900.0,
            WidthMM = 1820.0,
            CarModelID = HondaOdyssey.ID,
            CarModel = HondaOdyssey,
            Title = "Honda Odyssey 1054",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 204999.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1639.0,
            LengthMM = 4656.0,
            ManufactureYear = 2017,
            Mileage = 30000.0,
            PeakPowerHP = 186.0,
            PeakTorqueNM = 300.0,
            PredictedPrice = 192812.1m,
            PricePerMonth = 17083.25m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2873.0,
            WidthMM = 1890.0,
            CarModelID = MercedesBenzGlc200.ID,
            CarModel = MercedesBenzGlc200,
            Title = "MercedesBenz Glc200 1055",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 59800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 3456.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1730.0,
            LengthMM = 4795.0,
            ManufactureYear = 2008,
            Mileage = 170000.0,
            PeakPowerHP = 284.0,
            PeakTorqueNM = 332.0,
            PredictedPrice = 78591.98m,
            PricePerMonth = 4983.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1800.0,
            CarModelID = ToyotaEstima.ID,
            CarModel = ToyotaEstima,
            Title = "Toyota Estima 1056",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 49900.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1760.0,
            LengthMM = 4585.0,
            ManufactureYear = 2014,
            Mileage = 115000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 45432.45m,
            PricePerMonth = 4158.33m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2750.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 1057",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 37800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1396.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1455.0,
            LengthMM = 4045.0,
            ManufactureYear = 2015,
            Mileage = 70000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 137.0,
            PredictedPrice = 34493.5m,
            PricePerMonth = 3150.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2570.0,
            WidthMM = 1720.0,
            CarModelID = KiaRio.ID,
            CarModel = KiaRio,
            Title = "Kia Rio 1058",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 38800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1197.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4384.0,
            ManufactureYear = 2016,
            Mileage = 75000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 175.0,
            PredictedPrice = 58085.77m,
            PricePerMonth = 3233.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2637.0,
            WidthMM = 1699.0,
            CarModelID = VolkswagenVento.ID,
            CarModel = VolkswagenVento,
            Title = "Volkswagen Vento 1059",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 143000.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1991.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1494.0,
            LengthMM = 4417.0,
            ManufactureYear = 2015,
            Mileage = 120000.0,
            PeakPowerHP = 211.0,
            PeakTorqueNM = 350.0,
            PredictedPrice = 140167.94m,
            PricePerMonth = 11916.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2699.0,
            WidthMM = 1804.0,
            CarModelID = MercedesBenzGla250.ID,
            CarModel = MercedesBenzGla250,
            Title = "MercedesBenz Gla250 1060",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 28800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2499.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1435.0,
            LengthMM = 4730.0,
            ManufactureYear = 2005,
            Mileage = 165000.0,
            PeakPowerHP = 215.0,
            PeakTorqueNM = 260.0,
            PredictedPrice = 38899.89m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaMarkX.ID,
            CarModel = ToyotaMarkX,
            Title = "Toyota MarkX 1061",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 65000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 23596.64m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 1062",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 99800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2672.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4770.0,
            ManufactureYear = 2010,
            Mileage = 125000.0,
            PeakPowerHP = 185.0,
            PeakTorqueNM = 252.0,
            PredictedPrice = 78280.18m,
            PricePerMonth = 8316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2740.0,
            WidthMM = 1885.0,
            CarModelID = LexusRx270.ID,
            CarModel = LexusRx270,
            Title = "Lexus Rx270 1063",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 6900.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1298.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1550.0,
            LengthMM = 3750.0,
            ManufactureYear = 2010,
            Mileage = 90000.0,
            PeakPowerHP = 87.0,
            PeakTorqueNM = 116.0,
            PredictedPrice = 20141.02m,
            PricePerMonth = 575.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1665.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 1064",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 23888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1525.0,
            LengthMM = 4682.0,
            ManufactureYear = 2015,
            Mileage = 100000.0,
            PeakPowerHP = 166.0,
            PeakTorqueNM = 240.0,
            PredictedPrice = 47558.93m,
            PricePerMonth = 1990.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2710.0,
            WidthMM = 1815.0,
            CarModelID = Peugeot408.ID,
            CarModel = Peugeot408,
            Title = "Peugeot 408 1065",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 112888.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 3456.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4770.0,
            ManufactureYear = 2012,
            Mileage = 165000.0,
            PeakPowerHP = 277.0,
            PeakTorqueNM = 346.0,
            PredictedPrice = 109199.21m,
            PricePerMonth = 9407.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1885.0,
            CarModelID = LexusRx350.ID,
            CarModel = LexusRx350,
            Title = "Lexus Rx350 1066",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 53700.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 4410.0,
            ManufactureYear = 2017,
            Mileage = 50000.0,
            PeakPowerHP = 107.0,
            PeakTorqueNM = 140.0,
            PredictedPrice = 56313.79m,
            PricePerMonth = 4475.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 1067",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 15300.0m,
            Colour = "null",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1781.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1815.0,
            LengthMM = 4535.0,
            ManufactureYear = 2003,
            Mileage = 145000.0,
            PeakPowerHP = 83.0,
            PeakTorqueNM = 147.0,
            PredictedPrice = 20926.24m,
            PricePerMonth = 1275.0m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2650.0,
            WidthMM = 1710.0,
            CarModelID = ToyotaUnser.ID,
            CarModel = ToyotaUnser,
            Title = "Toyota Unser 1068",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 17100.0m,
            Colour = "Blue",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 3,
            EngineCC = 1597.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1420.0,
            LengthMM = 3905.0,
            ManufactureYear = 2010,
            Mileage = 65000.0,
            PeakPowerHP = 111.0,
            PeakTorqueNM = 148.0,
            PredictedPrice = 21184.52m,
            PricePerMonth = 1425.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2440.0,
            WidthMM = 1710.0,
            CarModelID = ProtonSatria.ID,
            CarModel = ProtonSatria,
            Title = "Proton Satria 1069",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 5500.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1468.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1385.0,
            LengthMM = 4360.0,
            ManufactureYear = 2000,
            Mileage = 105000.0,
            PeakPowerHP = 90.0,
            PeakTorqueNM = 126.0,
            PredictedPrice = 8838.95m,
            PricePerMonth = 458.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2500.0,
            WidthMM = 1680.0,
            CarModelID = ProtonWira.ID,
            CarModel = ProtonWira,
            Title = "Proton Wira 1070",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 89800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 4,
            EngineCC = 2393.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
            HeightMM = 1815.0,
            LengthMM = 5330.0,
            ManufactureYear = 2016,
            Mileage = 130000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 93116.43m,
            PricePerMonth = 7483.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 3085.0,
            WidthMM = 1855.0,
            CarModelID = ToyotaHilux.ID,
            CarModel = ToyotaHilux,
            Title = "Toyota Hilux 1071",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 70800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1465.0,
            LengthMM = 4870.0,
            ManufactureYear = 2015,
            Mileage = 80000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 67241.89m,
            PricePerMonth = 5900.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2775.0,
            WidthMM = 1850.0,
            CarModelID = HondaAccord.ID,
            CarModel = HondaAccord,
            Title = "Honda Accord 1072",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28500.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 3640.0,
            ManufactureYear = 2017,
            Mileage = 60000.0,
            PeakPowerHP = 68.0,
            PeakTorqueNM = 91.0,
            PredictedPrice = 27046.98m,
            PricePerMonth = 2375.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2455.0,
            WidthMM = 1620.0,
            CarModelID = PeroduaAxia.ID,
            CarModel = PeroduaAxia,
            Title = "Perodua Axia 1073",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 16800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1388.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2011,
            Mileage = 105000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 128.0,
            PredictedPrice = 18527.18m,
            PricePerMonth = 1400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 1074",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 68777.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 2260.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1685.0,
            LengthMM = 4860.0,
            ManufactureYear = 2011,
            Mileage = 85000.0,
            PeakPowerHP = 163.0,
            PeakTorqueNM = 203.0,
            PredictedPrice = 65233.14m,
            PricePerMonth = 5731.42m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2950.0,
            WidthMM = 1850.0,
            CarModelID = Mazda8.ID,
            CarModel = Mazda8,
            Title = "Mazda 8 1075",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 156800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 2494.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1445.0,
            LengthMM = 4885.0,
            ManufactureYear = 2019,
            Mileage = 25000.0,
            PeakPowerHP = 184.0,
            PeakTorqueNM = 235.0,
            PredictedPrice = 144093.66m,
            PricePerMonth = 13066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2825.0,
            WidthMM = 1840.0,
            CarModelID = ToyotaCamry.ID,
            CarModel = ToyotaCamry,
            Title = "Toyota Camry 1076",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 23800.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1596.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1475.0,
            LengthMM = 3950.0,
            ManufactureYear = 2012,
            Mileage = 115000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 152.0,
            PredictedPrice = 22532.91m,
            PricePerMonth = 1983.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2489.0,
            WidthMM = 1722.0,
            CarModelID = FordFiesta.ID,
            CarModel = FordFiesta,
            Title = "Ford Fiesta 1077",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 41999.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1995.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1615.0,
            LengthMM = 4450.0,
            ManufactureYear = 2013,
            Mileage = 70000.0,
            PeakPowerHP = 150.0,
            PeakTorqueNM = 196.0,
            PredictedPrice = 43886.06m,
            PricePerMonth = 3499.92m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2635.0,
            WidthMM = 1780.0,
            CarModelID = SubaruXv.ID,
            CarModel = SubaruXv,
            Title = "Subaru Xv 1078",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 72800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2015,
            Mileage = 75000.0,
            PeakPowerHP = 155.0,
            PeakTorqueNM = 200.0,
            PredictedPrice = 74576.58m,
            PricePerMonth = 6066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 1079",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 538800.0m,
            Colour = "Orange",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 2,
            EngineCC = 3799.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1370.0,
            LengthMM = 4710.0,
            ManufactureYear = 2018,
            Mileage = 15000.0,
            PeakPowerHP = 570.0,
            PeakTorqueNM = 637.0,
            PredictedPrice = 416190.87m,
            PricePerMonth = 44900.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2780.0,
            WidthMM = 1895.0,
            CarModelID = NissanGtR.ID,
            CarModel = NissanGtR,
            Title = "Nissan GtR 1080",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 43988.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1496.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1515.0,
            LengthMM = 3895.0,
            ManufactureYear = 2018,
            Mileage = 20000.0,
            PeakPowerHP = 103.0,
            PeakTorqueNM = 136.0,
            PredictedPrice = 43586.44m,
            PricePerMonth = 3665.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2500.0,
            WidthMM = 1735.0,
            CarModelID = PeroduaMyvi.ID,
            CarModel = PeroduaMyvi,
            Title = "Perodua Myvi 1081",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 318000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 3605.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1418.0,
            LengthMM = 5015.0,
            ManufactureYear = 2014,
            Mileage = 85000.0,
            PeakPowerHP = 310.0,
            PeakTorqueNM = 400.0,
            PredictedPrice = 215516.68m,
            PricePerMonth = 26500.0m,
            SeatCapacity = 4,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2920.0,
            WidthMM = 1931.0,
            CarModelID = PorschePanamera.ID,
            CarModel = PorschePanamera,
            Title = "Porsche Panamera 1082",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 67999.0m,
            Colour = "Bronze",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1666.0,
            LengthMM = 4453.0,
            ManufactureYear = 2018,
            Mileage = 65000.0,
            PeakPowerHP = 120.0,
            PeakTorqueNM = 145.0,
            PredictedPrice = 65343.89m,
            PricePerMonth = 5666.58m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2662.0,
            WidthMM = 1735.0,
            CarModelID = HondaBrV.ID,
            CarModel = HondaBrV,
            Title = "Honda BrV 1083",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 48400.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1760.0,
            LengthMM = 4585.0,
            ManufactureYear = 2014,
            Mileage = 70000.0,
            PeakPowerHP = 136.0,
            PeakTorqueNM = 182.0,
            PredictedPrice = 45293.42m,
            PricePerMonth = 4033.33m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2750.0,
            WidthMM = 1775.0,
            CarModelID = ToyotaInnova.ID,
            CarModel = ToyotaInnova,
            Title = "Toyota Innova 1084",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 58888.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1670.0,
            LengthMM = 4555.0,
            ManufactureYear = 2013,
            Mileage = 90000.0,
            PeakPowerHP = 154.0,
            PeakTorqueNM = 198.0,
            PredictedPrice = 62431.08m,
            PricePerMonth = 4907.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1840.0,
            CarModelID = MazdaCx5.ID,
            CarModel = MazdaCx5,
            Title = "Mazda Cx5 1085",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 24800.0m,
            Colour = "Red",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1332.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1554.0,
            LengthMM = 3920.0,
            ManufactureYear = 2015,
            Mileage = 55000.0,
            PeakPowerHP = 95.0,
            PeakTorqueNM = 120.0,
            PredictedPrice = 22879.84m,
            PricePerMonth = 2066.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2555.0,
            WidthMM = 1722.0,
            CarModelID = ProtonIriz.ID,
            CarModel = ProtonIriz,
            Title = "Proton Iriz 1086",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 63800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 1998.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1835.0,
            LengthMM = 4715.0,
            ManufactureYear = 2014,
            Mileage = 105000.0,
            PeakPowerHP = 151.0,
            PeakTorqueNM = 190.0,
            PredictedPrice = 57436.76m,
            PricePerMonth = 5316.67m,
            SeatCapacity = 8,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2850.0,
            WidthMM = 1770.0,
            CarModelID = MazdaBiante.ID,
            CarModel = MazdaBiante,
            Title = "Mazda Biante 1087",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
            AssignedPrice = 43888.0m,
            Colour = "White",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 5,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1735.0,
            LengthMM = 4215.0,
            ManufactureYear = 2012,
            Mileage = 95000.0,
            PeakPowerHP = 118.0,
            PeakTorqueNM = 146.0,
            PredictedPrice = 40886.55m,
            PricePerMonth = 3657.33m,
            SeatCapacity = 7,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2740.0,
            WidthMM = 1700.0,
            CarModelID = HondaFreed.ID,
            CarModel = HondaFreed,
            Title = "Honda Freed 1088",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 328000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 5000.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1855.0,
            LengthMM = 4999.0,
            ManufactureYear = 2013,
            Mileage = 55000.0,
            PeakPowerHP = 510.0,
            PeakTorqueNM = 625.0,
            PredictedPrice = 305753.25m,
            PricePerMonth = 27333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2922.0,
            WidthMM = 2220.0,
            CarModelID = LandRoverRangeRover.ID,
            CarModel = LandRoverRangeRover,
            Title = "LandRover RangeRover 1089",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1598.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1466.0,
            LengthMM = 4384.0,
            ManufactureYear = 2014,
            Mileage = 115000.0,
            PeakPowerHP = 105.0,
            PeakTorqueNM = 153.0,
            PredictedPrice = 29570.16m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2552.0,
            WidthMM = 1699.0,
            CarModelID = VolkswagenPolo.ID,
            CarModel = VolkswagenPolo,
            Title = "Volkswagen Polo 1090",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 27800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1497.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1460.0,
            LengthMM = 4300.0,
            ManufactureYear = 2010,
            Mileage = 75000.0,
            PeakPowerHP = 109.0,
            PeakTorqueNM = 141.0,
            PredictedPrice = 32259.7m,
            PricePerMonth = 2316.67m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2550.0,
            WidthMM = 1700.0,
            CarModelID = ToyotaVios.ID,
            CarModel = ToyotaVios,
            Title = "Toyota Vios 1091",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 28800.0m,
            Colour = "Grey",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
            Doors = 4,
            EngineCC = 1997.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1510.0,
            LengthMM = 1665.0,
            ManufactureYear = 2013,
            Mileage = 75000.0,
            PeakPowerHP = 133.0,
            PeakTorqueNM = 191.0,
            PredictedPrice = 34595.23m,
            PricePerMonth = 2400.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
            WheelBaseMM = 2700.0,
            WidthMM = 1700.0,
            CarModelID = NissanSylphy.ID,
            CarModel = NissanSylphy,
            Title = "Nissan Sylphy 1092",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
            AssignedPrice = 328000.0m,
            Colour = "Black",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
            Doors = 5,
            EngineCC = 5000.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1855.0,
            LengthMM = 4999.0,
            ManufactureYear = 2013,
            Mileage = 53000.0,
            PeakPowerHP = 510.0,
            PeakTorqueNM = 625.0,
            PredictedPrice = 317488.23m,
            PricePerMonth = 27333.33m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2922.0,
            WidthMM = 2220.0,
            CarModelID = LandRoverRangeRover.ID,
            CarModel = LandRoverRangeRover,
            Title = "LandRover RangeRover 1093",
        },
        

        new Car
        {
            Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
            Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
            AssignedPrice = 7800.0m,
            Colour = "Silver",
            CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
            DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
            Doors = 5,
            EngineCC = 659.0,
            FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
            HeightMM = 1415.0,
            LengthMM = 3365.0,
            ManufactureYear = 2009,
            Mileage = 165000.0,
            PeakPowerHP = 31.0,
            PeakTorqueNM = 49.0,
            PredictedPrice = 6418.17m,
            PricePerMonth = 650.0m,
            SeatCapacity = 5,
            SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
            Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
            UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
            WheelBaseMM = 2280.0,
            WidthMM = 1405.0,
            CarModelID = PeroduaKancil.ID,
            CarModel = PeroduaKancil,
            Title = "Perodua Kancil 1094",
        },
        
