using CarDealershipWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace CarDealershipWebApp.Models
{
    public class SeedData
    {
        public static void Initialize(IServiceProvider serviceProvider)
        {
            using (var context = new CarDealershipContext(serviceProvider.GetRequiredService<DbContextOptions<CarDealershipContext>>()))
            {
                // Look for any cars.
                if (context.Cars.Any())
                {
                    return;   // DB has been seeded
                }

                // Initialize car brands
                CarBrand BMW = new CarBrand { Name = "BMW" };

                CarBrand Ford = new CarBrand { Name = "Ford" };

                CarBrand Honda = new CarBrand { Name = "Honda" };

                CarBrand Hyundai = new CarBrand { Name = "Hyundai" };

                CarBrand Jaguar = new CarBrand { Name = "Jaguar" };

                CarBrand Kia = new CarBrand { Name = "Kia" };

                CarBrand LandRover = new CarBrand { Name = "Land Rover" };

                CarBrand Lexus = new CarBrand { Name = "Lexus" };

                CarBrand Mini = new CarBrand { Name = "MINI" };

                CarBrand Mazda = new CarBrand { Name = "Mazda" };

                CarBrand MercedesBenz = new CarBrand { Name = "Mercedes-Benz" };

                CarBrand Mitsubishi = new CarBrand { Name = "Mitsubishi" };

                CarBrand Nissan = new CarBrand { Name = "Nissan" };

                CarBrand Perodua = new CarBrand { Name = "Perodua" };

                CarBrand Peugeot = new CarBrand { Name = "Peugeot" };

                CarBrand Porsche = new CarBrand { Name = "Porsche" };

                CarBrand Proton = new CarBrand { Name = "Proton" };

                CarBrand Renault = new CarBrand { Name = "Renault" };

                CarBrand Subaru = new CarBrand { Name = "Subaru" };

                CarBrand Toyota = new CarBrand { Name = "Toyota" };

                CarBrand Volkswagen = new CarBrand { Name = "Volkswagen" };

                CarBrand Volvo = new CarBrand { Name = "Volvo" };

                // Initialize car models
                CarModel Bmw740Le = new CarModel
                {
                    Name = "740Le",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw320D = new CarModel
                {
                    Name = "320d",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwX1 = new CarModel
                {
                    Name = "X1",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw218I = new CarModel
                {
                    Name = "218i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw316I = new CarModel
                {
                    Name = "316i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw325I = new CarModel
                {
                    Name = "325i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwM4 = new CarModel
                {
                    Name = "M4",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwM6 = new CarModel
                {
                    Name = "M6",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw330I = new CarModel
                {
                    Name = "330i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw530E = new CarModel
                {
                    Name = "530e",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw318I = new CarModel
                {
                    Name = "318i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw740I = new CarModel
                {
                    Name = "740i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw730Ld = new CarModel
                {
                    Name = "730Ld",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw335I = new CarModel
                {
                    Name = "335i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwM5 = new CarModel
                {
                    Name = "M5",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw330E = new CarModel
                {
                    Name = "330e",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw328I = new CarModel
                {
                    Name = "328i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw525I = new CarModel
                {
                    Name = "525i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw730Li = new CarModel
                {
                    Name = "730Li",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwX3 = new CarModel
                {
                    Name = "X3",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw640I = new CarModel
                {
                    Name = "640i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwM340I = new CarModel
                {
                    Name = "M340i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw535I = new CarModel
                {
                    Name = "535i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwX5 = new CarModel
                {
                    Name = "X5",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw120I = new CarModel
                {
                    Name = "120i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwX4 = new CarModel
                {
                    Name = "X4",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwX2 = new CarModel
                {
                    Name = "X2",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw220I = new CarModel
                {
                    Name = "220i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwI8 = new CarModel
                {
                    Name = "i8",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw430I = new CarModel
                {
                    Name = "430i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw540I = new CarModel
                {
                    Name = "540i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw520I = new CarModel
                {
                    Name = "520i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwX6 = new CarModel
                {
                    Name = "X6",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw320I = new CarModel
                {
                    Name = "320i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw630I = new CarModel
                {
                    Name = "630i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw740Li = new CarModel
                {
                    Name = "740Li",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwM2 = new CarModel
                {
                    Name = "M2",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw428I = new CarModel
                {
                    Name = "428i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw118I = new CarModel
                {
                    Name = "118i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel BmwM3 = new CarModel
                {
                    Name = "M3",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw523I = new CarModel
                {
                    Name = "523i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw323I = new CarModel
                {
                    Name = "323i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw520D = new CarModel
                {
                    Name = "520d",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw528I = new CarModel
                {
                    Name = "528i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel Bmw530I = new CarModel
                {
                    Name = "530i",
                    CarBrandID = BMW.ID,
                    CarBrand = BMW
                };


                CarModel FordEverest = new CarModel
                {
                    Name = "Everest",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordMustang = new CarModel
                {
                    Name = "Mustang",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordFiesta = new CarModel
                {
                    Name = "Fiesta",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordSMax = new CarModel
                {
                    Name = "S-Max",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordMondeo = new CarModel
                {
                    Name = "Mondeo",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordRanger = new CarModel
                {
                    Name = "Ranger",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordEcosport = new CarModel
                {
                    Name = "EcoSport",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordEscape = new CarModel
                {
                    Name = "Escape",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordFocus = new CarModel
                {
                    Name = "Focus",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel FordKuga = new CarModel
                {
                    Name = "Kuga",
                    CarBrandID = Ford.ID,
                    CarBrand = Ford
                };


                CarModel HondaAccord = new CarModel
                {
                    Name = "Accord",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaStream = new CarModel
                {
                    Name = "Stream",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaJazz = new CarModel
                {
                    Name = "Jazz",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaOdyssey = new CarModel
                {
                    Name = "Odyssey",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaCrZ = new CarModel
                {
                    Name = "CR-Z",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaCity = new CarModel
                {
                    Name = "City",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaElysion = new CarModel
                {
                    Name = "Elysion",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaFreed = new CarModel
                {
                    Name = "Freed",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaCivic = new CarModel
                {
                    Name = "Civic",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaCrV = new CarModel
                {
                    Name = "CR-V",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaInsight = new CarModel
                {
                    Name = "Insight",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaHrV = new CarModel
                {
                    Name = "HR-V",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HondaBrV = new CarModel
                {
                    Name = "BR-V",
                    CarBrandID = Honda.ID,
                    CarBrand = Honda
                };


                CarModel HyundaiGenesis = new CarModel
                {
                    Name = "Genesis",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiIoniq = new CarModel
                {
                    Name = "Ioniq",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiVeloster = new CarModel
                {
                    Name = "Veloster",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiMatrix = new CarModel
                {
                    Name = "Matrix",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiSantaFe = new CarModel
                {
                    Name = "Santa Fe",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiGrandStarex = new CarModel
                {
                    Name = "Grand Starex",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiI10 = new CarModel
                {
                    Name = "i10",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiElantra = new CarModel
                {
                    Name = "Elantra",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiSonata = new CarModel
                {
                    Name = "Sonata",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiCoupe = new CarModel
                {
                    Name = "Coupe",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiI30 = new CarModel
                {
                    Name = "i30",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiAtos = new CarModel
                {
                    Name = "Atos",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiI40 = new CarModel
                {
                    Name = "i40",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiAccent = new CarModel
                {
                    Name = "Accent",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiGetz = new CarModel
                {
                    Name = "Getz",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel HyundaiTucson = new CarModel
                {
                    Name = "Tucson",
                    CarBrandID = Hyundai.ID,
                    CarBrand = Hyundai
                };


                CarModel JaguarXj = new CarModel
                {
                    Name = "XJ",
                    CarBrandID = Jaguar.ID,
                    CarBrand = Jaguar
                };


                CarModel JaguarSType = new CarModel
                {
                    Name = "S-Type",
                    CarBrandID = Jaguar.ID,
                    CarBrand = Jaguar
                };


                CarModel JaguarDaimler = new CarModel
                {
                    Name = "Daimler",
                    CarBrandID = Jaguar.ID,
                    CarBrand = Jaguar
                };


                CarModel JaguarFPace = new CarModel
                {
                    Name = "F-Pace",
                    CarBrandID = Jaguar.ID,
                    CarBrand = Jaguar
                };


                CarModel JaguarXj6 = new CarModel
                {
                    Name = "XJ6",
                    CarBrandID = Jaguar.ID,
                    CarBrand = Jaguar
                };


                CarModel JaguarXType = new CarModel
                {
                    Name = "X-Type",
                    CarBrandID = Jaguar.ID,
                    CarBrand = Jaguar
                };


                CarModel JaguarXf = new CarModel
                {
                    Name = "XF",
                    CarBrandID = Jaguar.ID,
                    CarBrand = Jaguar
                };


                CarModel KiaSportage = new CarModel
                {
                    Name = "Sportage",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaSorento = new CarModel
                {
                    Name = "Sorento",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaForteKoup = new CarModel
                {
                    Name = "Forte Koup",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaForte = new CarModel
                {
                    Name = "Forte",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaGrandCarnival = new CarModel
                {
                    Name = "Grand Carnival",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaOptimaK5 = new CarModel
                {
                    Name = "Optima K5",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaSpectra = new CarModel
                {
                    Name = "Spectra",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaRio = new CarModel
                {
                    Name = "Rio",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaPicanto = new CarModel
                {
                    Name = "Picanto",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel KiaCerato = new CarModel
                {
                    Name = "Cerato",
                    CarBrandID = Kia.ID,
                    CarBrand = Kia
                };


                CarModel LandRoverFreelander2 = new CarModel
                {
                    Name = "Freelander 2",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverRangeRoverVelar = new CarModel
                {
                    Name = "Range Rover Velar",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverRangeRoverSport = new CarModel
                {
                    Name = "Range Rover Sport",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverFreelander = new CarModel
                {
                    Name = "Freelander",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverDiscoverySport = new CarModel
                {
                    Name = "Discovery Sport",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverDiscovery4 = new CarModel
                {
                    Name = "Discovery 4",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverDefender = new CarModel
                {
                    Name = "Defender",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverRangeRover = new CarModel
                {
                    Name = "Range Rover",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LandRoverRangeRoverEvoque = new CarModel
                {
                    Name = "Range Rover Evoque",
                    CarBrandID = LandRover.ID,
                    CarBrand = LandRover
                };


                CarModel LexusRx200T = new CarModel
                {
                    Name = "RX200t",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusRx350 = new CarModel
                {
                    Name = "RX350",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusNx200T = new CarModel
                {
                    Name = "NX200t",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusNx300 = new CarModel
                {
                    Name = "NX300",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusRx270 = new CarModel
                {
                    Name = "RX270",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusLx570 = new CarModel
                {
                    Name = "LX570",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusEs250 = new CarModel
                {
                    Name = "ES250",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusLs460 = new CarModel
                {
                    Name = "LS460",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusRx350L = new CarModel
                {
                    Name = "RX350L",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusCt200H = new CarModel
                {
                    Name = "CT200h",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusGs250 = new CarModel
                {
                    Name = "GS250",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusRx450H = new CarModel
                {
                    Name = "RX450h",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusLc500 = new CarModel
                {
                    Name = "LC500",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusGs350 = new CarModel
                {
                    Name = "GS350",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusGs300 = new CarModel
                {
                    Name = "GS300",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusIs250 = new CarModel
                {
                    Name = "IS250",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel LexusLs460L = new CarModel
                {
                    Name = "LS460L",
                    CarBrandID = Lexus.ID,
                    CarBrand = Lexus
                };


                CarModel MiniCrossover = new CarModel
                {
                    Name = "Crossover",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel Mini5Door = new CarModel
                {
                    Name = "5 Door",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel MiniMk2 = new CarModel
                {
                    Name = "MK2",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel MiniPaceman = new CarModel
                {
                    Name = "Paceman",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel MiniCooper = new CarModel
                {
                    Name = "Cooper",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel MiniAustinMorris = new CarModel
                {
                    Name = "Austin Morris",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel Mini3Door = new CarModel
                {
                    Name = "3 Door",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel MiniCountryman = new CarModel
                {
                    Name = "Countryman",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel MiniClubman = new CarModel
                {
                    Name = "Clubman",
                    CarBrandID = Mini.ID,
                    CarBrand = Mini
                };


                CarModel Mazda2 = new CarModel
                {
                    Name = " 2",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel Mazda8 = new CarModel
                {
                    Name = " 8",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaCx30 = new CarModel
                {
                    Name = "CX-30",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaCx3 = new CarModel
                {
                    Name = "CX-3",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaBt50 = new CarModel
                {
                    Name = "BT-50",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel Mazda6 = new CarModel
                {
                    Name = " 6",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaCx7 = new CarModel
                {
                    Name = "CX-7",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaBongo = new CarModel
                {
                    Name = "Bongo",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaCx5 = new CarModel
                {
                    Name = "CX-5",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaRx8 = new CarModel
                {
                    Name = "RX-8",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaFighter = new CarModel
                {
                    Name = "Fighter",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaCx9 = new CarModel
                {
                    Name = "CX-9",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel Mazda5 = new CarModel
                {
                    Name = " 5",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MazdaBiante = new CarModel
                {
                    Name = "Biante",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel Mazda3 = new CarModel
                {
                    Name = " 3",
                    CarBrandID = Mazda.ID,
                    CarBrand = Mazda
                };


                CarModel MercedesBenzSlk250 = new CarModel
                {
                    Name = "SLK250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzCls350 = new CarModel
                {
                    Name = "CLS350",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzA250 = new CarModel
                {
                    Name = "A250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzA45Amg = new CarModel
                {
                    Name = "A45 AMG",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGlc200 = new CarModel
                {
                    Name = "GLC200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGle400 = new CarModel
                {
                    Name = "GLE400",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE230 = new CarModel
                {
                    Name = "E230",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC250 = new CarModel
                {
                    Name = "C250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE200K = new CarModel
                {
                    Name = "E200K",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS300L = new CarModel
                {
                    Name = "S300L",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS500L = new CarModel
                {
                    Name = "S500L",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS400L = new CarModel
                {
                    Name = "S400L",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC180 = new CarModel
                {
                    Name = "C180",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE280 = new CarModel
                {
                    Name = "E280",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE250 = new CarModel
                {
                    Name = "E250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS450L = new CarModel
                {
                    Name = "S450L",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGla250 = new CarModel
                {
                    Name = "GLA250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC300 = new CarModel
                {
                    Name = "C300",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzAmgGt63S = new CarModel
                {
                    Name = "AMG GT 63 S",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC200K = new CarModel
                {
                    Name = "C200K",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzCla180 = new CarModel
                {
                    Name = "CLA180",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE200 = new CarModel
                {
                    Name = "E200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzB180 = new CarModel
                {
                    Name = "B180",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS350 = new CarModel
                {
                    Name = "S350",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC320 = new CarModel
                {
                    Name = "C320",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC220Cdi = new CarModel
                {
                    Name = "C220 CDI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS280 = new CarModel
                {
                    Name = "S280",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzB200 = new CarModel
                {
                    Name = "B200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzCla45Amg = new CarModel
                {
                    Name = "CLA45 AMG",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGle250 = new CarModel
                {
                    Name = "GLE250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzA180 = new CarModel
                {
                    Name = "A180",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzR350L = new CarModel
                {
                    Name = "R350L",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE250Cgi = new CarModel
                {
                    Name = "E250 CGI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE350Cgi = new CarModel
                {
                    Name = "E350 CGI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE240 = new CarModel
                {
                    Name = "E240",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC350E = new CarModel
                {
                    Name = "C350 e",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC250Cgi = new CarModel
                {
                    Name = "C250 CGI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzA200 = new CarModel
                {
                    Name = "A200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE350E = new CarModel
                {
                    Name = "E350 e",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzVito = new CarModel
                {
                    Name = "Vito",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzCla200 = new CarModel
                {
                    Name = "CLA200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS350L = new CarModel
                {
                    Name = "S350L",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE350 = new CarModel
                {
                    Name = "E350",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC200Cgi = new CarModel
                {
                    Name = "C200 CGI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC230 = new CarModel
                {
                    Name = "C230",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGlc43Amg = new CarModel
                {
                    Name = "GLC43 AMG",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE400 = new CarModel
                {
                    Name = "E400",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzS560E = new CarModel
                {
                    Name = "S560 e",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGle43 = new CarModel
                {
                    Name = "GLE43",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzMl350 = new CarModel
                {
                    Name = "ML350",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGlc250 = new CarModel
                {
                    Name = "GLC250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGls63Amg = new CarModel
                {
                    Name = "GLS63 AMG",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC200 = new CarModel
                {
                    Name = "C200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC180K = new CarModel
                {
                    Name = "C180K",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGla200 = new CarModel
                {
                    Name = "GLA200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC230K = new CarModel
                {
                    Name = "C230K",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGla45Amg = new CarModel
                {
                    Name = "GLA45 AMG",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzSlk200 = new CarModel
                {
                    Name = "SLK200",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC43Amg = new CarModel
                {
                    Name = "C43 AMG",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzGla180 = new CarModel
                {
                    Name = "GLA180",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzViano = new CarModel
                {
                    Name = "Viano",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzCla250 = new CarModel
                {
                    Name = "CLA250",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzSlk200K = new CarModel
                {
                    Name = "SLK200K",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzC180Cgi = new CarModel
                {
                    Name = "C180 CGI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE300 = new CarModel
                {
                    Name = "E300",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE270Cdi = new CarModel
                {
                    Name = "E270 CDI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzVaneo = new CarModel
                {
                    Name = "Vaneo",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MercedesBenzE200Cgi = new CarModel
                {
                    Name = "E200 CGI",
                    CarBrandID = MercedesBenz.ID,
                    CarBrand = MercedesBenz
                };


                CarModel MitsubishiTriton = new CarModel
                {
                    Name = "Triton",
                    CarBrandID = Mitsubishi.ID,
                    CarBrand = Mitsubishi
                };


                CarModel MitsubishiStorm = new CarModel
                {
                    Name = "Storm",
                    CarBrandID = Mitsubishi.ID,
                    CarBrand = Mitsubishi
                };


                CarModel MitsubishiL200 = new CarModel
                {
                    Name = "L200",
                    CarBrandID = Mitsubishi.ID,
                    CarBrand = Mitsubishi
                };


                CarModel NissanGtR = new CarModel
                {
                    Name = "GT-R",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanNv350Urvan = new CarModel
                {
                    Name = "NV350 Urvan",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanNv200 = new CarModel
                {
                    Name = "NV200",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanFairladyZ = new CarModel
                {
                    Name = "Fairlady Z",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanAlmera = new CarModel
                {
                    Name = "Almera",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanElgrand = new CarModel
                {
                    Name = "Elgrand",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanDualis = new CarModel
                {
                    Name = "Dualis",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanNavara = new CarModel
                {
                    Name = "Navara",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanUrvan = new CarModel
                {
                    Name = "Urvan",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanFrontier = new CarModel
                {
                    Name = "Frontier",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanSylphy = new CarModel
                {
                    Name = "Sylphy",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanTeana = new CarModel
                {
                    Name = "Teana",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanGrandLivina = new CarModel
                {
                    Name = "Grand Livina",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanXTrail = new CarModel
                {
                    Name = "X-Trail",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanSentra = new CarModel
                {
                    Name = "Sentra",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanMurano = new CarModel
                {
                    Name = "Murano",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanLatio = new CarModel
                {
                    Name = "Latio",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanJuke = new CarModel
                {
                    Name = "JUKE",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanCefiro = new CarModel
                {
                    Name = "Cefiro",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanSerena = new CarModel
                {
                    Name = "Serena",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel NissanLivinaXGear = new CarModel
                {
                    Name = "Livina X-Gear",
                    CarBrandID = Nissan.ID,
                    CarBrand = Nissan
                };


                CarModel PeroduaBezza = new CarModel
                {
                    Name = "Bezza",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaAxia = new CarModel
                {
                    Name = "Axia",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaKelisa = new CarModel
                {
                    Name = "Kelisa",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaMyvi = new CarModel
                {
                    Name = "Myvi",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaKenari = new CarModel
                {
                    Name = "Kenari",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaAruz = new CarModel
                {
                    Name = "Aruz",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaKancil = new CarModel
                {
                    Name = "Kancil",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaAlza = new CarModel
                {
                    Name = "Alza",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaKembara = new CarModel
                {
                    Name = "Kembara",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel PeroduaViva = new CarModel
                {
                    Name = "Viva",
                    CarBrandID = Perodua.ID,
                    CarBrand = Perodua
                };


                CarModel Peugeot308 = new CarModel
                {
                    Name = "308",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot208 = new CarModel
                {
                    Name = "208",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot508 = new CarModel
                {
                    Name = "508",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot408 = new CarModel
                {
                    Name = "408",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel PeugeotRcz = new CarModel
                {
                    Name = "RCZ",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot2008 = new CarModel
                {
                    Name = "2008",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot5008 = new CarModel
                {
                    Name = "5008",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot207 = new CarModel
                {
                    Name = "207",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot407 = new CarModel
                {
                    Name = "407",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot3008 = new CarModel
                {
                    Name = "3008",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot306 = new CarModel
                {
                    Name = "306",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Peugeot406 = new CarModel
                {
                    Name = "406",
                    CarBrandID = Peugeot.ID,
                    CarBrand = Peugeot
                };


                CarModel Porsche718 = new CarModel
                {
                    Name = "718",
                    CarBrandID = Porsche.ID,
                    CarBrand = Porsche
                };


                CarModel PorscheBoxster = new CarModel
                {
                    Name = "Boxster",
                    CarBrandID = Porsche.ID,
                    CarBrand = Porsche
                };


                CarModel PorschePanamera = new CarModel
                {
                    Name = "Panamera",
                    CarBrandID = Porsche.ID,
                    CarBrand = Porsche
                };


                CarModel PorscheMacan = new CarModel
                {
                    Name = "Macan",
                    CarBrandID = Porsche.ID,
                    CarBrand = Porsche
                };


                CarModel PorscheCayman = new CarModel
                {
                    Name = "Cayman",
                    CarBrandID = Porsche.ID,
                    CarBrand = Porsche
                };


                CarModel Porsche911 = new CarModel
                {
                    Name = "911",
                    CarBrandID = Porsche.ID,
                    CarBrand = Porsche
                };


                CarModel PorscheCayenne = new CarModel
                {
                    Name = "Cayenne",
                    CarBrandID = Porsche.ID,
                    CarBrand = Porsche
                };


                CarModel ProtonIswara = new CarModel
                {
                    Name = "Iswara",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonSuprimaS = new CarModel
                {
                    Name = "Suprima S",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonPreve = new CarModel
                {
                    Name = "Preve",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonX70 = new CarModel
                {
                    Name = "X70",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonSavvy = new CarModel
                {
                    Name = "Savvy",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonGen2 = new CarModel
                {
                    Name = "Gen-2",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonPerdana = new CarModel
                {
                    Name = "Perdana",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonSaga = new CarModel
                {
                    Name = "Saga",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonInspira = new CarModel
                {
                    Name = "Inspira",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonExora = new CarModel
                {
                    Name = "Exora",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonPersona = new CarModel
                {
                    Name = "Persona",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonIriz = new CarModel
                {
                    Name = "Iriz",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonErtiga = new CarModel
                {
                    Name = "Ertiga",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonWaja = new CarModel
                {
                    Name = "Waja",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonWira = new CarModel
                {
                    Name = "Wira",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel ProtonSatria = new CarModel
                {
                    Name = "Satria",
                    CarBrandID = Proton.ID,
                    CarBrand = Proton
                };


                CarModel RenaultScenic = new CarModel
                {
                    Name = "Scenic",
                    CarBrandID = Renault.ID,
                    CarBrand = Renault
                };


                CarModel RenaultFluence = new CarModel
                {
                    Name = "Fluence",
                    CarBrandID = Renault.ID,
                    CarBrand = Renault
                };


                CarModel RenaultKoleos = new CarModel
                {
                    Name = "Koleos",
                    CarBrandID = Renault.ID,
                    CarBrand = Renault
                };


                CarModel RenaultKangoo = new CarModel
                {
                    Name = "Kangoo",
                    CarBrandID = Renault.ID,
                    CarBrand = Renault
                };


                CarModel RenaultCaptur = new CarModel
                {
                    Name = "Captur",
                    CarBrandID = Renault.ID,
                    CarBrand = Renault
                };


                CarModel SubaruXv = new CarModel
                {
                    Name = "XV",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruBrz = new CarModel
                {
                    Name = "BRZ",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruLegacy = new CarModel
                {
                    Name = "Legacy",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruWrx = new CarModel
                {
                    Name = "WRX",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruForester = new CarModel
                {
                    Name = "Forester",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruOutback = new CarModel
                {
                    Name = "Outback",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruImpreza = new CarModel
                {
                    Name = "Impreza",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruLevorg = new CarModel
                {
                    Name = "Levorg",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel SubaruWrxSti = new CarModel
                {
                    Name = "WRX STi",
                    CarBrandID = Subaru.ID,
                    CarBrand = Subaru
                };


                CarModel ToyotaLandCruiserPrado = new CarModel
                {
                    Name = "Land Cruiser Prado",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaUnser = new CarModel
                {
                    Name = "Unser",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaHarrier = new CarModel
                {
                    Name = "Harrier",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaWish = new CarModel
                {
                    Name = "Wish",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaPrius = new CarModel
                {
                    Name = "Prius",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaSienta = new CarModel
                {
                    Name = "Sienta",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaAvanza = new CarModel
                {
                    Name = "Avanza",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaEstima = new CarModel
                {
                    Name = "Estima",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaCHr = new CarModel
                {
                    Name = "C-HR",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaMarkX = new CarModel
                {
                    Name = "Mark X",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaCaldina = new CarModel
                {
                    Name = "Caldina",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaFortuner = new CarModel
                {
                    Name = "Fortuner",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaRav4 = new CarModel
                {
                    Name = "RAV4",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaCamry = new CarModel
                {
                    Name = "Camry",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaPriusC = new CarModel
                {
                    Name = "Prius C",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaAlphard = new CarModel
                {
                    Name = "Alphard",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaRush = new CarModel
                {
                    Name = "Rush",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaCorollaAltis = new CarModel
                {
                    Name = "Corolla Altis",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaInnova = new CarModel
                {
                    Name = "Innova",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaCorolla = new CarModel
                {
                    Name = "Corolla",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaVios = new CarModel
                {
                    Name = "Vios",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaFjCruiser = new CarModel
                {
                    Name = "FJ Cruiser",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaYaris = new CarModel
                {
                    Name = "Yaris",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaHilux = new CarModel
                {
                    Name = "Hilux",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaLandCruiser = new CarModel
                {
                    Name = "Land Cruiser",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaVellfire = new CarModel
                {
                    Name = "Vellfire",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaPrevia = new CarModel
                {
                    Name = "Previa",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaIpsum = new CarModel
                {
                    Name = "Ipsum",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel ToyotaNadia = new CarModel
                {
                    Name = "Nadia",
                    CarBrandID = Toyota.ID,
                    CarBrand = Toyota
                };


                CarModel VolkswagenVento = new CarModel
                {
                    Name = "Vento",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenPolo = new CarModel
                {
                    Name = "Polo",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenBeetle = new CarModel
                {
                    Name = "Beetle",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenCc = new CarModel
                {
                    Name = "CC",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenSharan = new CarModel
                {
                    Name = "Sharan",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenScirocco = new CarModel
                {
                    Name = "Scirocco",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenPassat = new CarModel
                {
                    Name = "Passat",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenTiguan = new CarModel
                {
                    Name = "Tiguan",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenCrossTouran = new CarModel
                {
                    Name = "Cross Touran",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenArteon = new CarModel
                {
                    Name = "Arteon",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenTouareg = new CarModel
                {
                    Name = "Touareg",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenGolf = new CarModel
                {
                    Name = "Golf",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolkswagenJetta = new CarModel
                {
                    Name = "Jetta",
                    CarBrandID = Volkswagen.ID,
                    CarBrand = Volkswagen
                };


                CarModel VolvoC30 = new CarModel
                {
                    Name = "C30",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel Volvo122S = new CarModel
                {
                    Name = "122S",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoV40 = new CarModel
                {
                    Name = "V40",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoXc40 = new CarModel
                {
                    Name = "XC40",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoS40 = new CarModel
                {
                    Name = "S40",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoXc90 = new CarModel
                {
                    Name = "XC90",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoS90 = new CarModel
                {
                    Name = "S90",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoV50 = new CarModel
                {
                    Name = "V50",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoS70 = new CarModel
                {
                    Name = "S70",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoV40CrossCountry = new CarModel
                {
                    Name = "V40 Cross Country",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoS80 = new CarModel
                {
                    Name = "S80",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoV60 = new CarModel
                {
                    Name = "V60",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoS60 = new CarModel
                {
                    Name = "S60",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel Volvo850 = new CarModel
                {
                    Name = "850",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel Volvo740 = new CarModel
                {
                    Name = "740",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };


                CarModel VolvoXc60 = new CarModel
                {
                    Name = "XC60",
                    CarBrandID = Volvo.ID,
                    CarBrand = Volvo
                };

                // Initialize cars
                context.Cars.AddRange(

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 12800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 3480.0,
                        ManufactureYear = 2006,
                        Mileage = 95000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 11770.72m,
                        PricePerMonth = 1066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 1",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1485.0,
                        LengthMM = 4618.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 195.0,
                        PredictedPrice = 32159.8m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2702.0,
                        WidthMM = 1813.0,
                        CarModelID = RenaultFluence.ID,
                        CarModel = RenaultFluence,
                        Title = "Renault Fluence 2",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 86800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4705.0,
                        ManufactureYear = 2014,
                        Mileage = 98000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 241.0,
                        PredictedPrice = 79405.91m,
                        PricePerMonth = 7233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 3",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1584.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4465.0,
                        ManufactureYear = 2003,
                        Mileage = 185000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 11980.81m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1740.0,
                        CarModelID = ProtonWaja.ID,
                        CarModel = ProtonWaja,
                        Title = "Proton Waja 4",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4536.0,
                        ManufactureYear = 2014,
                        Mileage = 105000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 31293.39m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonSuprimaS.ID,
                        CarModel = ProtonSuprimaS,
                        Title = "Proton SuprimaS 5",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 70000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1994.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4680.0,
                        ManufactureYear = 2004,
                        Mileage = 185000.0,
                        PeakPowerHP = 260.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 55056.12m,
                        PricePerMonth = 5833.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1730.0,
                        CarModelID = SubaruLegacy.ID,
                        CarModel = SubaruLegacy,
                        Title = "Subaru Legacy 6",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 51800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.0,
                        LengthMM = 4627.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 205.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 52208.14m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2774.0,
                        WidthMM = 1891.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 7",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 49999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1430.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 45873.23m,
                        PricePerMonth = 4166.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1765.0,
                        CarModelID = LexusCt200H.ID,
                        CarModel = LexusCt200H,
                        Title = "Lexus Ct200H 8",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 94800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2019,
                        Mileage = 15000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 285.0,
                        PredictedPrice = 94860.53m,
                        PricePerMonth = 7900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 9",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30700.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2017,
                        Mileage = 57500.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34717.15m,
                        PricePerMonth = 2558.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 10",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2019,
                        Mileage = 45000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34678.93m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 11",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 31700.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2199.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1760.0,
                        LengthMM = 4660.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 196.0,
                        PeakTorqueNM = 442.0,
                        PredictedPrice = 64953.49m,
                        PricePerMonth = 2641.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1890.0,
                        CarModelID = HyundaiSantaFe.ID,
                        CarModel = HyundaiSantaFe,
                        Title = "Hyundai SantaFe 12",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 65800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5359.0,
                        ManufactureYear = 2014,
                        Mileage = 95000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 375.0,
                        PredictedPrice = 63167.49m,
                        PricePerMonth = 5483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1850.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 13",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68500.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4545.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 222.0,
                        PredictedPrice = 62377.63m,
                        PricePerMonth = 5708.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 14",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 83800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1890.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 97657.3m,
                        PricePerMonth = 6983.33m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1830.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 15",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 325000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 3600.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1300.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2008,
                        Mileage = 45000.0,
                        PeakPowerHP = 480.0,
                        PeakTorqueNM = 620.0,
                        PredictedPrice = 336745.36m,
                        PricePerMonth = 27083.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2350.0,
                        WidthMM = 1852.0,
                        CarModelID = Porsche911.ID,
                        CarModel = Porsche911,
                        Title = "Porsche 911 16",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 31391.62m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 17",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 86800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4620.0,
                        ManufactureYear = 2018,
                        Mileage = 20000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 74703.58m,
                        PricePerMonth = 7233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1776.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 18",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1434.0,
                        LengthMM = 3898.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 24049.2m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1745.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 19",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4580.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 36592.37m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1755.0,
                        CarModelID = Mazda3.ID,
                        CarModel = Mazda3,
                        Title = "Mazda 3 20",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 65800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1740.0,
                        LengthMM = 4435.0,
                        ManufactureYear = 2020,
                        Mileage = 15000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 133.0,
                        PredictedPrice = 64108.92m,
                        PricePerMonth = 5483.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAruz.ID,
                        CarModel = PeroduaAruz,
                        Title = "Perodua Aruz 21",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 21800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 194.0,
                        PredictedPrice = 32886.49m,
                        PricePerMonth = 1816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1775.0,
                        CarModelID = KiaForte.ID,
                        CarModel = KiaForte,
                        Title = "Kia Forte 22",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 48800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 3955.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 51297.88m,
                        PricePerMonth = 4066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 23",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 37800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2015,
                        Mileage = 69238.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 42972.15m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1600.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 24",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2009,
                        Mileage = 105000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 14383.36m,
                        PricePerMonth = 1233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 25",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 32800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1456.0,
                        LengthMM = 4792.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 158.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 35625.5m,
                        PricePerMonth = 2733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2817.0,
                        WidthMM = 2068.0,
                        CarModelID = Peugeot508.ID,
                        CarModel = Peugeot508,
                        Title = "Peugeot 508 26",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 139800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2013,
                        Mileage = 70000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 121712.28m,
                        PricePerMonth = 11650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 27",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26500.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2013,
                        Mileage = 140000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 30560.75m,
                        PricePerMonth = 2208.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 28",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 33800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1655.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2011,
                        Mileage = 100000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 38153.95m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1820.0,
                        CarModelID = HyundaiTucson.ID,
                        CarModel = HyundaiTucson,
                        Title = "Hyundai Tucson 29",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2013,
                        Mileage = 70000.0,
                        PeakPowerHP = 131.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 39112.77m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1775.0,
                        CarModelID = HyundaiElantra.ID,
                        CarModel = HyundaiElantra,
                        Title = "Hyundai Elantra 30",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2017,
                        Mileage = 55000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 41393.03m,
                        PricePerMonth = 3541.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 31",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 41800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1779.0,
                        LengthMM = 5295.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 314.0,
                        PredictedPrice = 44341.8m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 32",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 178000.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1457.0,
                        LengthMM = 5252.0,
                        ManufactureYear = 2013,
                        Mileage = 15000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 156648.76m,
                        PricePerMonth = 14833.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3157.0,
                        WidthMM = 1899.0,
                        CarModelID = JaguarXj.ID,
                        CarModel = JaguarXj,
                        Title = "Jaguar Xj 33",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 46800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1790.0,
                        LengthMM = 4845.0,
                        ManufactureYear = 2008,
                        Mileage = 135000.0,
                        PeakPowerHP = 250.0,
                        PeakTorqueNM = 309.0,
                        PredictedPrice = 52085.89m,
                        PricePerMonth = 3900.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1830.0,
                        CarModelID = HondaElysion.ID,
                        CarModel = HondaElysion,
                        Title = "Honda Elysion 34",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25183.88m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 35",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 121800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1462.0,
                        LengthMM = 4907.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 120475.0m,
                        PricePerMonth = 10150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw520I.ID,
                        CarModel = Bmw520I,
                        Title = "Bmw 520I 36",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1453.0,
                        LengthMM = 3970.0,
                        ManufactureYear = 2015,
                        Mileage = 85000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 153.0,
                        PredictedPrice = 31382.98m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2456.0,
                        WidthMM = 1682.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 37",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4205.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 30671.38m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 38",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 66888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2179.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1740.0,
                        LengthMM = 4500.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 420.0,
                        PredictedPrice = 101167.26m,
                        PricePerMonth = 5574.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2659.0,
                        WidthMM = 1910.0,
                        CarModelID = LandRoverFreelander2.ID,
                        CarModel = LandRoverFreelander2,
                        Title = "LandRover Freelander2 39",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35999.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 37117.92m,
                        PricePerMonth = 2999.92m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 40",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 236000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1776.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2016,
                        Mileage = 30000.0,
                        PeakPowerHP = 320.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 275278.51m,
                        PricePerMonth = 19666.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2984.0,
                        WidthMM = 1958.0,
                        CarModelID = VolvoXc90.ID,
                        CarModel = VolvoXc90,
                        Title = "Volvo Xc90 41",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 29435.17m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 42",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 121800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4624.0,
                        ManufactureYear = 2013,
                        Mileage = 65000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 115521.55m,
                        PricePerMonth = 10150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw328I.ID,
                        CarModel = Bmw328I,
                        Title = "Bmw 328I 43",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 112999.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2017,
                        Mileage = 75000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 127804.5m,
                        PricePerMonth = 9416.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw320I.ID,
                        CarModel = Bmw320I,
                        Title = "Bmw 320I 44",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1426.0,
                        LengthMM = 4532.0,
                        ManufactureYear = 2005,
                        Mileage = 170000.0,
                        PeakPowerHP = 261.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 74060.28m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2715.0,
                        WidthMM = 1728.0,
                        CarModelID = MercedesBenzC230K.ID,
                        CarModel = MercedesBenzC230K,
                        Title = "MercedesBenz C230K 45",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 43800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2018,
                        Mileage = 55000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 38317.66m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 46",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 11500.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1655.0,
                        LengthMM = 3705.0,
                        ManufactureYear = 1996,
                        Mileage = 105000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 181.0,
                        PredictedPrice = 45644.6m,
                        PricePerMonth = 958.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2200.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRav4.ID,
                        CarModel = ToyotaRav4,
                        Title = "Toyota Rav4 47",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 40800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 4765.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 43759.88m,
                        PricePerMonth = 3400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2830.0,
                        WidthMM = 1800.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 48",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2199.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1680.0,
                        LengthMM = 4690.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 197.0,
                        PeakTorqueNM = 436.0,
                        PredictedPrice = 74154.47m,
                        PricePerMonth = 5233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1880.0,
                        CarModelID = HyundaiSantaFe.ID,
                        CarModel = HyundaiSantaFe,
                        Title = "Hyundai SantaFe 49",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2017,
                        Mileage = 80000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 61931.08m,
                        PricePerMonth = 5249.92m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 50",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 65999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1486.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 175.0,
                        PredictedPrice = 68062.35m,
                        PricePerMonth = 5499.92m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2537.0,
                        WidthMM = 1808.0,
                        CarModelID = VolkswagenBeetle.ID,
                        CarModel = VolkswagenBeetle,
                        Title = "Volkswagen Beetle 51",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 7800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1468.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1385.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2005,
                        Mileage = 105000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 126.0,
                        PredictedPrice = 9384.85m,
                        PricePerMonth = 650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonWira.ID,
                        CarModel = ProtonWira,
                        Title = "Proton Wira 52",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 235000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1652.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 212855.24m,
                        PricePerMonth = 19583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2702.0,
                        WidthMM = 1863.0,
                        CarModelID = VolvoXc40.ID,
                        CarModel = VolvoXc40,
                        Title = "Volvo Xc40 53",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 4500.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1594.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 4525.0,
                        ManufactureYear = 2005,
                        Mileage = 130000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 143.0,
                        PredictedPrice = 20453.79m,
                        PricePerMonth = 375.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = KiaSpectra.ID,
                        CarModel = KiaSpectra,
                        Title = "Kia Spectra 54",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 118800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2356.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 96336.92m,
                        PricePerMonth = 9900.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 55",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 96000.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2020,
                        Mileage = 25000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 113123.75m,
                        PricePerMonth = 8000.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 56",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1835.0,
                        LengthMM = 4715.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 56136.61m,
                        PricePerMonth = 5749.92m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1770.0,
                        CarModelID = MazdaBiante.ID,
                        CarModel = MazdaBiante,
                        Title = "Mazda Biante 57",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 119800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2356.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 100754.76m,
                        PricePerMonth = 9983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 58",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 328000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 5000.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1855.0,
                        LengthMM = 4999.0,
                        ManufactureYear = 2013,
                        Mileage = 53000.0,
                        PeakPowerHP = 510.0,
                        PeakTorqueNM = 625.0,
                        PredictedPrice = 317488.23m,
                        PricePerMonth = 27333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2922.0,
                        WidthMM = 2220.0,
                        CarModelID = LandRoverRangeRover.ID,
                        CarModel = LandRoverRangeRover,
                        Title = "LandRover RangeRover 59",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38888.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1825.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 131.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 35339.95m,
                        PricePerMonth = 3240.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2695.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanSerena.ID,
                        CarModel = NissanSerena,
                        Title = "Nissan Serena 60",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4350.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 39392.41m,
                        PricePerMonth = 3241.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2630.0,
                        WidthMM = 1800.0,
                        CarModelID = KiaSportage.ID,
                        CarModel = KiaSportage,
                        Title = "Kia Sportage 61",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 53000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 42660.91m,
                        PricePerMonth = 4416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 62",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1948.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2000,
                        Mileage = 205000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 15997.81m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = VolvoV40.ID,
                        CarModel = VolvoV40,
                        Title = "Volvo V40 63",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 126800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1679.0,
                        LengthMM = 4584.0,
                        ManufactureYear = 2018,
                        Mileage = 75000.0,
                        PeakPowerHP = 193.0,
                        PeakTorqueNM = 243.0,
                        PredictedPrice = 120589.08m,
                        PricePerMonth = 10566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1855.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 64",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 183000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 4608.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1870.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2012,
                        Mileage = 115000.0,
                        PeakPowerHP = 318.0,
                        PeakTorqueNM = 460.0,
                        PredictedPrice = 166613.95m,
                        PricePerMonth = 15250.0m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1970.0,
                        CarModelID = ToyotaLandCruiser.ID,
                        CarModel = ToyotaLandCruiser,
                        Title = "Toyota LandCruiser 65",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 129800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2356.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2016,
                        Mileage = 150000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 110081.37m,
                        PricePerMonth = 10816.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 66",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 159800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2016,
                        Mileage = 45000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 194426.26m,
                        PricePerMonth = 13316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw330I.ID,
                        CarModel = Bmw330I,
                        Title = "Bmw 330I 67",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 36777.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1395.0,
                        LengthMM = 4580.0,
                        ManufactureYear = 2010,
                        Mileage = 135000.0,
                        PeakPowerHP = 193.0,
                        PeakTorqueNM = 230.0,
                        PredictedPrice = 90550.49m,
                        PricePerMonth = 3064.75m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1817.0,
                        CarModelID = Bmw323I.ID,
                        CarModel = Bmw323I,
                        Title = "Bmw 323I 68",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1430.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 44107.47m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1765.0,
                        CarModelID = LexusCt200H.ID,
                        CarModel = LexusCt200H,
                        Title = "Lexus Ct200H 69",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 51888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2011,
                        Mileage = 110000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 45691.53m,
                        PricePerMonth = 4324.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaStream.ID,
                        CarModel = HondaStream,
                        Title = "Honda Stream 70",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4856.0,
                        ManufactureYear = 2012,
                        Mileage = 83123.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 47141.77m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2795.0,
                        WidthMM = 1835.0,
                        CarModelID = KiaOptimaK5.ID,
                        CarModel = KiaOptimaK5,
                        Title = "Kia OptimaK5 71",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 255000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1676.0,
                        LengthMM = 4708.0,
                        ManufactureYear = 2020,
                        Mileage = 15000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 267277.08m,
                        PricePerMonth = 21250.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2864.0,
                        WidthMM = 1891.0,
                        CarModelID = BmwX3.ID,
                        CarModel = BmwX3,
                        Title = "Bmw X3 72",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 118800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1750.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 105057.72m,
                        PricePerMonth = 9900.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaPrevia.ID,
                        CarModel = ToyotaPrevia,
                        Title = "Toyota Previa 73",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 11500.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1430.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2007,
                        Mileage = 95000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 11749.94m,
                        PricePerMonth = 958.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 74",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 59800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 54297.14m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 75",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 29800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1794.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4540.0,
                        ManufactureYear = 2009,
                        Mileage = 115000.0,
                        PeakPowerHP = 132.0,
                        PeakTorqueNM = 170.0,
                        PredictedPrice = 30735.61m,
                        PricePerMonth = 2483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 76",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 3905.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 16652.9m,
                        PricePerMonth = 1400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1710.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 77",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 43888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2014,
                        Mileage = 60000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 45884.67m,
                        PricePerMonth = 3657.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 78",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 53800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 56586.61m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1695.0,
                        CarModelID = Mazda2.ID,
                        CarModel = Mazda2,
                        Title = "Mazda 2 79",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3200.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1795.0,
                        LengthMM = 5075.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 43852.43m,
                        PricePerMonth = 3241.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 80",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 55800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 3955.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 55685.44m,
                        PricePerMonth = 4650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 81",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 59800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1797.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4590.0,
                        ManufactureYear = 2009,
                        Mileage = 70000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 56891.87m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 82",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 11800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4601.090693538827,
                        ManufactureYear = 1999,
                        Mileage = 205000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 181.0,
                        PredictedPrice = 17026.53m,
                        PricePerMonth = 983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2735.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaNadia.ID,
                        CarModel = ToyotaNadia,
                        Title = "Toyota Nadia 83",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 73800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2017,
                        Mileage = 80000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 74114.44m,
                        PricePerMonth = 6150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 84",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 66800.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1430.0,
                        LengthMM = 3723.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 37420.93m,
                        PricePerMonth = 5566.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1683.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 85",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2018,
                        Mileage = 50000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 64458.17m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 86",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 63000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1486.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2013,
                        Mileage = 60000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 175.0,
                        PredictedPrice = 66993.29m,
                        PricePerMonth = 5250.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2537.0,
                        WidthMM = 1808.0,
                        CarModelID = VolkswagenBeetle.ID,
                        CarModel = VolkswagenBeetle,
                        Title = "Volkswagen Beetle 87",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 203800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2493.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1880.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2016,
                        Mileage = 50000.0,
                        PeakPowerHP = 182.0,
                        PeakTorqueNM = 235.0,
                        PredictedPrice = 179921.49m,
                        PricePerMonth = 16983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1850.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 88",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 68800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 3498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1315.0,
                        LengthMM = 4310.0,
                        ManufactureYear = 2005,
                        Mileage = 70000.0,
                        PeakPowerHP = 381.0,
                        PeakTorqueNM = 363.0,
                        PredictedPrice = 145033.34m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1815.0,
                        CarModelID = NissanFairladyZ.ID,
                        CarModel = NissanFairladyZ,
                        Title = "Nissan FairladyZ 89",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 32164.69m,
                        PricePerMonth = 2999.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 90",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26990.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4205.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 32145.25m,
                        PricePerMonth = 2249.17m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 91",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 82888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1359.0,
                        LengthMM = 4287.0,
                        ManufactureYear = 2012,
                        Mileage = 80000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 61246.33m,
                        PricePerMonth = 6907.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2612.0,
                        WidthMM = 2107.0,
                        CarModelID = PeugeotRcz.ID,
                        CarModel = PeugeotRcz,
                        Title = "Peugeot Rcz 92",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 59700.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4580.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 43350.65m,
                        PricePerMonth = 4975.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1755.0,
                        CarModelID = Mazda3.ID,
                        CarModel = Mazda3,
                        Title = "Mazda 3 93",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 62800.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4235.0,
                        ManufactureYear = 2016,
                        Mileage = 90800.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 143.0,
                        PredictedPrice = 57933.63m,
                        PricePerMonth = 5233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaSienta.ID,
                        CarModel = ToyotaSienta,
                        Title = "Toyota Sienta 94",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 105900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 4940.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 306.0,
                        PeakTorqueNM = 370.0,
                        PredictedPrice = 140588.86m,
                        PricePerMonth = 8825.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1881.0,
                        CarModelID = MercedesBenzCls350.ID,
                        CarModel = MercedesBenzCls350,
                        Title = "MercedesBenz Cls350 95",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4300.0,
                        ManufactureYear = 2011,
                        Mileage = 100000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 30393.42m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 96",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 39648.64m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 97",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 28971.52m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 98",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 72800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1925.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2015,
                        Mileage = 95000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 392.0,
                        PredictedPrice = 69582.43m,
                        PricePerMonth = 6066.67m,
                        SeatCapacity = 11,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1920.0,
                        CarModelID = HyundaiGrandStarex.ID,
                        CarModel = HyundaiGrandStarex,
                        Title = "Hyundai GrandStarex 99",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 22999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1499.0,
                        LengthMM = 3925.0,
                        ManufactureYear = 2007,
                        Mileage = 110000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 153.0,
                        PredictedPrice = 24902.86m,
                        PricePerMonth = 1916.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1671.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 100",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 293800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1479.0,
                        LengthMM = 4936.0,
                        ManufactureYear = 2019,
                        Mileage = 50000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 241650.15m,
                        PricePerMonth = 24483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2975.0,
                        WidthMM = 1868.0,
                        CarModelID = Bmw530I.ID,
                        CarModel = Bmw530I,
                        Title = "Bmw 530I 101",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 123800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2016,
                        Mileage = 100000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 127804.5m,
                        PricePerMonth = 10316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw320I.ID,
                        CarModel = Bmw320I,
                        Title = "Bmw 320I 102",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 15800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2012,
                        Mileage = 135000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 13959.27m,
                        PricePerMonth = 1316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 103",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1948.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 1999,
                        Mileage = 60000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 27877.62m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = VolvoS40.ID,
                        CarModel = VolvoS40,
                        Title = "Volvo S40 104",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4420.0,
                        ManufactureYear = 2011,
                        Mileage = 150000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 31981.43m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1690.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 105",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3690.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 91.0,
                        PeakTorqueNM = 117.0,
                        PredictedPrice = 23775.26m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 106",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 55800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 46589.75m,
                        PricePerMonth = 4650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 107",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62777.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2017,
                        Mileage = 60000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 63896.63m,
                        PricePerMonth = 5231.42m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 108",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1248.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 3595.0,
                        ManufactureYear = 2015,
                        Mileage = 25000.0,
                        PeakPowerHP = 92.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 26003.25m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2385.0,
                        WidthMM = 1595.0,
                        CarModelID = KiaPicanto.ID,
                        CarModel = KiaPicanto,
                        Title = "Kia Picanto 109",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 162800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1630.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 238.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 149413.5m,
                        PricePerMonth = 13566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1845.0,
                        CarModelID = LexusNx200T.ID,
                        CarModel = LexusNx200T,
                        Title = "Lexus Nx200T 110",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 52800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 48967.04m,
                        PricePerMonth = 4400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 111",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 113000.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2013,
                        Mileage = 60000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 101697.6m,
                        PricePerMonth = 9416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA180.ID,
                        CarModel = MercedesBenzA180,
                        Title = "MercedesBenz A180 112",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 79800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4590.0,
                        ManufactureYear = 2015,
                        Mileage = 110000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 68565.76m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 113",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 30800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4510.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 260.0,
                        PeakTorqueNM = 323.0,
                        PredictedPrice = 32801.17m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1740.0,
                        CarModelID = ToyotaCaldina.ID,
                        CarModel = ToyotaCaldina,
                        Title = "Toyota Caldina 114",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 63800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1488.0,
                        LengthMM = 4750.0,
                        ManufactureYear = 2017,
                        Mileage = 40000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 93924.88m,
                        PricePerMonth = 5316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1820.0,
                        CarModelID = Peugeot408.ID,
                        CarModel = Peugeot408,
                        Title = "Peugeot 408 115",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4384.0,
                        ManufactureYear = 2019,
                        Mileage = 25000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 175.0,
                        PredictedPrice = 65642.77m,
                        PricePerMonth = 5208.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2637.0,
                        WidthMM = 1699.0,
                        CarModelID = VolkswagenVento.ID,
                        CarModel = VolkswagenVento,
                        Title = "Volkswagen Vento 116",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 118800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2356.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2014,
                        Mileage = 135000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 83965.09m,
                        PricePerMonth = 9900.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 117",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 55800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1447.0,
                        LengthMM = 4581.0,
                        ManufactureYear = 2010,
                        Mileage = 100000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 65593.67m,
                        PricePerMonth = 4650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 2020.0,
                        CarModelID = MercedesBenzC200Cgi.ID,
                        CarModel = MercedesBenzC200Cgi,
                        Title = "MercedesBenz C200Cgi 118",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 9800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1609.0,
                        LengthMM = 4168.0,
                        ManufactureYear = 2005,
                        Mileage = 120000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 25982.88m,
                        PricePerMonth = 816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1719.0,
                        CarModelID = RenaultScenic.ID,
                        CarModel = RenaultScenic,
                        Title = "Renault Scenic 119",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 20800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2008,
                        Mileage = 135000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 25270.96m,
                        PricePerMonth = 1733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 120",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 165800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 2893.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1304.0,
                        LengthMM = 4347.0,
                        ManufactureYear = 2009,
                        Mileage = 60000.0,
                        PeakPowerHP = 265.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 183138.93m,
                        PricePerMonth = 13816.67m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2416.0,
                        WidthMM = 1801.0,
                        CarModelID = PorscheCayman.ID,
                        CarModel = PorscheCayman,
                        Title = "Porsche Cayman 121",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2835.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1800.0,
                        LengthMM = 5040.0,
                        ManufactureYear = 2013,
                        Mileage = 10000.0,
                        PeakPowerHP = 97.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 51493.17m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1755.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 122",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 45888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1444.0,
                        LengthMM = 4581.0,
                        ManufactureYear = 2008,
                        Mileage = 115000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 44871.3m,
                        PricePerMonth = 3824.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1770.0,
                        CarModelID = MercedesBenzC200K.ID,
                        CarModel = MercedesBenzC200K,
                        Title = "MercedesBenz C200K 123",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 116800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1750.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2013,
                        Mileage = 100000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 94989.25m,
                        PricePerMonth = 9733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaPrevia.ID,
                        CarModel = ToyotaPrevia,
                        Title = "Toyota Previa 124",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 89800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2979.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1464.0,
                        LengthMM = 4899.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 306.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 172090.56m,
                        PricePerMonth = 7483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw535I.ID,
                        CarModel = Bmw535I,
                        Title = "Bmw 535I 125",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 358000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 3604.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1705.0,
                        LengthMM = 4855.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 420.0,
                        PeakTorqueNM = 550.0,
                        PredictedPrice = 285799.09m,
                        PricePerMonth = 29833.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2895.0,
                        WidthMM = 1939.0,
                        CarModelID = PorscheCayenne.ID,
                        CarModel = PorscheCayenne,
                        Title = "Porsche Cayenne 126",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 27900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1425.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 25986.24m,
                        PricePerMonth = 2325.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 127",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 21800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 24454.65m,
                        PricePerMonth = 1816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2613.0,
                        WidthMM = 1837.0,
                        CarModelID = Peugeot3008.ID,
                        CarModel = Peugeot3008,
                        Title = "Peugeot 3008 128",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1438.0,
                        LengthMM = 4477.0,
                        ManufactureYear = 2011,
                        Mileage = 110000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 16849.7m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1725.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 129",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4695.0,
                        ManufactureYear = 2009,
                        Mileage = 97000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 241.0,
                        PredictedPrice = 46356.83m,
                        PricePerMonth = 3500.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1540.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 130",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 22534.76m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 131",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1800.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2002,
                        Mileage = 195000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 22577.41m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2960.0,
                        WidthMM = 1775.0,
                        CarModelID = MitsubishiStorm.ID,
                        CarModel = MitsubishiStorm,
                        Title = "Mitsubishi Storm 132",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 34800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1600.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2005,
                        Mileage = 100000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 192.0,
                        PredictedPrice = 38038.87m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1490.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 133",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2521.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1493.0,
                        LengthMM = 4851.0,
                        ManufactureYear = 2011,
                        Mileage = 245000.0,
                        PeakPowerHP = 231.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 56336.72m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2835.0,
                        WidthMM = 1861.0,
                        CarModelID = VolvoS80.ID,
                        CarModel = VolvoS80,
                        Title = "Volvo S80 134",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 39800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 36229.48m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 135",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23880.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1489.0,
                        LengthMM = 3982.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 21645.9m,
                        PricePerMonth = 1990.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 136",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 239800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2143.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1796.0,
                        LengthMM = 4819.0,
                        ManufactureYear = 2016,
                        Mileage = 70000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 500.0,
                        PredictedPrice = 220454.12m,
                        PricePerMonth = 19983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2915.0,
                        WidthMM = 1935.0,
                        CarModelID = MercedesBenzGle250.ID,
                        CarModel = MercedesBenzGle250,
                        Title = "MercedesBenz Gle250 137",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 10800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1498.0,
                        LengthMM = 4276.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 18664.35m,
                        PricePerMonth = 900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2608.0,
                        WidthMM = 1815.0,
                        CarModelID = Peugeot308.ID,
                        CarModel = Peugeot308,
                        Title = "Peugeot 308 138",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34800.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 3626.0,
                        ManufactureYear = 2005,
                        Mileage = 185000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 149.0,
                        PredictedPrice = 37077.25m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1688.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 139",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34500.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2019,
                        Mileage = 40000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34715.81m,
                        PricePerMonth = 2875.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 140",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 198800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1557.0,
                        LengthMM = 4299.0,
                        ManufactureYear = 2019,
                        Mileage = 24000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 162082.91m,
                        PricePerMonth = 16566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1822.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 141",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 4765.0,
                        ManufactureYear = 2006,
                        Mileage = 95000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 47036.31m,
                        PricePerMonth = 3657.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2830.0,
                        WidthMM = 1800.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 142",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 363000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1624.0,
                        LengthMM = 4681.0,
                        ManufactureYear = 2017,
                        Mileage = 40000.0,
                        PeakPowerHP = 256.0,
                        PeakTorqueNM = 370.0,
                        PredictedPrice = 323983.84m,
                        PricePerMonth = 30250.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2807.0,
                        WidthMM = 1923.0,
                        CarModelID = PorscheMacan.ID,
                        CarModel = PorscheMacan,
                        Title = "Porsche Macan 143",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 19800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2008,
                        Mileage = 95000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 26929.5m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 144",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 89000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2191.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2016,
                        Mileage = 45000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 420.0,
                        PredictedPrice = 172021.28m,
                        PricePerMonth = 7416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 145",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1599.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4025.0,
                        ManufactureYear = 2007,
                        Mileage = 85000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 23253.02m,
                        PricePerMonth = 825.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1740.0,
                        CarModelID = HyundaiMatrix.ID,
                        CarModel = HyundaiMatrix,
                        Title = "Hyundai Matrix 146",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 84800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2019,
                        Mileage = 105000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 285.0,
                        PredictedPrice = 89879.27m,
                        PricePerMonth = 7066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 147",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 78800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1429.0,
                        LengthMM = 4624.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 380.0,
                        PredictedPrice = 95762.64m,
                        PricePerMonth = 6566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw320D.ID,
                        CarModel = Bmw320D,
                        Title = "Bmw 320D 148",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 55800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2015,
                        Mileage = 130000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 54157.76m,
                        PricePerMonth = 4650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 149",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1447.0,
                        LengthMM = 4235.0,
                        ManufactureYear = 2012,
                        Mileage = 10000.0,
                        PeakPowerHP = 110.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 27054.54m,
                        PricePerMonth = 816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2443.0,
                        WidthMM = 1669.0,
                        CarModelID = Peugeot207.ID,
                        CarModel = Peugeot207,
                        Title = "Peugeot 207 150",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 29696.41m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 151",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 44800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4080.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 124.0,
                        PeakTorqueNM = 167.0,
                        PredictedPrice = 46981.56m,
                        PricePerMonth = 3733.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 152",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 59800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4705.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 241.0,
                        PredictedPrice = 66271.7m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 153",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 5900.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1468.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1385.0,
                        LengthMM = 4360.0,
                        ManufactureYear = 2000,
                        Mileage = 195000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 126.0,
                        PredictedPrice = 9328.11m,
                        PricePerMonth = 491.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonWira.ID,
                        CarModel = ProtonWira,
                        Title = "Proton Wira 154",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 308800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1526.0,
                        LengthMM = 4360.0,
                        ManufactureYear = 2019,
                        Mileage = 25000.0,
                        PeakPowerHP = 306.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 218358.6m,
                        PricePerMonth = 25733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1824.0,
                        CarModelID = BmwX2.ID,
                        CarModel = BmwX2,
                        Title = "Bmw X2 155",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 46800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1702.0,
                        LengthMM = 4524.0,
                        ManufactureYear = 2014,
                        Mileage = 50000.0,
                        PeakPowerHP = 179.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 60104.35m,
                        PricePerMonth = 3900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2690.0,
                        WidthMM = 1838.0,
                        CarModelID = FordKuga.ID,
                        CarModel = FordKuga,
                        Title = "Ford Kuga 156",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1520.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 17762.79m,
                        PricePerMonth = 1249.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 157",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39899.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2261.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1645.0,
                        LengthMM = 4699.0,
                        ManufactureYear = 2010,
                        Mileage = 100000.0,
                        PeakPowerHP = 238.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 82246.62m,
                        PricePerMonth = 3324.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1872.0,
                        CarModelID = MazdaCx7.ID,
                        CarModel = MazdaCx7,
                        Title = "Mazda Cx7 158",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 79900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5362.0,
                        ManufactureYear = 2017,
                        Mileage = 67500.0,
                        PeakPowerHP = 200.0,
                        PeakTorqueNM = 470.0,
                        PredictedPrice = 86346.71m,
                        PricePerMonth = 6658.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1860.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 159",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 206999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2019,
                        Mileage = 20000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 154857.97m,
                        PricePerMonth = 17249.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC200.ID,
                        CarModel = MercedesBenzC200,
                        Title = "MercedesBenz C200 160",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 149800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1432.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2013,
                        Mileage = 50000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 134302.84m,
                        PricePerMonth = 12483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1777.0,
                        CarModelID = MercedesBenzCla250.ID,
                        CarModel = MercedesBenzCla250,
                        Title = "MercedesBenz Cla250 161",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 226800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1494.0,
                        LengthMM = 4417.0,
                        ManufactureYear = 2015,
                        Mileage = 50000.0,
                        PeakPowerHP = 360.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 191827.82m,
                        PricePerMonth = 18900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1804.0,
                        CarModelID = MercedesBenzGla45Amg.ID,
                        CarModel = MercedesBenzGla45Amg,
                        Title = "MercedesBenz Gla45Amg 162",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 21800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1975.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4350.0,
                        ManufactureYear = 2009,
                        Mileage = 120000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 184.0,
                        PredictedPrice = 31520.01m,
                        PricePerMonth = 1816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2630.0,
                        WidthMM = 1800.0,
                        CarModelID = KiaSportage.ID,
                        CarModel = KiaSportage,
                        Title = "Kia Sportage 163",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 847.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 37.0,
                        PeakTorqueNM = 63.0,
                        PredictedPrice = 6268.27m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 164",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 157999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1462.0,
                        LengthMM = 4907.0,
                        ManufactureYear = 2015,
                        Mileage = 38000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 189692.41m,
                        PricePerMonth = 13166.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw528I.ID,
                        CarModel = Bmw528I,
                        Title = "Bmw 528I 165",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 195888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 2893.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1292.0,
                        LengthMM = 4342.0,
                        ManufactureYear = 2011,
                        Mileage = 55000.0,
                        PeakPowerHP = 256.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 268671.12m,
                        PricePerMonth = 16324.0m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2415.0,
                        WidthMM = 1801.0,
                        CarModelID = PorscheBoxster.ID,
                        CarModel = PorscheBoxster,
                        Title = "Porsche Boxster 166",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 253800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1479.0,
                        LengthMM = 5238.0,
                        ManufactureYear = 2017,
                        Mileage = 76500.0,
                        PeakPowerHP = 258.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 232901.97m,
                        PricePerMonth = 21150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3210.0,
                        WidthMM = 1902.0,
                        CarModelID = Bmw740Le.ID,
                        CarModel = Bmw740Le,
                        Title = "Bmw 740Le 167",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 86800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2017,
                        Mileage = 80000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 72311.45m,
                        PricePerMonth = 7233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1799.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 168",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 255800.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1479.0,
                        LengthMM = 4936.0,
                        ManufactureYear = 2018,
                        Mileage = 37000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 254064.17m,
                        PricePerMonth = 21316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2975.0,
                        WidthMM = 1868.0,
                        CarModelID = Bmw530I.ID,
                        CarModel = Bmw530I,
                        Title = "Bmw 530I 169",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 47999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 59555.46m,
                        PricePerMonth = 3999.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1695.0,
                        CarModelID = Mazda2.ID,
                        CarModel = Mazda2,
                        Title = "Mazda 2 170",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1452.0,
                        LengthMM = 4818.0,
                        ManufactureYear = 2006,
                        Mileage = 105000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 38859.36m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2854.0,
                        WidthMM = 1822.0,
                        CarModelID = MercedesBenzE200K.ID,
                        CarModel = MercedesBenzE200K,
                        Title = "MercedesBenz E200K 171",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 3720.0,
                        ManufactureYear = 2006,
                        Mileage = 125000.0,
                        PeakPowerHP = 87.0,
                        PeakTorqueNM = 116.0,
                        PredictedPrice = 17740.72m,
                        PricePerMonth = 1233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 172",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 30999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1660.0,
                        LengthMM = 4801.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 203.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 72296.73m,
                        PricePerMonth = 2583.25m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1884.0,
                        CarModelID = FordSMax.ID,
                        CarModel = FordSMax,
                        Title = "Ford SMax 173",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 108888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1713.0,
                        LengthMM = 4644.0,
                        ManufactureYear = 2015,
                        Mileage = 60000.0,
                        PeakPowerHP = 249.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 140442.0m,
                        PricePerMonth = 9074.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2774.0,
                        WidthMM = 1891.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 174",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 35545.35m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 175",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 62800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2010,
                        Mileage = 105000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 50389.42m,
                        PricePerMonth = 5233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaStream.ID,
                        CarModel = HondaStream,
                        Title = "Honda Stream 176",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 83800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4590.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 77249.23m,
                        PricePerMonth = 6983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 177",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 19888.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1388.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2011,
                        Mileage = 115000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 128.0,
                        PredictedPrice = 18730.95m,
                        PricePerMonth = 1657.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 178",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4420.0,
                        ManufactureYear = 2010,
                        Mileage = 110000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 30212.58m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1690.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 179",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1755.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2007,
                        Mileage = 105000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 36966.87m,
                        PricePerMonth = 2291.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1770.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 180",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 98800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1890.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 100309.61m,
                        PricePerMonth = 8233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1830.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 181",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3945.0,
                        ManufactureYear = 2019,
                        Mileage = 35000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 36165.4m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 182",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 76800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4705.0,
                        ManufactureYear = 2014,
                        Mileage = 95000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 241.0,
                        PredictedPrice = 83977.0m,
                        PricePerMonth = 6400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 183",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 58500.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1395.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1452.0,
                        LengthMM = 4255.0,
                        ManufactureYear = 2013,
                        Mileage = 105000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 63644.38m,
                        PricePerMonth = 4875.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2637.0,
                        WidthMM = 1799.0,
                        CarModelID = VolkswagenGolf.ID,
                        CarModel = VolkswagenGolf,
                        Title = "Volkswagen Golf 184",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14500.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1434.0,
                        LengthMM = 3898.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 20201.77m,
                        PricePerMonth = 1208.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1745.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 185",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 147800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2014,
                        Mileage = 95000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 141613.74m,
                        PricePerMonth = 12316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1965.0,
                        CarModelID = LandRoverRangeRoverEvoque.ID,
                        CarModel = LandRoverRangeRoverEvoque,
                        Title = "LandRover RangeRoverEvoque 186",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 53800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5359.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 375.0,
                        PredictedPrice = 58845.44m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1850.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 187",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 69359.06m,
                        PricePerMonth = 5566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 188",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1426.0,
                        LengthMM = 4532.0,
                        ManufactureYear = 2006,
                        Mileage = 125000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 30607.82m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2715.0,
                        WidthMM = 1728.0,
                        CarModelID = MercedesBenzC230.ID,
                        CarModel = MercedesBenzC230,
                        Title = "MercedesBenz C230 189",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 139000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3456.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2014,
                        Mileage = 120000.0,
                        PeakPowerHP = 317.0,
                        PeakTorqueNM = 378.0,
                        PredictedPrice = 133654.45m,
                        PricePerMonth = 11583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1840.0,
                        CarModelID = LexusGs350.ID,
                        CarModel = LexusGs350,
                        Title = "Lexus Gs350 190",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 89900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 4608.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 5151.0,
                        ManufactureYear = 2007,
                        Mileage = 80000.0,
                        PeakPowerHP = 381.0,
                        PeakTorqueNM = 493.0,
                        PredictedPrice = 144557.19m,
                        PricePerMonth = 7491.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3091.0,
                        WidthMM = 1875.0,
                        CarModelID = LexusLs460L.ID,
                        CarModel = LexusLs460L,
                        Title = "Lexus Ls460L 191",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 55808.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1450.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2013,
                        Mileage = 70000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 59334.15m,
                        PricePerMonth = 4650.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2830.0,
                        WidthMM = 1840.0,
                        CarModelID = Mazda6.ID,
                        CarModel = Mazda6,
                        Title = "Mazda 6 192",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 22800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4610.0,
                        ManufactureYear = 2011,
                        Mileage = 75000.0,
                        PeakPowerHP = 133.0,
                        PeakTorqueNM = 191.0,
                        PredictedPrice = 31021.37m,
                        PricePerMonth = 1900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanSylphy.ID,
                        CarModel = NissanSylphy,
                        Title = "Nissan Sylphy 193",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2359.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1680.0,
                        LengthMM = 4690.0,
                        ManufactureYear = 2015,
                        Mileage = 82560.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 227.0,
                        PredictedPrice = 73641.19m,
                        PricePerMonth = 5566.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1880.0,
                        CarModelID = HyundaiSantaFe.ID,
                        CarModel = HyundaiSantaFe,
                        Title = "Hyundai SantaFe 194",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 142000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2016,
                        Mileage = 25000.0,
                        PeakPowerHP = 158.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 159097.87m,
                        PricePerMonth = 11833.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC180.ID,
                        CarModel = MercedesBenzC180,
                        Title = "MercedesBenz C180 195",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1468.0,
                        LengthMM = 4841.0,
                        ManufactureYear = 2006,
                        Mileage = 175000.0,
                        PeakPowerHP = 177.0,
                        PeakTorqueNM = 230.0,
                        PredictedPrice = 42753.55m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2888.0,
                        WidthMM = 1846.0,
                        CarModelID = Bmw523I.ID,
                        CarModel = Bmw523I,
                        Title = "Bmw 523I 196",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Maroon",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4495.0,
                        ManufactureYear = 1997,
                        Mileage = 205000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 20215.85m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2535.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanSentra.ID,
                        CarModel = NissanSentra,
                        Title = "Nissan Sentra 197",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1199.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1556.0,
                        LengthMM = 4159.0,
                        ManufactureYear = 2018,
                        Mileage = 40000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 54815.86m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1739.0,
                        CarModelID = Peugeot2008.ID,
                        CarModel = Peugeot2008,
                        Title = "Peugeot 2008 198",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2017,
                        Mileage = 105000.0,
                        PeakPowerHP = 68.0,
                        PeakTorqueNM = 91.0,
                        PredictedPrice = 25796.71m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 199",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 78800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1925.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2016,
                        Mileage = 70000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 392.0,
                        PredictedPrice = 78658.59m,
                        PricePerMonth = 6566.67m,
                        SeatCapacity = 11,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1920.0,
                        CarModelID = HyundaiGrandStarex.ID,
                        CarModel = HyundaiGrandStarex,
                        Title = "Hyundai GrandStarex 200",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 29800.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1462.0,
                        LengthMM = 3970.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 175.0,
                        PredictedPrice = 38668.97m,
                        PricePerMonth = 2483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2470.0,
                        WidthMM = 1682.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 201",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 64800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 63896.63m,
                        PricePerMonth = 5400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 202",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 33800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1490.0,
                        LengthMM = 4480.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 33857.96m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1745.0,
                        CarModelID = ToyotaPrius.ID,
                        CarModel = ToyotaPrius,
                        Title = "Toyota Prius 203",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 44800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4485.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 36602.42m,
                        PricePerMonth = 3733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1700.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 204",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4310.0,
                        ManufactureYear = 2010,
                        Mileage = 170000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 17253.96m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1725.0,
                        CarModelID = ProtonGen2.ID,
                        CarModel = ProtonGen2,
                        Title = "Proton Gen2 205",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4220.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 40991.75m,
                        PricePerMonth = 4166.58m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 206",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 111700.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1462.0,
                        LengthMM = 4907.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 380.0,
                        PredictedPrice = 107356.9m,
                        PricePerMonth = 9308.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw520D.ID,
                        CarModel = Bmw520D,
                        Title = "Bmw 520D 207",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 76800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4624.0,
                        ManufactureYear = 2015,
                        Mileage = 85000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 94630.47m,
                        PricePerMonth = 6400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw316I.ID,
                        CarModel = Bmw316I,
                        Title = "Bmw 316I 208",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 64800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4870.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 67002.44m,
                        PricePerMonth = 5400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1850.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 209",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1760.0,
                        LengthMM = 4585.0,
                        ManufactureYear = 2014,
                        Mileage = 115000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 43344.53m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 210",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 112800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1986.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4720.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 193.0,
                        PredictedPrice = 115996.43m,
                        PricePerMonth = 9400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 211",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1570.0,
                        LengthMM = 3685.0,
                        ManufactureYear = 2016,
                        Mileage = 50000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 35544.59m,
                        PricePerMonth = 2916.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 212",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 37047.61m,
                        PricePerMonth = 3574.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 213",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2011,
                        Mileage = 125000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 177.0,
                        PredictedPrice = 28647.3m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 214",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 429999.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2996.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1496.0,
                        LengthMM = 5271.0,
                        ManufactureYear = 2018,
                        Mileage = 55000.0,
                        PeakPowerHP = 367.0,
                        PeakTorqueNM = 500.0,
                        PredictedPrice = 312614.3m,
                        PricePerMonth = 35833.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3165.0,
                        WidthMM = 1905.0,
                        CarModelID = MercedesBenzS450L.ID,
                        CarModel = MercedesBenzS450L,
                        Title = "MercedesBenz S450L 215",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 255000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2996.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1496.0,
                        LengthMM = 5246.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 337.0,
                        PeakTorqueNM = 480.0,
                        PredictedPrice = 241625.33m,
                        PricePerMonth = 21250.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3165.0,
                        WidthMM = 1899.0,
                        CarModelID = MercedesBenzS400L.ID,
                        CarModel = MercedesBenzS400L,
                        Title = "MercedesBenz S400L 216",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 26143.68m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 217",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 63800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 62327.84m,
                        PricePerMonth = 5316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 218",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2012,
                        Mileage = 75000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 32945.05m,
                        PricePerMonth = 2583.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 219",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 26136.8m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 220",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 27800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1466.0,
                        LengthMM = 4534.0,
                        ManufactureYear = 2013,
                        Mileage = 100000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 202.0,
                        PredictedPrice = 38349.34m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2648.0,
                        WidthMM = 1824.0,
                        CarModelID = FordFocus.ID,
                        CarModel = FordFocus,
                        Title = "Ford Focus 221",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1088.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 3495.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 64.0,
                        PeakTorqueNM = 96.0,
                        PredictedPrice = 17037.82m,
                        PricePerMonth = 816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2370.0,
                        WidthMM = 1595.0,
                        CarModelID = KiaPicanto.ID,
                        CarModel = KiaPicanto,
                        Title = "Kia Picanto 222",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 130800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1474.0,
                        LengthMM = 4879.0,
                        ManufactureYear = 2014,
                        Mileage = 61000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 115872.24m,
                        PricePerMonth = 10900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE200.ID,
                        CarModel = MercedesBenzE200,
                        Title = "MercedesBenz E200 223",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 57800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1935.0,
                        LengthMM = 4840.0,
                        ManufactureYear = 2007,
                        Mileage = 155000.0,
                        PeakPowerHP = 159.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 53781.76m,
                        PricePerMonth = 4816.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1805.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 224",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4230.0,
                        ManufactureYear = 2015,
                        Mileage = 140000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 34966.8m,
                        PricePerMonth = 3074.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 225",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2359.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1760.0,
                        LengthMM = 4660.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 174.0,
                        PeakTorqueNM = 228.0,
                        PredictedPrice = 59530.23m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1890.0,
                        CarModelID = HyundaiSantaFe.ID,
                        CarModel = HyundaiSantaFe,
                        Title = "Hyundai SantaFe 226",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 47999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 53831.75m,
                        PricePerMonth = 3999.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 227",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39700.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 4765.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 43759.88m,
                        PricePerMonth = 3308.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2830.0,
                        WidthMM = 1800.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 228",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25183.88m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 229",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 80000.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 3729.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 84932.8m,
                        PricePerMonth = 6666.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1683.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 230",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 22999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 60000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 26523.72m,
                        PricePerMonth = 1916.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 231",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 34106.32m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2613.0,
                        WidthMM = 1837.0,
                        CarModelID = Peugeot3008.ID,
                        CarModel = Peugeot3008,
                        Title = "Peugeot 3008 232",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 199800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4725.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 231.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 194215.28m,
                        PricePerMonth = 16650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 233",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 218800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4709.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 191066.9m,
                        PricePerMonth = 18233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2851.0,
                        WidthMM = 1827.0,
                        CarModelID = Bmw320I.ID,
                        CarModel = Bmw320I,
                        Title = "Bmw 320I 234",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 169800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1462.0,
                        LengthMM = 4907.0,
                        ManufactureYear = 2016,
                        Mileage = 110000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 169378.63m,
                        PricePerMonth = 14150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw528I.ID,
                        CarModel = Bmw528I,
                        Title = "Bmw 528I 235",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1485.0,
                        LengthMM = 4618.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 195.0,
                        PredictedPrice = 32159.8m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2702.0,
                        WidthMM = 1813.0,
                        CarModelID = RenaultFluence.ID,
                        CarModel = RenaultFluence,
                        Title = "Renault Fluence 236",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Pink",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1248.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1540.0,
                        LengthMM = 3565.0,
                        ManufactureYear = 2014,
                        Mileage = 30000.0,
                        PeakPowerHP = 87.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 18389.1m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2380.0,
                        WidthMM = 1595.0,
                        CarModelID = HyundaiI10.ID,
                        CarModel = HyundaiI10,
                        Title = "Hyundai I10 237",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 199000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1724.0,
                        LengthMM = 4599.0,
                        ManufactureYear = 2015,
                        Mileage = 25000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 183668.55m,
                        PricePerMonth = 16583.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2741.0,
                        WidthMM = 2069.0,
                        CarModelID = LandRoverDiscoverySport.ID,
                        CarModel = LandRoverDiscoverySport,
                        Title = "LandRover DiscoverySport 238",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 175000.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2457.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.LeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4595.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 300.0,
                        PeakTorqueNM = 407.0,
                        PredictedPrice = 144938.65m,
                        PricePerMonth = 14583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruWrxSti.ID,
                        CarModel = SubaruWrxSti,
                        Title = "Subaru WrxSti 239",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24900.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1434.0,
                        LengthMM = 3898.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 22141.24m,
                        PricePerMonth = 2075.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1745.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 240",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1477.0,
                        LengthMM = 4440.0,
                        ManufactureYear = 2016,
                        Mileage = 55000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 53632.44m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 241",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 73800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1486.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 175.0,
                        PredictedPrice = 64610.4m,
                        PricePerMonth = 6150.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2537.0,
                        WidthMM = 1808.0,
                        CarModelID = VolkswagenBeetle.ID,
                        CarModel = VolkswagenBeetle,
                        Title = "Volkswagen Beetle 242",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 136800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1986.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4720.0,
                        ManufactureYear = 2015,
                        Mileage = 135000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 193.0,
                        PredictedPrice = 109908.45m,
                        PricePerMonth = 11400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 243",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 31800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 33750.74m,
                        PricePerMonth = 2650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 244",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66300.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4370.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 213.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 75330.92m,
                        PricePerMonth = 5525.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2646.0,
                        WidthMM = 1802.0,
                        CarModelID = VolvoV40CrossCountry.ID,
                        CarModel = VolvoV40CrossCountry,
                        Title = "Volvo V40CrossCountry 245",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 3905.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 16652.9m,
                        PricePerMonth = 1400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1710.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 246",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 352500.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1776.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2019,
                        Mileage = 5000.0,
                        PeakPowerHP = 320.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 292269.7m,
                        PricePerMonth = 29375.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2984.0,
                        WidthMM = 1958.0,
                        CarModelID = VolvoXc90.ID,
                        CarModel = VolvoXc90,
                        Title = "Volvo Xc90 247",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 40999.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1199.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 3965.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 52824.5m,
                        PricePerMonth = 3416.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1739.0,
                        CarModelID = Peugeot208.ID,
                        CarModel = Peugeot208,
                        Title = "Peugeot 208 248",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 89800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1462.0,
                        LengthMM = 4907.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 101309.64m,
                        PricePerMonth = 7483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw520I.ID,
                        CarModel = Bmw520I,
                        Title = "Bmw 520I 249",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 59800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2979.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1479.0,
                        LengthMM = 5072.0,
                        ManufactureYear = 2009,
                        Mileage = 90000.0,
                        PeakPowerHP = 326.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 179223.73m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3070.0,
                        WidthMM = 1902.0,
                        CarModelID = Bmw740I.ID,
                        CarModel = Bmw740I,
                        Title = "Bmw 740I 250",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 50800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2953.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1713.0,
                        LengthMM = 4628.0,
                        ManufactureYear = 2009,
                        Mileage = 92500.0,
                        PeakPowerHP = 286.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 50927.0m,
                        PricePerMonth = 4233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2774.0,
                        WidthMM = 1891.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 251",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 208800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 3605.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1418.0,
                        LengthMM = 4970.0,
                        ManufactureYear = 2012,
                        Mileage = 75000.0,
                        PeakPowerHP = 299.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 194753.3m,
                        PricePerMonth = 17400.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2920.0,
                        WidthMM = 1931.0,
                        CarModelID = PorschePanamera.ID,
                        CarModel = PorschePanamera,
                        Title = "Porsche Panamera 252",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 77888.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4595.0,
                        ManufactureYear = 2017,
                        Mileage = 95000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 70490.48m,
                        PricePerMonth = 6490.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruForester.ID,
                        CarModel = SubaruForester,
                        Title = "Subaru Forester 253",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 39800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1493.0,
                        LengthMM = 4851.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 320.0,
                        PredictedPrice = 69127.74m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2835.0,
                        WidthMM = 1861.0,
                        CarModelID = VolvoS80.ID,
                        CarModel = VolvoS80,
                        Title = "Volvo S80 254",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 76000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4145.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 65167.38m,
                        PricePerMonth = 6333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaYaris.ID,
                        CarModel = ToyotaYaris,
                        Title = "Toyota Yaris 255",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 29999.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2967.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4875.0,
                        ManufactureYear = 1999,
                        Mileage = 125000.0,
                        PeakPowerHP = 324.0,
                        PeakTorqueNM = 293.0,
                        PredictedPrice = 60769.14m,
                        PricePerMonth = 2499.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2910.0,
                        WidthMM = 1820.0,
                        CarModelID = JaguarSType.ID,
                        CarModel = JaguarSType,
                        Title = "Jaguar SType 256",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 119800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 4240.0,
                        ManufactureYear = 2014,
                        Mileage = 50000.0,
                        PeakPowerHP = 200.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 96534.92m,
                        PricePerMonth = 9983.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1775.0,
                        CarModelID = SubaruBrz.ID,
                        CarModel = SubaruBrz,
                        Title = "Subaru Brz 257",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 69899.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 66700.41m,
                        PricePerMonth = 5824.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 258",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 52000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2010,
                        Mileage = 135000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 47382.65m,
                        PricePerMonth = 4333.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaStream.ID,
                        CarModel = HondaStream,
                        Title = "Honda Stream 259",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1430.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 44821.17m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1765.0,
                        CarModelID = LexusCt200H.ID,
                        CarModel = LexusCt200H,
                        Title = "Lexus Ct200H 260",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2008,
                        Mileage = 135000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 42197.06m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaStream.ID,
                        CarModel = HondaStream,
                        Title = "Honda Stream 261",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 168888.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2014,
                        Mileage = 110000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 141175.32m,
                        PricePerMonth = 14074.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC250.ID,
                        CarModel = MercedesBenzC250,
                        Title = "MercedesBenz C250 262",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 53800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4769.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 62138.88m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2712.0,
                        WidthMM = 1820.0,
                        CarModelID = VolkswagenPassat.ID,
                        CarModel = VolkswagenPassat,
                        Title = "Volkswagen Passat 263",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 6900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4310.0,
                        ManufactureYear = 2005,
                        Mileage = 85000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 18674.47m,
                        PricePerMonth = 575.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1725.0,
                        CarModelID = ProtonGen2.ID,
                        CarModel = ProtonGen2,
                        Title = "Proton Gen2 264",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 40627.65m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 265",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2011,
                        Mileage = 100000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 40669.42m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1795.0,
                        CarModelID = NissanTeana.ID,
                        CarModel = NissanTeana,
                        Title = "Nissan Teana 266",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 52000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1566.0,
                        LengthMM = 4122.0,
                        ManufactureYear = 2018,
                        Mileage = 5000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 74643.6m,
                        PricePerMonth = 4333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2606.0,
                        WidthMM = 1778.0,
                        CarModelID = RenaultCaptur.ID,
                        CarModel = RenaultCaptur,
                        Title = "Renault Captur 267",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4540.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 41404.24m,
                        PricePerMonth = 3325.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 268",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 40800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1655.0,
                        LengthMM = 5220.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 51996.67m,
                        PricePerMonth = 3400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1750.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 269",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1447.0,
                        LengthMM = 4676.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 22838.39m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2725.0,
                        WidthMM = 1811.0,
                        CarModelID = Peugeot407.ID,
                        CarModel = Peugeot407,
                        Title = "Peugeot 407 270",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 213000.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1414.0,
                        LengthMM = 3850.0,
                        ManufactureYear = 2019,
                        Mileage = 10000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 175388.38m,
                        PricePerMonth = 17750.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2495.0,
                        WidthMM = 1727.0,
                        CarModelID = Mini3Door.ID,
                        CarModel = Mini3Door,
                        Title = "Mini 3Door 271",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 53800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4075.0,
                        ManufactureYear = 2013,
                        Mileage = 105000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 48008.3m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 272",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 332800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1621.0,
                        LengthMM = 4752.0,
                        ManufactureYear = 2020,
                        Mileage = 20000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 265470.16m,
                        PricePerMonth = 27733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2864.0,
                        WidthMM = 1918.0,
                        CarModelID = BmwX4.ID,
                        CarModel = BmwX4,
                        Title = "Bmw X4 273",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4230.0,
                        ManufactureYear = 2016,
                        Mileage = 85000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 38268.51m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 274",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 218000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1468.0,
                        LengthMM = 2939.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 210625.28m,
                        PricePerMonth = 18166.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 4923.0,
                        WidthMM = 1852.0,
                        CarModelID = MercedesBenzE350E.ID,
                        CarModel = MercedesBenzE350E,
                        Title = "MercedesBenz E350E 275",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 63800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1464.0,
                        LengthMM = 4899.0,
                        ManufactureYear = 2010,
                        Mileage = 190000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 69044.78m,
                        PricePerMonth = 5316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw523I.ID,
                        CarModel = Bmw523I,
                        Title = "Bmw 523I 276",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1502.0,
                        LengthMM = 4257.0,
                        ManufactureYear = 2008,
                        Mileage = 220000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 15078.09m,
                        PricePerMonth = 824.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 277",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1373.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4265.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 92.0,
                        PeakTorqueNM = 130.0,
                        PredictedPrice = 38173.45m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = ProtonErtiga.ID,
                        CarModel = ProtonErtiga,
                        Title = "Proton Ertiga 278",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 57800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4525.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 52112.74m,
                        PricePerMonth = 4816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1755.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 279",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 148800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1441.0,
                        LengthMM = 4253.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 194.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 170584.92m,
                        PricePerMonth = 12400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1800.0,
                        CarModelID = MiniClubman.ID,
                        CarModel = MiniClubman,
                        Title = "Mini Clubman 280",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 46888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 54335.84m,
                        PricePerMonth = 3907.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 281",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 18800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1535.0,
                        LengthMM = 4205.0,
                        ManufactureYear = 2007,
                        Mileage = 125000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 153.0,
                        PredictedPrice = 26982.64m,
                        PricePerMonth = 1566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanLatio.ID,
                        CarModel = NissanLatio,
                        Title = "Nissan Latio 282",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 72888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4870.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 68056.6m,
                        PricePerMonth = 6074.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1850.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 283",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1520.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 16499.77m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 284",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 29888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2012,
                        Mileage = 105000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 35682.59m,
                        PricePerMonth = 2490.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1600.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 285",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 847.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 53.0,
                        PeakTorqueNM = 76.0,
                        PredictedPrice = 11567.87m,
                        PricePerMonth = 750.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 286",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2521.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1576.8166666666666,
                        LengthMM = 4650.445833333333,
                        ManufactureYear = 1997,
                        Mileage = 205000.0,
                        PeakPowerHP = 236.6375,
                        PeakTorqueNM = 329.3333333333333,
                        PredictedPrice = 26241.02m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2760.89029535865,
                        WidthMM = 1859.5125,
                        CarModelID = VolvoS70.ID,
                        CarModel = VolvoS70,
                        Title = "Volvo S70 287",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 41500.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2008,
                        Mileage = 185000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 40839.16m,
                        PricePerMonth = 3458.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaStream.ID,
                        CarModel = HondaStream,
                        Title = "Honda Stream 288",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4205.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 32145.25m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 289",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 21800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1525.0,
                        LengthMM = 4682.0,
                        ManufactureYear = 2013,
                        Mileage = 100000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 29396.6m,
                        PricePerMonth = 1816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2710.0,
                        WidthMM = 1815.0,
                        CarModelID = Peugeot408.ID,
                        CarModel = Peugeot408,
                        Title = "Peugeot 408 290",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 105000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 24738.03m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 291",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 57800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 5020.0,
                        ManufactureYear = 2016,
                        Mileage = 85000.0,
                        PeakPowerHP = 181.0,
                        PeakTorqueNM = 222.0,
                        PredictedPrice = 63408.62m,
                        PricePerMonth = 4816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 292",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 268888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1443.0,
                        LengthMM = 4963.0,
                        ManufactureYear = 2019,
                        Mileage = 15000.0,
                        PeakPowerHP = 325.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 271653.42m,
                        PricePerMonth = 22407.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2941.0,
                        WidthMM = 1879.0,
                        CarModelID = VolvoS90.ID,
                        CarModel = VolvoS90,
                        Title = "Volvo S90 293",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 18900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1590.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1389.0,
                        LengthMM = 4448.0,
                        ManufactureYear = 1999,
                        Mileage = 200000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 144.0,
                        PredictedPrice = 31238.2m,
                        PricePerMonth = 1575.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2621.0,
                        WidthMM = 1704.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 294",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5280.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 178.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 69109.92m,
                        PricePerMonth = 5740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1815.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 295",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 48800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1855.0,
                        LengthMM = 4400.0,
                        ManufactureYear = 2016,
                        Mileage = 135000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 47641.15m,
                        PricePerMonth = 4066.67m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2725.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanNv200.ID,
                        CarModel = NissanNv200,
                        Title = "Nissan Nv200 296",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1795.0,
                        LengthMM = 5100.0,
                        ManufactureYear = 2007,
                        Mileage = 125000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 314.0,
                        PredictedPrice = 44419.84m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 297",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25988.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2018,
                        Mileage = 15000.0,
                        PeakPowerHP = 68.0,
                        PeakTorqueNM = 91.0,
                        PredictedPrice = 27195.59m,
                        PricePerMonth = 2165.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 298",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 20800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2008,
                        Mileage = 135000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 25270.96m,
                        PricePerMonth = 1733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 299",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 47360.66m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 300",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 56800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1495.0,
                        LengthMM = 4060.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 56586.61m,
                        PricePerMonth = 4733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1695.0,
                        CarModelID = Mazda2.ID,
                        CarModel = Mazda2,
                        Title = "Mazda 2 301",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43870.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4215.0,
                        ManufactureYear = 2010,
                        Mileage = 100000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 39970.07m,
                        PricePerMonth = 3655.83m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1700.0,
                        CarModelID = HondaFreed.ID,
                        CarModel = HondaFreed,
                        Title = "Honda Freed 302",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 218000.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1557.0,
                        LengthMM = 4299.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 306.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 215571.45m,
                        PricePerMonth = 18166.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1822.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 303",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 26588.2m,
                        PricePerMonth = 1958.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 304",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 15800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2000,
                        Mileage = 115000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 53901.15m,
                        PricePerMonth = 1316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC200.ID,
                        CarModel = MercedesBenzC200,
                        Title = "MercedesBenz C200 305",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 94999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 102220.49m,
                        PricePerMonth = 7916.58m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 306",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 59800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2018,
                        Mileage = 110000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 51900.04m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 307",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2016,
                        Mileage = 70000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 37279.33m,
                        PricePerMonth = 2908.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 308",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 68.0,
                        PeakTorqueNM = 91.0,
                        PredictedPrice = 27470.7m,
                        PricePerMonth = 2158.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 309",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 575000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 2981.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1295.0,
                        LengthMM = 4499.0,
                        ManufactureYear = 2016,
                        Mileage = 30000.0,
                        PeakPowerHP = 420.0,
                        PeakTorqueNM = 500.0,
                        PredictedPrice = 409823.08m,
                        PricePerMonth = 47916.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2450.0,
                        WidthMM = 1808.0,
                        CarModelID = Porsche911.ID,
                        CarModel = Porsche911,
                        Title = "Porsche 911 310",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 43988.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 4387.0,
                        ManufactureYear = 2019,
                        Mileage = 20000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 36548.04m,
                        PricePerMonth = 3665.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 311",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 11800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4601.090693538827,
                        ManufactureYear = 1999,
                        Mileage = 215000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 181.0,
                        PredictedPrice = 17026.53m,
                        PricePerMonth = 983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2735.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaNadia.ID,
                        CarModel = ToyotaNadia,
                        Title = "Toyota Nadia 312",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 128000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 118573.34m,
                        PricePerMonth = 10666.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1965.0,
                        CarModelID = LandRoverRangeRoverEvoque.ID,
                        CarModel = LandRoverRangeRoverEvoque,
                        Title = "LandRover RangeRoverEvoque 313",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3690.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 91.0,
                        PeakTorqueNM = 117.0,
                        PredictedPrice = 23239.78m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 314",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 45800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1417.0,
                        LengthMM = 4799.0,
                        ManufactureYear = 2010,
                        Mileage = 105000.0,
                        PeakPowerHP = 200.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 52394.69m,
                        PricePerMonth = 3816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2708.0,
                        WidthMM = 1855.0,
                        CarModelID = VolkswagenPassat.ID,
                        CarModel = VolkswagenPassat,
                        Title = "Volkswagen Passat 315",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1520.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2012,
                        Mileage = 65000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 17623.54m,
                        PricePerMonth = 1241.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 316",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1660.0,
                        LengthMM = 3460.0,
                        ManufactureYear = 2009,
                        Mileage = 75000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 13414.61m,
                        PricePerMonth = 1233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1500.0,
                        CarModelID = PeroduaKenari.ID,
                        CarModel = PeroduaKenari,
                        Title = "Perodua Kenari 317",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2015,
                        Mileage = 85000.0,
                        PeakPowerHP = 67.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 23333.58m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 318",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2972.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1800.0,
                        LengthMM = 4995.0,
                        ManufactureYear = 2002,
                        Mileage = 205000.0,
                        PeakPowerHP = 246.0,
                        PeakTorqueNM = 255.0,
                        PredictedPrice = 23833.27m,
                        PricePerMonth = 1400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2960.0,
                        WidthMM = 1775.0,
                        CarModelID = MitsubishiStorm.ID,
                        CarModel = MitsubishiStorm,
                        Title = "Mitsubishi Storm 319",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 41800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1779.0,
                        LengthMM = 5295.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 314.0,
                        PredictedPrice = 44459.8m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 320",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 45800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2017,
                        Mileage = 65000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 39779.46m,
                        PricePerMonth = 3816.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 321",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 84800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2019,
                        Mileage = 105000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 285.0,
                        PredictedPrice = 89879.27m,
                        PricePerMonth = 7066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 322",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 29800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4580.0,
                        ManufactureYear = 2011,
                        Mileage = 100000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 33595.99m,
                        PricePerMonth = 2483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1755.0,
                        CarModelID = Mazda3.ID,
                        CarModel = Mazda3,
                        Title = "Mazda 3 323",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2011,
                        Mileage = 120000.0,
                        PeakPowerHP = 124.0,
                        PeakTorqueNM = 156.0,
                        PredictedPrice = 28480.72m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1775.0,
                        CarModelID = KiaForte.ID,
                        CarModel = KiaForte,
                        Title = "Kia Forte 324",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 21800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1483.0,
                        LengthMM = 4263.0,
                        ManufactureYear = 2010,
                        Mileage = 105000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 135.0,
                        PredictedPrice = 25867.59m,
                        PricePerMonth = 1816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2490.0,
                        WidthMM = 1695.0,
                        CarModelID = Mazda2.ID,
                        CarModel = Mazda2,
                        Title = "Mazda 2 325",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 178800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2018,
                        Mileage = 65000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 186481.78m,
                        PricePerMonth = 14900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC350E.ID,
                        CarModel = MercedesBenzC350E,
                        Title = "MercedesBenz C350E 326",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 163700.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 177760.46m,
                        PricePerMonth = 13641.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC350E.ID,
                        CarModel = MercedesBenzC350E,
                        Title = "MercedesBenz C350E 327",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 51800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4075.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 48433.42m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 328",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 85800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4465.0,
                        ManufactureYear = 2018,
                        Mileage = 65000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 95325.71m,
                        PricePerMonth = 7150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2665.0,
                        WidthMM = 1800.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 329",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 6800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 847.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 37.0,
                        PeakTorqueNM = 63.0,
                        PredictedPrice = 6268.27m,
                        PricePerMonth = 566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 330",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 12888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 1997,
                        Mileage = 225000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 30563.5m,
                        PricePerMonth = 1074.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw318I.ID,
                        CarModel = Bmw318I,
                        Title = "Bmw 318I 331",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 225800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2016,
                        Mileage = 40000.0,
                        PeakPowerHP = 360.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 237714.3m,
                        PricePerMonth = 18816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA45Amg.ID,
                        CarModel = MercedesBenzA45Amg,
                        Title = "MercedesBenz A45Amg 332",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 215000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 3604.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1705.0,
                        LengthMM = 4855.0,
                        ManufactureYear = 2014,
                        Mileage = 105000.0,
                        PeakPowerHP = 420.0,
                        PeakTorqueNM = 550.0,
                        PredictedPrice = 273880.54m,
                        PricePerMonth = 17916.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2895.0,
                        WidthMM = 1939.0,
                        CarModelID = PorscheCayenne.ID,
                        CarModel = PorscheCayenne,
                        Title = "Porsche Cayenne 333",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4485.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 48223.63m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1700.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 334",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 88800.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1561.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2011,
                        Mileage = 45000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 95440.94m,
                        PricePerMonth = 7400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2595.0,
                        WidthMM = 1789.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 335",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 78800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2009,
                        Mileage = 85000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 223.0,
                        PredictedPrice = 81831.16m,
                        PricePerMonth = 6566.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 1950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 336",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 117800.0m,
                        Colour = "Maroon",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1565.0,
                        LengthMM = 4360.0,
                        ManufactureYear = 2018,
                        Mileage = 90000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 171.0,
                        PredictedPrice = 94248.41m,
                        PricePerMonth = 9816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1795.0,
                        CarModelID = ToyotaCHr.ID,
                        CarModel = ToyotaCHr,
                        Title = "Toyota CHr 337",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 56800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 54023.12m,
                        PricePerMonth = 4733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 338",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 195800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1762.0,
                        LengthMM = 4886.0,
                        ManufactureYear = 2017,
                        Mileage = 65000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 198525.2m,
                        PricePerMonth = 16316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2933.0,
                        WidthMM = 1938.0,
                        CarModelID = BmwX5.ID,
                        CarModel = BmwX5,
                        Title = "Bmw X5 339",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2017,
                        Mileage = 20000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34778.13m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 340",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 70800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4620.0,
                        ManufactureYear = 2015,
                        Mileage = 60000.0,
                        PeakPowerHP = 139.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 58751.25m,
                        PricePerMonth = 5900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1776.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 341",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 4800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 659.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 2005,
                        Mileage = 155000.0,
                        PeakPowerHP = 31.0,
                        PeakTorqueNM = 49.0,
                        PredictedPrice = 5976.62m,
                        PricePerMonth = 400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 342",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 39800.0m,
                        Colour = "Yellow",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4540.0,
                        ManufactureYear = 2007,
                        Mileage = 115000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 188.0,
                        PredictedPrice = 51435.65m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1750.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 343",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1430.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2004,
                        Mileage = 90000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 12493.3m,
                        PricePerMonth = 816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 344",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 15800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4070.0,
                        ManufactureYear = 2005,
                        Mileage = 175000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 19453.25m,
                        PricePerMonth = 1316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1630.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 345",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1640.0,
                        LengthMM = 3450.0,
                        ManufactureYear = 2009,
                        Mileage = 95000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 12297.87m,
                        PricePerMonth = 1166.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1480.0,
                        CarModelID = PeroduaKenari.ID,
                        CarModel = PeroduaKenari,
                        Title = "Perodua Kenari 346",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 71800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1715.0,
                        LengthMM = 4640.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 76836.59m,
                        PricePerMonth = 5983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2705.0,
                        WidthMM = 1820.0,
                        CarModelID = NissanXTrail.ID,
                        CarModel = NissanXTrail,
                        Title = "Nissan XTrail 347",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 36888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1762.0,
                        LengthMM = 5173.0,
                        ManufactureYear = 2010,
                        Mileage = 190000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 330.0,
                        PredictedPrice = 39668.59m,
                        PricePerMonth = 3074.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1788.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 348",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 40800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4215.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 40471.45m,
                        PricePerMonth = 3400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1700.0,
                        CarModelID = HondaFreed.ID,
                        CarModel = HondaFreed,
                        Title = "Honda Freed 349",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 148333.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2018,
                        Mileage = 80000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 134047.22m,
                        PricePerMonth = 12361.08m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw330E.ID,
                        CarModel = Bmw330E,
                        Title = "Bmw 330E 350",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 203800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2019,
                        Mileage = 30000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 154857.97m,
                        PricePerMonth = 16983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC200.ID,
                        CarModel = MercedesBenzC200,
                        Title = "MercedesBenz C200 351",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 31888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 182.0,
                        PeakTorqueNM = 228.0,
                        PredictedPrice = 47527.51m,
                        PricePerMonth = 2657.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1795.0,
                        CarModelID = NissanTeana.ID,
                        CarModel = NissanTeana,
                        Title = "Nissan Teana 352",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 49800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1417.0,
                        LengthMM = 4799.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 200.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 56515.27m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2708.0,
                        WidthMM = 1855.0,
                        CarModelID = VolkswagenPassat.ID,
                        CarModel = VolkswagenPassat,
                        Title = "Volkswagen Passat 353",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 53800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1477.0,
                        LengthMM = 4440.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 49671.15m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 354",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 129800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1474.0,
                        LengthMM = 4879.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 123920.55m,
                        PricePerMonth = 10816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE250.ID,
                        CarModel = MercedesBenzE250,
                        Title = "MercedesBenz E250 355",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 123333.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2016,
                        Mileage = 50000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 139760.73m,
                        PricePerMonth = 10277.75m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw320I.ID,
                        CarModel = Bmw320I,
                        Title = "Bmw 320I 356",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 36800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 35555.91m,
                        PricePerMonth = 3066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1600.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 357",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1680.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2010,
                        Mileage = 165000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 39392.76m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 358",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 29900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4730.0,
                        ManufactureYear = 2005,
                        Mileage = 160000.0,
                        PeakPowerHP = 215.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 38899.89m,
                        PricePerMonth = 2491.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaMarkX.ID,
                        CarModel = ToyotaMarkX,
                        Title = "Toyota MarkX 359",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 105800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1865.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2018,
                        Mileage = 50000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 86481.96m,
                        PricePerMonth = 8816.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2860.0,
                        WidthMM = 1735.0,
                        CarModelID = NissanSerena.ID,
                        CarModel = NissanSerena,
                        Title = "Nissan Serena 360",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 35393.7m,
                        PricePerMonth = 3066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 361",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 45800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 3955.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 49552.24m,
                        PricePerMonth = 3816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 362",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 53900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1668.0,
                        LengthMM = 3989.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 57604.04m,
                        PricePerMonth = 4491.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 363",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 48800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4540.0,
                        ManufactureYear = 2013,
                        Mileage = 125000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 38622.87m,
                        PricePerMonth = 4066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 364",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34988.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2017,
                        Mileage = 30000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34702.08m,
                        PricePerMonth = 2915.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 365",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 127800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2693.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4760.0,
                        ManufactureYear = 2012,
                        Mileage = 50000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 246.0,
                        PredictedPrice = 84822.53m,
                        PricePerMonth = 10650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2790.0,
                        WidthMM = 1885.0,
                        CarModelID = ToyotaLandCruiserPrado.ID,
                        CarModel = ToyotaLandCruiserPrado,
                        Title = "Toyota LandCruiserPrado 366",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 35999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1702.0,
                        LengthMM = 4524.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 179.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 55012.33m,
                        PricePerMonth = 2999.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2690.0,
                        WidthMM = 1838.0,
                        CarModelID = FordKuga.ID,
                        CarModel = FordKuga,
                        Title = "Ford Kuga 367",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 179800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2493.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1880.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2015,
                        Mileage = 55000.0,
                        PeakPowerHP = 182.0,
                        PeakTorqueNM = 235.0,
                        PredictedPrice = 169234.72m,
                        PricePerMonth = 14983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1850.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 368",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 35800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1794.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4550.0,
                        ManufactureYear = 2005,
                        Mileage = 150000.0,
                        PeakPowerHP = 179.0,
                        PeakTorqueNM = 170.0,
                        PredictedPrice = 43504.32m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 369",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1655.0,
                        LengthMM = 5220.0,
                        ManufactureYear = 2013,
                        Mileage = 110000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 43778.53m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1750.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 370",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 65800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 65536.46m,
                        PricePerMonth = 5483.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 371",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 36500.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1655.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 36974.32m,
                        PricePerMonth = 3041.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1820.0,
                        CarModelID = HyundaiTucson.ID,
                        CarModel = HyundaiTucson,
                        Title = "Hyundai Tucson 372",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 27900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1425.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 26055.39m,
                        PricePerMonth = 2325.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 373",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 35477.46m,
                        PricePerMonth = 3075.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 374",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24800.0m,
                        Colour = "Maroon",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1951.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1767.0,
                        LengthMM = 4382.0,
                        ManufactureYear = 2006,
                        Mileage = 250000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 66866.71m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2557.0,
                        WidthMM = 1776.0,
                        CarModelID = LandRoverFreelander.ID,
                        CarModel = LandRoverFreelander,
                        Title = "LandRover Freelander 375",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2015,
                        Mileage = 55000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 28746.26m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 376",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 288000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 2402.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 2286.0,
                        LengthMM = 4369.0,
                        ManufactureYear = 2008,
                        Mileage = 105000.0,
                        PeakPowerHP = 121.0,
                        PeakTorqueNM = 360.0,
                        PredictedPrice = 131097.44m,
                        PricePerMonth = 24000.0m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.WormAndRoller],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2794.0,
                        WidthMM = 1790.0,
                        CarModelID = LandRoverDefender.ID,
                        CarModel = LandRoverDefender,
                        Title = "LandRover Defender 377",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 41300.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4585.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 180.0,
                        PredictedPrice = 40651.13m,
                        PricePerMonth = 3441.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1750.0,
                        CarModelID = Mazda5.ID,
                        CarModel = Mazda5,
                        Title = "Mazda 5 378",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 27800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1468.0,
                        LengthMM = 4841.0,
                        ManufactureYear = 2004,
                        Mileage = 95000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 58629.1m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2888.0,
                        WidthMM = 1846.0,
                        CarModelID = Bmw525I.ID,
                        CarModel = Bmw525I,
                        Title = "Bmw 525I 379",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26500.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1760.0,
                        LengthMM = 5128.0,
                        ManufactureYear = 2006,
                        Mileage = 235000.0,
                        PeakPowerHP = 121.0,
                        PeakTorqueNM = 262.0,
                        PredictedPrice = 40896.84m,
                        PricePerMonth = 2208.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1810.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 380",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 63896.63m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 381",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5230.0,
                        ManufactureYear = 2015,
                        Mileage = 125000.0,
                        PeakPowerHP = 174.0,
                        PeakTorqueNM = 403.0,
                        PredictedPrice = 62955.68m,
                        PricePerMonth = 5741.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1850.0,
                        CarModelID = NissanNavara.ID,
                        CarModel = NissanNavara,
                        Title = "Nissan Navara 382",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 22888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2007,
                        Mileage = 95000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 186.0,
                        PredictedPrice = 41064.87m,
                        PricePerMonth = 1907.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 383",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 119900.0m,
                        Colour = "Yellow",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 3386.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1305.0,
                        LengthMM = 4341.0,
                        ManufactureYear = 2006,
                        Mileage = 42000.0,
                        PeakPowerHP = 295.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 186539.79m,
                        PricePerMonth = 9991.67m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2415.0,
                        WidthMM = 1801.0,
                        CarModelID = PorscheCayman.ID,
                        CarModel = PorscheCayman,
                        Title = "Porsche Cayman 384",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 148800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1494.0,
                        LengthMM = 4417.0,
                        ManufactureYear = 2016,
                        Mileage = 50000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 141835.25m,
                        PricePerMonth = 12400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1804.0,
                        CarModelID = MercedesBenzGla200.ID,
                        CarModel = MercedesBenzGla200,
                        Title = "MercedesBenz Gla200 385",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 31000.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 31754.68m,
                        PricePerMonth = 2583.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 386",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 124.0,
                        PeakTorqueNM = 156.0,
                        PredictedPrice = 32190.6m,
                        PricePerMonth = 1991.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1775.0,
                        CarModelID = KiaForte.ID,
                        CarModel = KiaForte,
                        Title = "Kia Forte 387",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 29880.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1975.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1680.0,
                        LengthMM = 4325.0,
                        ManufactureYear = 2010,
                        Mileage = 75000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 36678.18m,
                        PricePerMonth = 2490.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2630.0,
                        WidthMM = 1795.0,
                        CarModelID = HyundaiTucson.ID,
                        CarModel = HyundaiTucson,
                        Title = "Hyundai Tucson 388",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 106800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2393.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5330.0,
                        ManufactureYear = 2018,
                        Mileage = 90000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 95909.43m,
                        PricePerMonth = 8900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1855.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 389",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 59333.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4580.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 40708.98m,
                        PricePerMonth = 4944.42m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1755.0,
                        CarModelID = Mazda3.ID,
                        CarModel = Mazda3,
                        Title = "Mazda 3 390",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 45800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4215.0,
                        ManufactureYear = 2011,
                        Mileage = 140000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 41012.81m,
                        PricePerMonth = 3816.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1700.0,
                        CarModelID = HondaFreed.ID,
                        CarModel = HondaFreed,
                        Title = "Honda Freed 391",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39888.0m,
                        Colour = "Beige",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 3655.0,
                        ManufactureYear = 2005,
                        Mileage = 150000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 51170.7m,
                        PricePerMonth = 3324.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1925.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 392",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 143800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4624.0,
                        ManufactureYear = 2015,
                        Mileage = 72500.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 137013.82m,
                        PricePerMonth = 11983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw328I.ID,
                        CarModel = Bmw328I,
                        Title = "Bmw 328I 393",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2003,
                        Mileage = 110000.0,
                        PeakPowerHP = 207.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 27959.27m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2720.0,
                        WidthMM = 1810.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 394",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 199800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2493.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1880.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 182.0,
                        PeakTorqueNM = 235.0,
                        PredictedPrice = 177804.12m,
                        PricePerMonth = 16650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1850.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 395",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 26800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1660.0,
                        LengthMM = 4650.0,
                        ManufactureYear = 2004,
                        Mileage = 165000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 32831.86m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2825.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaIpsum.ID,
                        CarModel = ToyotaIpsum,
                        Title = "Toyota Ipsum 396",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 122888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 223.0,
                        PredictedPrice = 101092.86m,
                        PricePerMonth = 10240.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 397",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 93700.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1471.0,
                        LengthMM = 4868.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 310.0,
                        PredictedPrice = 93097.58m,
                        PricePerMonth = 7808.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 2071.0,
                        CarModelID = MercedesBenzE250Cgi.ID,
                        CarModel = MercedesBenzE250Cgi,
                        Title = "MercedesBenz E250Cgi 398",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 99800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2014,
                        Mileage = 40000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 114766.73m,
                        PricePerMonth = 8316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA180.ID,
                        CarModel = MercedesBenzA180,
                        Title = "MercedesBenz A180 399",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 149800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2014,
                        Mileage = 35000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 131374.58m,
                        PricePerMonth = 12483.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 400",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24900.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4145.0,
                        ManufactureYear = 2007,
                        Mileage = 170000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 28316.98m,
                        PricePerMonth = 2075.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2460.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaYaris.ID,
                        CarModel = ToyotaYaris,
                        Title = "Toyota Yaris 401",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 79800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4999.0,
                        ManufactureYear = 2019,
                        Mileage = 5000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 75171.63m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 402",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2017,
                        Mileage = 97000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 57861.05m,
                        PricePerMonth = 5566.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 403",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 85800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1925.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 392.0,
                        PredictedPrice = 87120.49m,
                        PricePerMonth = 7150.0m,
                        SeatCapacity = 11,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1920.0,
                        CarModelID = HyundaiGrandStarex.ID,
                        CarModel = HyundaiGrandStarex,
                        Title = "Hyundai GrandStarex 404",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 3962.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 26471.82m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1739.0,
                        CarModelID = Peugeot208.ID,
                        CarModel = Peugeot208,
                        Title = "Peugeot 208 405",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 125800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1679.0,
                        LengthMM = 4584.0,
                        ManufactureYear = 2018,
                        Mileage = 10000.0,
                        PeakPowerHP = 193.0,
                        PeakTorqueNM = 243.0,
                        PredictedPrice = 142677.22m,
                        PricePerMonth = 10483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1855.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 406",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1587.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4601.090693538827,
                        ManufactureYear = 1995,
                        Mileage = 255000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 22355.79m,
                        PricePerMonth = 816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaCorolla.ID,
                        CarModel = ToyotaCorolla,
                        Title = "Toyota Corolla 407",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 60000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 4000.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1484.0,
                        LengthMM = 5179.0,
                        ManufactureYear = 2007,
                        Mileage = 105000.0,
                        PeakPowerHP = 306.0,
                        PeakTorqueNM = 390.0,
                        PredictedPrice = 92172.46m,
                        PricePerMonth = 5000.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3128.0,
                        WidthMM = 1902.0,
                        CarModelID = Bmw740Li.ID,
                        CarModel = Bmw740Li,
                        Title = "Bmw 740Li 408",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 7800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 659.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 2009,
                        Mileage = 125000.0,
                        PeakPowerHP = 31.0,
                        PeakTorqueNM = 49.0,
                        PredictedPrice = 6510.86m,
                        PricePerMonth = 650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 409",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 198800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2457.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4595.0,
                        ManufactureYear = 2016,
                        Mileage = 35000.0,
                        PeakPowerHP = 300.0,
                        PeakTorqueNM = 407.0,
                        PredictedPrice = 213114.38m,
                        PricePerMonth = 16566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruWrxSti.ID,
                        CarModel = SubaruWrxSti,
                        Title = "Subaru WrxSti 410",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 50800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 42997.0m,
                        PricePerMonth = 4233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 411",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2010,
                        Mileage = 125000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 35752.06m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 412",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 44800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 38235.33m,
                        PricePerMonth = 3733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 413",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 145800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1561.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2017,
                        Mileage = 55000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 124778.65m,
                        PricePerMonth = 12150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2595.0,
                        WidthMM = 1789.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 414",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 12800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2011,
                        Mileage = 70000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 14710.9m,
                        PricePerMonth = 1066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 415",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 67800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2013,
                        Mileage = 125000.0,
                        PeakPowerHP = 148.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 60252.55m,
                        PricePerMonth = 5650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1825.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 416",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 69999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1715.0,
                        LengthMM = 4640.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 171.0,
                        PeakTorqueNM = 233.0,
                        PredictedPrice = 71073.37m,
                        PricePerMonth = 5833.25m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2705.0,
                        WidthMM = 1820.0,
                        CarModelID = NissanXTrail.ID,
                        CarModel = NissanXTrail,
                        Title = "Nissan XTrail 417",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 188888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 4806.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1688.0,
                        LengthMM = 4846.0,
                        ManufactureYear = 2013,
                        Mileage = 105000.0,
                        PeakPowerHP = 420.0,
                        PeakTorqueNM = 515.0,
                        PredictedPrice = 192766.05m,
                        PricePerMonth = 15740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2895.0,
                        WidthMM = 1954.0,
                        CarModelID = PorscheCayenne.ID,
                        CarModel = PorscheCayenne,
                        Title = "Porsche Cayenne 418",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 47800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1655.0,
                        LengthMM = 5220.0,
                        ManufactureYear = 2014,
                        Mileage = 125000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 44651.47m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1750.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 419",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 56800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4485.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 48223.63m,
                        PricePerMonth = 4733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1700.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 420",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 29800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1471.0,
                        LengthMM = 4821.0,
                        ManufactureYear = 2012,
                        Mileage = 225000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 41049.31m,
                        PricePerMonth = 2483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2794.0,
                        WidthMM = 1834.0,
                        CarModelID = HyundaiSonata.ID,
                        CarModel = HyundaiSonata,
                        Title = "Hyundai Sonata 421",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 129800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1301.0,
                        LengthMM = 4134.0,
                        ManufactureYear = 2013,
                        Mileage = 120000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 143704.65m,
                        PricePerMonth = 10816.67m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2430.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzSlk200.ID,
                        CarModel = MercedesBenzSlk200,
                        Title = "MercedesBenz Slk200 422",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 78800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1795.0,
                        LengthMM = 4735.0,
                        ManufactureYear = 2017,
                        Mileage = 55000.0,
                        PeakPowerHP = 139.0,
                        PeakTorqueNM = 183.0,
                        PredictedPrice = 86979.82m,
                        PricePerMonth = 6566.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1830.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 423",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1438.0,
                        LengthMM = 4477.0,
                        ManufactureYear = 2011,
                        Mileage = 185000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 17646.17m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1725.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 424",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1520.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 15280.44m,
                        PricePerMonth = 1158.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 425",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4205.0,
                        ManufactureYear = 2013,
                        Mileage = 100000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 31398.64m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 426",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 25500.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2008,
                        Mileage = 125000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 26423.41m,
                        PricePerMonth = 2125.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 427",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4620.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 139.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 55521.87m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1776.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 428",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 188888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 4806.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1688.0,
                        LengthMM = 4846.0,
                        ManufactureYear = 2013,
                        Mileage = 110000.0,
                        PeakPowerHP = 420.0,
                        PeakTorqueNM = 515.0,
                        PredictedPrice = 194065.57m,
                        PricePerMonth = 15740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2895.0,
                        WidthMM = 1954.0,
                        CarModelID = PorscheCayenne.ID,
                        CarModel = PorscheCayenne,
                        Title = "Porsche Cayenne 429",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 32800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1525.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2008,
                        Mileage = 105000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 35838.4m,
                        PricePerMonth = 2733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 430",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1490.0,
                        LengthMM = 4480.0,
                        ManufactureYear = 2012,
                        Mileage = 125000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 33324.6m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1745.0,
                        CarModelID = ToyotaPrius.ID,
                        CarModel = ToyotaPrius,
                        Title = "Toyota Prius 431",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 135999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1432.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 128961.72m,
                        PricePerMonth = 11333.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1777.0,
                        CarModelID = MercedesBenzCla200.ID,
                        CarModel = MercedesBenzCla200,
                        Title = "MercedesBenz Cla200 432",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 29999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 31728.59m,
                        PricePerMonth = 2499.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 433",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 31988.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2011,
                        Mileage = 75000.0,
                        PeakPowerHP = 182.0,
                        PeakTorqueNM = 228.0,
                        PredictedPrice = 47527.51m,
                        PricePerMonth = 2665.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1795.0,
                        CarModelID = NissanTeana.ID,
                        CarModel = NissanTeana,
                        Title = "Nissan Teana 434",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 63800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1618.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1565.0,
                        LengthMM = 4135.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 49645.11m,
                        PricePerMonth = 5316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1765.0,
                        CarModelID = NissanJuke.ID,
                        CarModel = NissanJuke,
                        Title = "Nissan Juke 435",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 78888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1470.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 213.0,
                        PredictedPrice = 85199.08m,
                        PricePerMonth = 6574.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1825.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 436",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 31800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2014,
                        Mileage = 100000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 31655.49m,
                        PricePerMonth = 2650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 437",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1948.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2000,
                        Mileage = 205000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 15997.81m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = VolvoV40.ID,
                        CarModel = VolvoV40,
                        Title = "Volvo V40 438",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 135000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 2893.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1304.0,
                        LengthMM = 4347.0,
                        ManufactureYear = 2009,
                        Mileage = 90000.0,
                        PeakPowerHP = 265.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 181799.78m,
                        PricePerMonth = 11250.0m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2416.0,
                        WidthMM = 1801.0,
                        CarModelID = PorscheCayman.ID,
                        CarModel = PorscheCayman,
                        Title = "Porsche Cayman 439",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4536.0,
                        ManufactureYear = 2015,
                        Mileage = 85000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 31461.02m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonSuprimaS.ID,
                        CarModel = ProtonSuprimaS,
                        Title = "Proton SuprimaS 440",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68999.0m,
                        Colour = "Beige",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2017,
                        Mileage = 6600.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 75647.25m,
                        PricePerMonth = 5749.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 441",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 555000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1298.0,
                        LengthMM = 4689.0,
                        ManufactureYear = 2017,
                        Mileage = 5000.0,
                        PeakPowerHP = 231.0,
                        PeakTorqueNM = 320.0,
                        PredictedPrice = 290641.14m,
                        PricePerMonth = 46250.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1942.0,
                        CarModelID = BmwI8.ID,
                        CarModel = BmwI8,
                        Title = "Bmw I8 442",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 790000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 3799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1269.0,
                        LengthMM = 4545.0,
                        ManufactureYear = 2014,
                        Mileage = 15000.0,
                        PeakPowerHP = 476.0,
                        PeakTorqueNM = 440.0,
                        PredictedPrice = 428973.41m,
                        PricePerMonth = 65833.33m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2450.0,
                        WidthMM = 1852.0,
                        CarModelID = Porsche911.ID,
                        CarModel = Porsche911,
                        Title = "Porsche 911 443",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 275888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1443.0,
                        LengthMM = 4963.0,
                        ManufactureYear = 2019,
                        Mileage = 15000.0,
                        PeakPowerHP = 325.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 271653.42m,
                        PricePerMonth = 22990.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2941.0,
                        WidthMM = 1879.0,
                        CarModelID = VolvoS90.ID,
                        CarModel = VolvoS90,
                        Title = "Volvo S90 444",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 26990.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1794.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4540.0,
                        ManufactureYear = 2008,
                        Mileage = 155000.0,
                        PeakPowerHP = 132.0,
                        PeakTorqueNM = 170.0,
                        PredictedPrice = 33604.82m,
                        PricePerMonth = 2249.17m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 445",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 77800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4480.0,
                        ManufactureYear = 2016,
                        Mileage = 50000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 192.0,
                        PredictedPrice = 80876.92m,
                        PricePerMonth = 6483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1855.0,
                        CarModelID = KiaSportage.ID,
                        CarModel = KiaSportage,
                        Title = "Kia Sportage 446",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 85633.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2008,
                        Mileage = 85000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 95075.44m,
                        PricePerMonth = 7136.08m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 447",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1948.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2000,
                        Mileage = 195000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 16400.35m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = VolvoV40.ID,
                        CarModel = VolvoV40,
                        Title = "Volvo V40 448",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 115800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1675.0,
                        LengthMM = 4550.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 105916.2m,
                        PricePerMonth = 9650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 449",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 210800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1405.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2017,
                        Mileage = 40000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 199938.13m,
                        PricePerMonth = 17566.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC250.ID,
                        CarModel = MercedesBenzC250,
                        Title = "MercedesBenz C250 450",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3690.0,
                        ManufactureYear = 2013,
                        Mileage = 135000.0,
                        PeakPowerHP = 91.0,
                        PeakTorqueNM = 117.0,
                        PredictedPrice = 21759.4m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 451",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 379000.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4709.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 387.0,
                        PeakTorqueNM = 500.0,
                        PredictedPrice = 292784.41m,
                        PricePerMonth = 31583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2851.0,
                        WidthMM = 1827.0,
                        CarModelID = BmwM340I.ID,
                        CarModel = BmwM340I,
                        Title = "Bmw M340I 452",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 4387.0,
                        ManufactureYear = 2017,
                        Mileage = 90000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 33578.15m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 453",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 32956.59m,
                        PricePerMonth = 3066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 454",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 89800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1925.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2017,
                        Mileage = 95000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 392.0,
                        PredictedPrice = 78227.47m,
                        PricePerMonth = 7483.33m,
                        SeatCapacity = 11,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1920.0,
                        CarModelID = HyundaiGrandStarex.ID,
                        CarModel = HyundaiGrandStarex,
                        Title = "Hyundai GrandStarex 455",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 488888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1624.0,
                        LengthMM = 4696.0,
                        ManufactureYear = 2019,
                        Mileage = 25000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 370.0,
                        PredictedPrice = 330004.81m,
                        PricePerMonth = 40740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2807.0,
                        WidthMM = 1923.0,
                        CarModelID = PorscheMacan.ID,
                        CarModel = PorscheMacan,
                        Title = "Porsche Macan 456",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 22800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1485.0,
                        LengthMM = 4618.0,
                        ManufactureYear = 2014,
                        Mileage = 140000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 195.0,
                        PredictedPrice = 38676.43m,
                        PricePerMonth = 1900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2702.0,
                        WidthMM = 1813.0,
                        CarModelID = RenaultFluence.ID,
                        CarModel = RenaultFluence,
                        Title = "Renault Fluence 457",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 105800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2014,
                        Mileage = 50000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 115479.48m,
                        PricePerMonth = 8816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA200.ID,
                        CarModel = MercedesBenzA200,
                        Title = "MercedesBenz A200 458",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 288800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1624.0,
                        LengthMM = 4681.0,
                        ManufactureYear = 2015,
                        Mileage = 60000.0,
                        PeakPowerHP = 237.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 240339.61m,
                        PricePerMonth = 24066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2807.0,
                        WidthMM = 1923.0,
                        CarModelID = PorscheMacan.ID,
                        CarModel = PorscheMacan,
                        Title = "Porsche Macan 459",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 63900.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2018,
                        Mileage = 40000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 63878.84m,
                        PricePerMonth = 5325.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 460",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 438000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 4367.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1855.0,
                        LengthMM = 4999.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 340.0,
                        PeakTorqueNM = 700.0,
                        PredictedPrice = 372443.36m,
                        PricePerMonth = 36500.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2922.0,
                        WidthMM = 2220.0,
                        CarModelID = LandRoverRangeRover.ID,
                        CarModel = LandRoverRangeRover,
                        Title = "LandRover RangeRover 461",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27500.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1456.0,
                        LengthMM = 4792.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 158.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 36702.64m,
                        PricePerMonth = 2291.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2817.0,
                        WidthMM = 2068.0,
                        CarModelID = Peugeot508.ID,
                        CarModel = Peugeot508,
                        Title = "Peugeot 508 462",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 47800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1404.0,
                        LengthMM = 4256.0,
                        ManufactureYear = 2012,
                        Mileage = 160000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 68821.45m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2578.0,
                        WidthMM = 1810.0,
                        CarModelID = VolkswagenScirocco.ID,
                        CarModel = VolkswagenScirocco,
                        Title = "Volkswagen Scirocco 463",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 47800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4870.0,
                        ManufactureYear = 2015,
                        Mileage = 55000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 67314.83m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1850.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 464",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 22800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1435.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 25499.04m,
                        PricePerMonth = 1900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 465",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 98800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1464.0,
                        LengthMM = 4899.0,
                        ManufactureYear = 2012,
                        Mileage = 135000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 120934.55m,
                        PricePerMonth = 8233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw528I.ID,
                        CarModel = Bmw528I,
                        Title = "Bmw 528I 466",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 109500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 123221.68m,
                        PricePerMonth = 9125.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA200.ID,
                        CarModel = MercedesBenzA200,
                        Title = "MercedesBenz A200 467",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 45884.67m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 468",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 76800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4525.0,
                        ManufactureYear = 2016,
                        Mileage = 95000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 60590.13m,
                        PricePerMonth = 6400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1755.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 469",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30900.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1680.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2008,
                        Mileage = 120000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 41182.85m,
                        PricePerMonth = 2575.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 470",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 59900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4620.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 139.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 58303.25m,
                        PricePerMonth = 4991.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1776.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 471",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 78888.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 91712.72m,
                        PricePerMonth = 6574.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 472",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1800.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2002,
                        Mileage = 195000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 22577.41m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2960.0,
                        WidthMM = 1775.0,
                        CarModelID = MitsubishiStorm.ID,
                        CarModel = MitsubishiStorm,
                        Title = "Mitsubishi Storm 473",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 195000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1450.0,
                        LengthMM = 4862.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 320.0,
                        PredictedPrice = 200858.2m,
                        PricePerMonth = 16250.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2837.0,
                        WidthMM = 1871.0,
                        CarModelID = VolkswagenArteon.ID,
                        CarModel = VolkswagenArteon,
                        Title = "Volkswagen Arteon 474",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 65800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2016,
                        Mileage = 40000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 71217.35m,
                        PricePerMonth = 5483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 475",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 20800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2008,
                        Mileage = 135000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 25270.96m,
                        PricePerMonth = 1733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 476",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 67800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 154.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 63786.94m,
                        PricePerMonth = 5650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 477",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 139800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1437.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2015,
                        Mileage = 60000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 121429.5m,
                        PricePerMonth = 11650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1777.0,
                        CarModelID = MercedesBenzCla180.ID,
                        CarModel = MercedesBenzCla180,
                        Title = "MercedesBenz Cla180 478",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 210800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1483.0,
                        LengthMM = 4936.0,
                        ManufactureYear = 2018,
                        Mileage = 20000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 197968.97m,
                        PricePerMonth = 17566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2975.0,
                        WidthMM = 1868.0,
                        CarModelID = Bmw530E.ID,
                        CarModel = Bmw530E,
                        Title = "Bmw 530E 479",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 46800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4075.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 48736.63m,
                        PricePerMonth = 3900.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 480",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 319999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1468.0,
                        LengthMM = 4923.0,
                        ManufactureYear = 2019,
                        Mileage = 10000.0,
                        PeakPowerHP = 299.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 253909.97m,
                        PricePerMonth = 26666.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2939.0,
                        WidthMM = 1852.0,
                        CarModelID = MercedesBenzE350.ID,
                        CarModel = MercedesBenzE350,
                        Title = "MercedesBenz E350 481",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 17900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4291.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 24567.76m,
                        PricePerMonth = 1491.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 482",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 79800.0m,
                        Colour = "Maroon",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1535.0,
                        LengthMM = 4275.0,
                        ManufactureYear = 2016,
                        Mileage = 80000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 204.0,
                        PredictedPrice = 75829.31m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1765.0,
                        CarModelID = MazdaCx3.ID,
                        CarModel = MazdaCx3,
                        Title = "Mazda Cx3 483",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3685.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 28914.28m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 484",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 27300.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2008,
                        Mileage = 95000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 26929.5m,
                        PricePerMonth = 2275.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 485",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 380000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 2979.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1410.0,
                        LengthMM = 4468.0,
                        ManufactureYear = 2018,
                        Mileage = 25000.0,
                        PeakPowerHP = 370.0,
                        PeakTorqueNM = 465.0,
                        PredictedPrice = 290652.82m,
                        PricePerMonth = 31666.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2693.0,
                        WidthMM = 1854.0,
                        CarModelID = BmwM2.ID,
                        CarModel = BmwM2,
                        Title = "Bmw M2 486",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 109900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1740.0,
                        LengthMM = 4690.0,
                        ManufactureYear = 2019,
                        Mileage = 45000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 92869.51m,
                        PricePerMonth = 9158.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2705.0,
                        WidthMM = 1820.0,
                        CarModelID = NissanXTrail.ID,
                        CarModel = NissanXTrail,
                        Title = "Nissan XTrail 487",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 116800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2011,
                        Mileage = 100000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 102220.49m,
                        PricePerMonth = 9733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 488",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 59888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1797.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1432.0,
                        LengthMM = 4581.0,
                        ManufactureYear = 2012,
                        Mileage = 105000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 83399.58m,
                        PricePerMonth = 4990.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1770.0,
                        CarModelID = MercedesBenzC180Cgi.ID,
                        CarModel = MercedesBenzC180Cgi,
                        Title = "MercedesBenz C180Cgi 489",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1430.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2003,
                        Mileage = 155000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 12019.26m,
                        PricePerMonth = 1233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 490",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 15888.0m,
                        Colour = "Yellow",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4070.0,
                        ManufactureYear = 2006,
                        Mileage = 115000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 20444.25m,
                        PricePerMonth = 1324.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1630.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 491",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 89999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1440.0,
                        LengthMM = 4329.0,
                        ManufactureYear = 2016,
                        Mileage = 100000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 106465.55m,
                        PricePerMonth = 7499.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2690.0,
                        WidthMM = 1765.0,
                        CarModelID = Bmw118I.ID,
                        CarModel = Bmw118I,
                        Title = "Bmw 118I 492",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 118800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 129999.76m,
                        PricePerMonth = 9900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA250.ID,
                        CarModel = MercedesBenzA250,
                        Title = "MercedesBenz A250 493",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 26500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4730.0,
                        ManufactureYear = 2005,
                        Mileage = 160000.0,
                        PeakPowerHP = 215.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 38899.89m,
                        PricePerMonth = 2208.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaMarkX.ID,
                        CarModel = ToyotaMarkX,
                        Title = "Toyota MarkX 494",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 308900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1988.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1295.0,
                        LengthMM = 4379.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 299.0,
                        PeakTorqueNM = 380.0,
                        PredictedPrice = 360018.91m,
                        PricePerMonth = 25741.67m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2475.0,
                        WidthMM = 1801.0,
                        CarModelID = Porsche718.ID,
                        CarModel = Porsche718,
                        Title = "Porsche 718 495",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 47800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1795.0,
                        LengthMM = 5100.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 314.0,
                        PredictedPrice = 45280.56m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 496",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 72800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1447.0,
                        LengthMM = 4581.0,
                        ManufactureYear = 2012,
                        Mileage = 70000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 78171.27m,
                        PricePerMonth = 6066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 2020.0,
                        CarModelID = MercedesBenzC200Cgi.ID,
                        CarModel = MercedesBenzC200Cgi,
                        Title = "MercedesBenz C200Cgi 497",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 128800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 135261.5m,
                        PricePerMonth = 10733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA250.ID,
                        CarModel = MercedesBenzA250,
                        Title = "MercedesBenz A250 498",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 32164.69m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 499",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 35777.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1400.0,
                        LengthMM = 4480.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 194.0,
                        PredictedPrice = 78911.06m,
                        PricePerMonth = 2981.42m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1765.0,
                        CarModelID = KiaForteKoup.ID,
                        CarModel = KiaForteKoup,
                        Title = "Kia ForteKoup 500",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 146800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2015,
                        Mileage = 50000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 158462.87m,
                        PricePerMonth = 12233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC200.ID,
                        CarModel = MercedesBenzC200,
                        Title = "MercedesBenz C200 501",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 56900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2359.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1730.0,
                        LengthMM = 4685.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 178.0,
                        PeakTorqueNM = 227.0,
                        PredictedPrice = 73206.83m,
                        PricePerMonth = 4741.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1885.0,
                        CarModelID = KiaSorento.ID,
                        CarModel = KiaSorento,
                        Title = "Kia Sorento 502",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 22500.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 67.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 26600.63m,
                        PricePerMonth = 1875.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 503",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 119800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4624.0,
                        ManufactureYear = 2013,
                        Mileage = 105000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 102882.15m,
                        PricePerMonth = 9983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw328I.ID,
                        CarModel = Bmw328I,
                        Title = "Bmw 328I 504",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 209900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1639.0,
                        LengthMM = 4656.0,
                        ManufactureYear = 2016,
                        Mileage = 110000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 192529.93m,
                        PricePerMonth = 17491.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2873.0,
                        WidthMM = 1890.0,
                        CarModelID = MercedesBenzGlc250.ID,
                        CarModel = MercedesBenzGlc250,
                        Title = "MercedesBenz Glc250 505",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 259800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1630.0,
                        LengthMM = 4640.0,
                        ManufactureYear = 2018,
                        Mileage = 55000.0,
                        PeakPowerHP = 238.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 182015.61m,
                        PricePerMonth = 21650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1845.0,
                        CarModelID = LexusNx300.ID,
                        CarModel = LexusNx300,
                        Title = "Lexus Nx300 506",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1800.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2002,
                        Mileage = 195000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 22577.41m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2960.0,
                        WidthMM = 1775.0,
                        CarModelID = MitsubishiStorm.ID,
                        CarModel = MitsubishiStorm,
                        Title = "Mitsubishi Storm 507",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 5888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 1299.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1385.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2001,
                        Mileage = 155000.0,
                        PeakPowerHP = 75.0,
                        PeakTorqueNM = 108.0,
                        PredictedPrice = 9526.82m,
                        PricePerMonth = 490.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonWira.ID,
                        CarModel = ProtonWira,
                        Title = "Proton Wira 508",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 35800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2994.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1935.0,
                        LengthMM = 4800.0,
                        ManufactureYear = 2004,
                        Mileage = 135000.0,
                        PeakPowerHP = 220.0,
                        PeakTorqueNM = 304.0,
                        PredictedPrice = 54966.95m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 509",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2016,
                        Mileage = 100000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 34050.38m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 510",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 288800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1776.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2018,
                        Mileage = 60000.0,
                        PeakPowerHP = 320.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 244703.26m,
                        PricePerMonth = 24066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2984.0,
                        WidthMM = 1958.0,
                        CarModelID = VolvoXc90.ID,
                        CarModel = VolvoXc90,
                        Title = "Volvo Xc90 511",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33333.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1760.0,
                        LengthMM = 4585.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 38566.96m,
                        PricePerMonth = 2777.75m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 512",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4205.0,
                        ManufactureYear = 2010,
                        Mileage = 95000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 30079.5m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 513",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 4800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2003,
                        Mileage = 175000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 179.0,
                        PredictedPrice = 32920.57m,
                        PricePerMonth = 400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1730.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 514",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2500.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1760.0,
                        LengthMM = 5128.0,
                        ManufactureYear = 2005,
                        Mileage = 205000.0,
                        PeakPowerHP = 121.0,
                        PeakTorqueNM = 262.0,
                        PredictedPrice = 38756.06m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1810.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 515",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 35800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2012,
                        Mileage = 70000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 33338.24m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 516",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 22800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 26490.02m,
                        PricePerMonth = 1900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 517",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19999.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2009,
                        Mileage = 105000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 26878.25m,
                        PricePerMonth = 1666.58m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 518",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1373.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4265.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 92.0,
                        PeakTorqueNM = 130.0,
                        PredictedPrice = 39193.22m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = ProtonErtiga.ID,
                        CarModel = ProtonErtiga,
                        Title = "Proton Ertiga 519",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 29800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4769.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 41568.58m,
                        PricePerMonth = 2483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2712.0,
                        WidthMM = 1820.0,
                        CarModelID = VolkswagenPassat.ID,
                        CarModel = VolkswagenPassat,
                        Title = "Volkswagen Passat 520",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 51800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 3955.0,
                        ManufactureYear = 2015,
                        Mileage = 110000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 49202.55m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 521",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 3800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1360.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 1999,
                        Mileage = 185000.0,
                        PeakPowerHP = 75.0,
                        PeakTorqueNM = 109.0,
                        PredictedPrice = 6391.75m,
                        PricePerMonth = 316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2380.0,
                        WidthMM = 1655.0,
                        CarModelID = ProtonIswara.ID,
                        CarModel = ProtonIswara,
                        Title = "Proton Iswara 522",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 49351.98m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1820.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 523",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 46900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4215.0,
                        ManufactureYear = 2010,
                        Mileage = 135000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 39294.87m,
                        PricePerMonth = 3908.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1700.0,
                        CarModelID = HondaFreed.ID,
                        CarModel = HondaFreed,
                        Title = "Honda Freed 524",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 67800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1464.0,
                        LengthMM = 4899.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 69454.65m,
                        PricePerMonth = 5650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw523I.ID,
                        CarModel = Bmw523I,
                        Title = "Bmw 523I 525",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 51800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.0,
                        LengthMM = 4627.0,
                        ManufactureYear = 2010,
                        Mileage = 105000.0,
                        PeakPowerHP = 205.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 52208.14m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2774.0,
                        WidthMM = 1891.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 526",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 124800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2755.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5330.0,
                        ManufactureYear = 2020,
                        Mileage = 35000.0,
                        PeakPowerHP = 177.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 100437.21m,
                        PricePerMonth = 10400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1855.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 527",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 69800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2015,
                        Mileage = 55000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 82990.1m,
                        PricePerMonth = 5816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 528",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 65800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1580.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1450.0,
                        LengthMM = 4470.0,
                        ManufactureYear = 2017,
                        Mileage = 55000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 147.0,
                        PredictedPrice = 85060.11m,
                        PricePerMonth = 5483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1820.0,
                        CarModelID = HyundaiIoniq.ID,
                        CarModel = HyundaiIoniq,
                        Title = "Hyundai Ioniq 529",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 53800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1495.0,
                        LengthMM = 4060.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 54053.86m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1695.0,
                        CarModelID = Mazda2.ID,
                        CarModel = Mazda2,
                        Title = "Mazda 2 530",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 52888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5295.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 178.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 56215.73m,
                        PricePerMonth = 4407.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 531",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 62500.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1450.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 188.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 70523.88m,
                        PricePerMonth = 5208.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2830.0,
                        WidthMM = 1840.0,
                        CarModelID = Mazda6.ID,
                        CarModel = Mazda6,
                        Title = "Mazda 6 532",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 79800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1890.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 100309.61m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1830.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 533",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4120.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 29745.72m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1635.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 534",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 52900.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2014,
                        Mileage = 100000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 48816.12m,
                        PricePerMonth = 4408.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 535",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 123800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1612.0,
                        LengthMM = 4439.0,
                        ManufactureYear = 2016,
                        Mileage = 100000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 118188.44m,
                        PricePerMonth = 10316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1821.0,
                        CarModelID = BmwX1.ID,
                        CarModel = BmwX1,
                        Title = "Bmw X1 536",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 124800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2199.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1740.0,
                        LengthMM = 5115.0,
                        ManufactureYear = 2018,
                        Mileage = 47900.0,
                        PeakPowerHP = 193.0,
                        PeakTorqueNM = 440.0,
                        PredictedPrice = 98842.57m,
                        PricePerMonth = 10400.0m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3060.0,
                        WidthMM = 1985.0,
                        CarModelID = KiaGrandCarnival.ID,
                        CarModel = KiaGrandCarnival,
                        Title = "Kia GrandCarnival 537",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 116700.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1835.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2016,
                        Mileage = 85000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 118895.11m,
                        PricePerMonth = 9725.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2745.0,
                        WidthMM = 4855.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 538",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1948.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 1999,
                        Mileage = 205000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 14818.66m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = VolvoS40.ID,
                        CarModel = VolvoS40,
                        Title = "Volvo S40 539",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 32333.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1466.0,
                        LengthMM = 4358.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 202.0,
                        PredictedPrice = 38229.16m,
                        PricePerMonth = 2694.42m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2648.0,
                        WidthMM = 1824.0,
                        CarModelID = FordFocus.ID,
                        CarModel = FordFocus,
                        Title = "Ford Focus 540",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 5800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1395.0,
                        LengthMM = 4200.0,
                        ManufactureYear = 2005,
                        Mileage = 110000.0,
                        PeakPowerHP = 91.0,
                        PeakTorqueNM = 133.0,
                        PredictedPrice = 16044.03m,
                        PricePerMonth = 483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1670.0,
                        CarModelID = HyundaiAccent.ID,
                        CarModel = HyundaiAccent,
                        Title = "Hyundai Accent 541",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 4500.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1360.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2004,
                        Mileage = 155000.0,
                        PeakPowerHP = 75.0,
                        PeakTorqueNM = 109.0,
                        PredictedPrice = 6321.78m,
                        PricePerMonth = 375.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2380.0,
                        WidthMM = 1655.0,
                        CarModelID = ProtonIswara.ID,
                        CarModel = ProtonIswara,
                        Title = "Proton Iswara 542",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 89800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1890.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2010,
                        Mileage = 105000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 100309.61m,
                        PricePerMonth = 7483.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1830.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 543",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 51800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.0,
                        LengthMM = 4627.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 205.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 52208.14m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2774.0,
                        WidthMM = 1891.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 544",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 34783.05m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 545",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 40800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 4765.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 43759.88m,
                        PricePerMonth = 3400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2830.0,
                        WidthMM = 1800.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 546",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 490000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 5663.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1865.0,
                        LengthMM = 5080.0,
                        ManufactureYear = 2016,
                        Mileage = 25000.0,
                        PeakPowerHP = 367.0,
                        PeakTorqueNM = 530.0,
                        PredictedPrice = 290647.87m,
                        PricePerMonth = 40833.33m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1980.0,
                        CarModelID = LexusLx570.ID,
                        CarModel = LexusLx570,
                        Title = "Lexus Lx570 547",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1248.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1540.0,
                        LengthMM = 3565.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 87.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 17580.09m,
                        PricePerMonth = 1491.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2380.0,
                        WidthMM = 1595.0,
                        CarModelID = HyundaiI10.ID,
                        CarModel = HyundaiI10,
                        Title = "Hyundai I10 548",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 61800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1850.0,
                        LengthMM = 5260.0,
                        ManufactureYear = 2013,
                        Mileage = 110000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 65186.55m,
                        PricePerMonth = 5150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 549",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 138000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 3999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1392.0,
                        LengthMM = 4615.0,
                        ManufactureYear = 2008,
                        Mileage = 65000.0,
                        PeakPowerHP = 420.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 168196.46m,
                        PricePerMonth = 11500.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2761.0,
                        WidthMM = 1804.0,
                        CarModelID = BmwM3.ID,
                        CarModel = BmwM3,
                        Title = "Bmw M3 550",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37900.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2018,
                        Mileage = 45000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34438.99m,
                        PricePerMonth = 3158.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 551",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 116888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2017,
                        Mileage = 95000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 132406.13m,
                        PricePerMonth = 9740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw330E.ID,
                        CarModel = Bmw330E,
                        Title = "Bmw 330E 552",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 57800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2014,
                        Mileage = 95000.0,
                        PeakPowerHP = 182.0,
                        PeakTorqueNM = 228.0,
                        PredictedPrice = 56693.09m,
                        PricePerMonth = 4816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1795.0,
                        CarModelID = NissanTeana.ID,
                        CarModel = NissanTeana,
                        Title = "Nissan Teana 553",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25183.88m,
                        PricePerMonth = 2075.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 554",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 847.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2004,
                        Mileage = 165000.0,
                        PeakPowerHP = 50.0,
                        PeakTorqueNM = 74.0,
                        PredictedPrice = 9779.75m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 555",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 31800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2996.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1484.0,
                        LengthMM = 5179.0,
                        ManufactureYear = 2007,
                        Mileage = 185000.0,
                        PeakPowerHP = 258.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 81123.65m,
                        PricePerMonth = 2650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3128.0,
                        WidthMM = 1902.0,
                        CarModelID = Bmw730Li.ID,
                        CarModel = Bmw730Li,
                        Title = "Bmw 730Li 556",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 16604.61m,
                        PricePerMonth = 1241.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 557",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34500.0m,
                        Colour = "Maroon",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 4387.0,
                        ManufactureYear = 2019,
                        Mileage = 30000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 36548.04m,
                        PricePerMonth = 2875.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 558",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 4387.0,
                        ManufactureYear = 2017,
                        Mileage = 115000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 32102.22m,
                        PricePerMonth = 3066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 559",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 54800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4075.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 48934.5m,
                        PricePerMonth = 4566.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 560",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2015,
                        Mileage = 85000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 34836.95m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 561",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 123000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2013,
                        Mileage = 70000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 129670.22m,
                        PricePerMonth = 10250.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1965.0,
                        CarModelID = LandRoverRangeRoverEvoque.ID,
                        CarModel = LandRoverRangeRoverEvoque,
                        Title = "LandRover RangeRoverEvoque 562",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 17800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 20194.48m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 563",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5230.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 174.0,
                        PeakTorqueNM = 403.0,
                        PredictedPrice = 61689.98m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1850.0,
                        CarModelID = NissanNavara.ID,
                        CarModel = NissanNavara,
                        Title = "Nissan Navara 564",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1482.0,
                        LengthMM = 4644.0,
                        ManufactureYear = 2014,
                        Mileage = 117506.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 46791.49m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2651.0,
                        WidthMM = 1778.0,
                        CarModelID = VolkswagenJetta.ID,
                        CarModel = VolkswagenJetta,
                        Title = "Volkswagen Jetta 565",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1850.0,
                        LengthMM = 5260.0,
                        ManufactureYear = 2013,
                        Mileage = 125000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 66446.53m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 566",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 88800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4465.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 98595.31m,
                        PricePerMonth = 7400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2665.0,
                        WidthMM = 1800.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 567",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1850.0,
                        LengthMM = 5260.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 67803.59m,
                        PricePerMonth = 5241.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 568",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 223000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1639.0,
                        LengthMM = 4656.0,
                        ManufactureYear = 2017,
                        Mileage = 55000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 195207.42m,
                        PricePerMonth = 18583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2873.0,
                        WidthMM = 1890.0,
                        CarModelID = MercedesBenzGlc250.ID,
                        CarModel = MercedesBenzGlc250,
                        Title = "MercedesBenz Glc250 569",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 88800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1561.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 94612.2m,
                        PricePerMonth = 7400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2595.0,
                        WidthMM = 1789.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 570",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 79800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2356.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2016,
                        Mileage = 115000.0,
                        PeakPowerHP = 238.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 86257.33m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1850.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 571",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 59800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1750.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2007,
                        Mileage = 75000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 68520.88m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 572",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1482.0,
                        LengthMM = 4644.0,
                        ManufactureYear = 2013,
                        Mileage = 100000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 43236.5m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2651.0,
                        WidthMM = 1778.0,
                        CarModelID = VolkswagenJetta.ID,
                        CarModel = VolkswagenJetta,
                        Title = "Volkswagen Jetta 573",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1447.0,
                        LengthMM = 4581.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 310.0,
                        PredictedPrice = 69375.21m,
                        PricePerMonth = 5249.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1770.0,
                        CarModelID = MercedesBenzC250Cgi.ID,
                        CarModel = MercedesBenzC250Cgi,
                        Title = "MercedesBenz C250Cgi 574",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 93800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1561.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2013,
                        Mileage = 60000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 96034.72m,
                        PricePerMonth = 7816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2595.0,
                        WidthMM = 1789.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 575",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 24878.39m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 576",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1948.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2000,
                        Mileage = 205000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 15997.81m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = VolvoV40.ID,
                        CarModel = VolvoV40,
                        Title = "Volvo V40 577",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 15900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2012,
                        Mileage = 105000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 14189.93m,
                        PricePerMonth = 1325.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 578",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 5500.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 847.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1170.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 1999,
                        Mileage = 180000.0,
                        PeakPowerHP = 50.0,
                        PeakTorqueNM = 74.0,
                        PredictedPrice = 33927.47m,
                        PricePerMonth = 458.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 579",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 73800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1675.0,
                        LengthMM = 4648.0,
                        ManufactureYear = 2012,
                        Mileage = 155000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 94913.47m,
                        PricePerMonth = 6150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1881.0,
                        CarModelID = BmwX3.ID,
                        CarModel = BmwX3,
                        Title = "Bmw X3 580",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42900.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4350.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 36208.09m,
                        PricePerMonth = 3575.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2630.0,
                        WidthMM = 1800.0,
                        CarModelID = KiaSportage.ID,
                        CarModel = KiaSportage,
                        Title = "Kia Sportage 581",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 77800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4590.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 222.0,
                        PredictedPrice = 81543.71m,
                        PricePerMonth = 6483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 582",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 22534.76m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 583",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 181.0,
                        PeakTorqueNM = 231.0,
                        PredictedPrice = 74684.57m,
                        PricePerMonth = 5566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1825.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 584",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19990.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4610.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 133.0,
                        PeakTorqueNM = 191.0,
                        PredictedPrice = 31222.06m,
                        PricePerMonth = 1665.83m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanSylphy.ID,
                        CarModel = NissanSylphy,
                        Title = "Nissan Sylphy 585",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 88799.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1561.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2012,
                        Mileage = 80000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 95882.87m,
                        PricePerMonth = 7399.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2595.0,
                        WidthMM = 1789.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 586",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 79800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1471.0,
                        LengthMM = 4868.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 310.0,
                        PredictedPrice = 97403.91m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2874.0,
                        WidthMM = 2071.0,
                        CarModelID = MercedesBenzE250Cgi.ID,
                        CarModel = MercedesBenzE250Cgi,
                        Title = "MercedesBenz E250Cgi 587",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 27800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4300.0,
                        ManufactureYear = 2008,
                        Mileage = 195000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 28292.04m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 588",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 225000.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1467.0,
                        LengthMM = 5238.0,
                        ManufactureYear = 2016,
                        Mileage = 165000.0,
                        PeakPowerHP = 258.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 224820.95m,
                        PricePerMonth = 18750.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3210.0,
                        WidthMM = 1902.0,
                        CarModelID = Bmw730Li.ID,
                        CarModel = Bmw730Li,
                        Title = "Bmw 730Li 589",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 51800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.0,
                        LengthMM = 4627.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 205.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 52208.14m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2774.0,
                        WidthMM = 1891.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 590",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2014,
                        Mileage = 95000.0,
                        PeakPowerHP = 130.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 39190.48m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1780.0,
                        CarModelID = KiaCerato.ID,
                        CarModel = KiaCerato,
                        Title = "Kia Cerato 591",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 18500.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2005,
                        Mileage = 130000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 186.0,
                        PredictedPrice = 33141.49m,
                        PricePerMonth = 1541.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 592",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1570.0,
                        LengthMM = 3685.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 31677.07m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 593",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 21800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1454.0,
                        LengthMM = 4488.0,
                        ManufactureYear = 2007,
                        Mileage = 95000.0,
                        PeakPowerHP = 131.0,
                        PeakTorqueNM = 165.0,
                        PredictedPrice = 36556.81m,
                        PricePerMonth = 1816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.HydraulicPower],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1840.0,
                        CarModelID = FordFocus.ID,
                        CarModel = FordFocus,
                        Title = "Ford Focus 594",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 76800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 3456.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 280.0,
                        PeakTorqueNM = 344.0,
                        PredictedPrice = 96482.49m,
                        PricePerMonth = 6400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 595",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 42999.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1430.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2011,
                        Mileage = 60000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 50188.64m,
                        PricePerMonth = 3583.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1765.0,
                        CarModelID = LexusCt200H.ID,
                        CarModel = LexusCt200H,
                        Title = "Lexus Ct200H 596",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 36684.99m,
                        PricePerMonth = 3000.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 597",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 69990.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1715.0,
                        LengthMM = 4640.0,
                        ManufactureYear = 2016,
                        Mileage = 115000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 75764.1m,
                        PricePerMonth = 5832.5m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2705.0,
                        WidthMM = 1820.0,
                        CarModelID = NissanXTrail.ID,
                        CarModel = NissanXTrail,
                        Title = "Nissan XTrail 598",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 83800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2017,
                        Mileage = 95596.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 70456.4m,
                        PricePerMonth = 6983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1799.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 599",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1865.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 71628.83m,
                        PricePerMonth = 5575.0m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2860.0,
                        WidthMM = 1735.0,
                        CarModelID = NissanSerena.ID,
                        CarModel = NissanSerena,
                        Title = "Nissan Serena 600",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 29800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3685.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 28516.34m,
                        PricePerMonth = 2483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 601",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 179800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1630.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2015,
                        Mileage = 35000.0,
                        PeakPowerHP = 238.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 167827.71m,
                        PricePerMonth = 14983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1845.0,
                        CarModelID = LexusNx200T.ID,
                        CarModel = LexusNx200T,
                        Title = "Lexus Nx200T 602",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 18000.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2004,
                        Mileage = 265000.0,
                        PeakPowerHP = 110.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 23806.83m,
                        PricePerMonth = 1500.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1705.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 603",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 3905.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 16652.9m,
                        PricePerMonth = 1408.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1710.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 604",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 63000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 49103.44m,
                        PricePerMonth = 5250.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaStream.ID,
                        CarModel = HondaStream,
                        Title = "Honda Stream 605",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 39800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4230.0,
                        ManufactureYear = 2016,
                        Mileage = 55000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 40397.22m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 606",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 32600.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2017,
                        Mileage = 60000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 40884.6m,
                        PricePerMonth = 2716.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 607",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 243800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2019,
                        Mileage = 10000.0,
                        PeakPowerHP = 258.0,
                        PeakTorqueNM = 370.0,
                        PredictedPrice = 226908.85m,
                        PricePerMonth = 20316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC300.ID,
                        CarModel = MercedesBenzC300,
                        Title = "MercedesBenz C300 608",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 167800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1474.0,
                        LengthMM = 4879.0,
                        ManufactureYear = 2016,
                        Mileage = 80000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 172178.39m,
                        PricePerMonth = 13983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE250.ID,
                        CarModel = MercedesBenzE250,
                        Title = "MercedesBenz E250 609",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 105000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 4163.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1860.0,
                        LengthMM = 4890.0,
                        ManufactureYear = 2003,
                        Mileage = 155000.0,
                        PeakPowerHP = 196.0,
                        PeakTorqueNM = 431.0,
                        PredictedPrice = 91237.01m,
                        PricePerMonth = 8750.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1940.0,
                        CarModelID = ToyotaLandCruiser.ID,
                        CarModel = ToyotaLandCruiser,
                        Title = "Toyota LandCruiser 610",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 82900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1797.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4590.0,
                        ManufactureYear = 2014,
                        Mileage = 40000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 60689.49m,
                        PricePerMonth = 6908.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 611",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 51800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4190.0,
                        ManufactureYear = 2017,
                        Mileage = 25000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 57711.62m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1660.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 612",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 10999.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1474.0,
                        LengthMM = 4879.0,
                        ManufactureYear = 1997,
                        Mileage = 190000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 69242.65m,
                        PricePerMonth = 916.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE200.ID,
                        CarModel = MercedesBenzE200,
                        Title = "MercedesBenz E200 613",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 46800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1484.0,
                        LengthMM = 4628.0,
                        ManufactureYear = 2011,
                        Mileage = 140000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 320.0,
                        PredictedPrice = 65036.05m,
                        PricePerMonth = 3900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2776.0,
                        WidthMM = 1865.0,
                        CarModelID = VolvoS60.ID,
                        CarModel = VolvoS60,
                        Title = "Volvo S60 614",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 4800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 659.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 2005,
                        Mileage = 165000.0,
                        PeakPowerHP = 31.0,
                        PeakTorqueNM = 49.0,
                        PredictedPrice = 5976.62m,
                        PricePerMonth = 400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 615",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 119000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2457.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4415.0,
                        ManufactureYear = 2011,
                        Mileage = 60000.0,
                        PeakPowerHP = 300.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 73234.97m,
                        PricePerMonth = 9916.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2625.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruImpreza.ID,
                        CarModel = SubaruImpreza,
                        Title = "Subaru Impreza 616",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1491.0,
                        LengthMM = 4331.0,
                        ManufactureYear = 2017,
                        Mileage = 65000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 26703.81m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1689.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 617",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 69800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1797.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4590.0,
                        ManufactureYear = 2013,
                        Mileage = 40000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 62553.18m,
                        PricePerMonth = 5816.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 618",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 155000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1612.0,
                        LengthMM = 4439.0,
                        ManufactureYear = 2018,
                        Mileage = 30000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 132625.03m,
                        PricePerMonth = 12916.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1821.0,
                        CarModelID = BmwX1.ID,
                        CarModel = BmwX1,
                        Title = "Bmw X1 619",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 48700.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1703.0,
                        LengthMM = 4426.0,
                        ManufactureYear = 2012,
                        Mileage = 185000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 61158.75m,
                        PricePerMonth = 4058.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2604.0,
                        WidthMM = 1809.0,
                        CarModelID = VolkswagenTiguan.ID,
                        CarModel = VolkswagenTiguan,
                        Title = "Volkswagen Tiguan 620",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1557.0,
                        LengthMM = 4158.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 35440.07m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1740.0,
                        CarModelID = Peugeot2008.ID,
                        CarModel = Peugeot2008,
                        Title = "Peugeot 2008 621",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4420.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 31683.2m,
                        PricePerMonth = 2158.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1690.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 622",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 76800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1557.0,
                        LengthMM = 4359.0,
                        ManufactureYear = 2014,
                        Mileage = 105000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 89298.18m,
                        PricePerMonth = 6400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1786.0,
                        CarModelID = MercedesBenzB200.ID,
                        CarModel = MercedesBenzB200,
                        Title = "MercedesBenz B200 623",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1638.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 29141.14m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2727.0,
                        WidthMM = 2118.0,
                        CarModelID = Peugeot5008.ID,
                        CarModel = Peugeot5008,
                        Title = "Peugeot 5008 624",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34800.0m,
                        Colour = "Yellow",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 3626.0,
                        ManufactureYear = 2005,
                        Mileage = 165000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 149.0,
                        PredictedPrice = 36306.21m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1688.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 625",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 119800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2356.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2014,
                        Mileage = 60000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 100754.76m,
                        PricePerMonth = 9983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 626",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4495.0,
                        ManufactureYear = 2009,
                        Mileage = 90000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 143.0,
                        PredictedPrice = 26880.78m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2535.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanSentra.ID,
                        CarModel = NissanSentra,
                        Title = "Nissan Sentra 627",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4930.0,
                        ManufactureYear = 2003,
                        Mileage = 160000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 179.0,
                        PredictedPrice = 27099.76m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1780.0,
                        CarModelID = NissanCefiro.ID,
                        CarModel = NissanCefiro,
                        Title = "Nissan Cefiro 628",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 59800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 3239.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1360.0,
                        LengthMM = 5025.0,
                        ManufactureYear = 1997,
                        Mileage = 155000.0,
                        PeakPowerHP = 243.0,
                        PeakTorqueNM = 316.0,
                        PredictedPrice = 42646.21m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2870.0,
                        WidthMM = 1800.0,
                        CarModelID = JaguarXj6.ID,
                        CarModel = JaguarXj6,
                        Title = "Jaguar Xj6 629",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 22999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1435.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 26249.71m,
                        PricePerMonth = 1916.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 630",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1430.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2006,
                        Mileage = 300000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 12310.19m,
                        PricePerMonth = 1083.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 631",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 195800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4526.0,
                        ManufactureYear = 2020,
                        Mileage = 10000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 142644.91m,
                        PricePerMonth = 16316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1800.0,
                        CarModelID = Bmw218I.ID,
                        CarModel = Bmw218I,
                        Title = "Bmw 218I 632",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 106999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1440.0,
                        LengthMM = 4329.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 177.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 98881.34m,
                        PricePerMonth = 8916.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2690.0,
                        WidthMM = 1765.0,
                        CarModelID = Bmw120I.ID,
                        CarModel = Bmw120I,
                        Title = "Bmw 120I 633",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4420.0,
                        ManufactureYear = 2010,
                        Mileage = 165000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 32168.32m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1690.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 634",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2013,
                        Mileage = 100000.0,
                        PeakPowerHP = 131.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 35683.66m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1775.0,
                        CarModelID = HyundaiElantra.ID,
                        CarModel = HyundaiElantra,
                        Title = "Hyundai Elantra 635",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 73800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4705.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 241.0,
                        PredictedPrice = 79055.97m,
                        PricePerMonth = 6150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 636",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 35800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1790.0,
                        LengthMM = 4920.0,
                        ManufactureYear = 2004,
                        Mileage = 175000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 38480.31m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1845.0,
                        CarModelID = HondaElysion.ID,
                        CarModel = HondaElysion,
                        Title = "Honda Elysion 637",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 95888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 130027.97m,
                        PricePerMonth = 7990.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 638",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4525.0,
                        ManufactureYear = 2013,
                        Mileage = 96000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 46679.55m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1755.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 639",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 6000.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1587.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4601.090693538827,
                        ManufactureYear = 1994,
                        Mileage = 125000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 20673.17m,
                        PricePerMonth = 500.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaCorolla.ID,
                        CarModel = ToyotaCorolla,
                        Title = "Toyota Corolla 640",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8000.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4465.0,
                        ManufactureYear = 2006,
                        Mileage = 210000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 14243.76m,
                        PricePerMonth = 666.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1740.0,
                        CarModelID = ProtonWaja.ID,
                        CarModel = ProtonWaja,
                        Title = "Proton Waja 641",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 126800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1450.0,
                        LengthMM = 4580.0,
                        ManufactureYear = 2019,
                        Mileage = 10000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 112322.0m,
                        PricePerMonth = 10566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1795.0,
                        CarModelID = Mazda3.ID,
                        CarModel = Mazda3,
                        Title = "Mazda 3 642",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 47800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 43363.06m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 643",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68800.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 4800.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 188.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 72989.12m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1840.0,
                        CarModelID = Mazda6.ID,
                        CarModel = Mazda6,
                        Title = "Mazda 6 644",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 39900.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1779.0,
                        LengthMM = 5295.0,
                        ManufactureYear = 2011,
                        Mileage = 55000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 314.0,
                        PredictedPrice = 49098.21m,
                        PricePerMonth = 3325.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 645",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 36888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4695.0,
                        ManufactureYear = 2005,
                        Mileage = 150000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 241.0,
                        PredictedPrice = 37264.22m,
                        PricePerMonth = 3074.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1540.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 646",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 479800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4922.0,
                        ManufactureYear = 2019,
                        Mileage = 5000.0,
                        PeakPowerHP = 340.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 390712.18m,
                        PricePerMonth = 39983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2975.0,
                        WidthMM = 2004.0,
                        CarModelID = BmwX5.ID,
                        CarModel = BmwX5,
                        Title = "Bmw X5 647",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2014,
                        Mileage = 50000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 43594.98m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 648",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37700.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1373.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4265.0,
                        ManufactureYear = 2017,
                        Mileage = 30000.0,
                        PeakPowerHP = 92.0,
                        PeakTorqueNM = 130.0,
                        PredictedPrice = 38197.82m,
                        PricePerMonth = 3141.67m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = ProtonErtiga.ID,
                        CarModel = ProtonErtiga,
                        Title = "Proton Ertiga 649",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 7800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2299.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.LeadedPetrol],
                        HeightMM = 1463.0,
                        LengthMM = 4818.0,
                        ManufactureYear = 1989,
                        Mileage = 105000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 41431.75m,
                        PricePerMonth = 650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2854.0,
                        WidthMM = 1822.0,
                        CarModelID = MercedesBenzE230.ID,
                        CarModel = MercedesBenzE230,
                        Title = "MercedesBenz E230 650",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 155800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2693.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4760.0,
                        ManufactureYear = 2014,
                        Mileage = 40000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 246.0,
                        PredictedPrice = 119461.71m,
                        PricePerMonth = 12983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2790.0,
                        WidthMM = 1885.0,
                        CarModelID = ToyotaLandCruiserPrado.ID,
                        CarModel = ToyotaLandCruiserPrado,
                        Title = "Toyota LandCruiserPrado 651",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 3600.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1360.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2001,
                        Mileage = 125000.0,
                        PeakPowerHP = 75.0,
                        PeakTorqueNM = 109.0,
                        PredictedPrice = 6484.45m,
                        PricePerMonth = 300.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2380.0,
                        WidthMM = 1655.0,
                        CarModelID = ProtonIswara.ID,
                        CarModel = ProtonIswara,
                        Title = "Proton Iswara 652",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 49800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 54053.86m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1695.0,
                        CarModelID = Mazda2.ID,
                        CarModel = Mazda2,
                        Title = "Mazda 2 653",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 143000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1986.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4720.0,
                        ManufactureYear = 2015,
                        Mileage = 55000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 193.0,
                        PredictedPrice = 118501.92m,
                        PricePerMonth = 11916.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 654",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 43900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1810.0,
                        LengthMM = 5255.0,
                        ManufactureYear = 2009,
                        Mileage = 150000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 51099.39m,
                        PricePerMonth = 3658.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 655",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2017,
                        Mileage = 75000.0,
                        PeakPowerHP = 68.0,
                        PeakTorqueNM = 91.0,
                        PredictedPrice = 26800.12m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 656",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30888.0m,
                        Colour = "Yellow",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3775.0,
                        ManufactureYear = 2012,
                        Mileage = 130788.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 29352.35m,
                        PricePerMonth = 2574.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 657",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1421.0,
                        LengthMM = 4324.0,
                        ManufactureYear = 2014,
                        Mileage = 115000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 62722.97m,
                        PricePerMonth = 5566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2690.0,
                        WidthMM = 1765.0,
                        CarModelID = Bmw118I.ID,
                        CarModel = Bmw118I,
                        Title = "Bmw 118I 658",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 33800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1490.0,
                        LengthMM = 4480.0,
                        ManufactureYear = 2012,
                        Mileage = 145000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 34343.58m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1745.0,
                        CarModelID = ToyotaPrius.ID,
                        CarModel = ToyotaPrius,
                        Title = "Toyota Prius 659",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 149900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1441.0,
                        LengthMM = 4253.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 194.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 165797.62m,
                        PricePerMonth = 12491.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1800.0,
                        CarModelID = MiniClubman.ID,
                        CarModel = MiniClubman,
                        Title = "Mini Clubman 660",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1438.0,
                        LengthMM = 4477.0,
                        ManufactureYear = 2010,
                        Mileage = 120000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 17633.86m,
                        PricePerMonth = 1400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1725.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 661",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 60900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1668.0,
                        LengthMM = 3989.0,
                        ManufactureYear = 2017,
                        Mileage = 90000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 58107.92m,
                        PricePerMonth = 5075.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 662",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1438.0,
                        LengthMM = 4477.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 20494.64m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1725.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 663",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 82800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2442.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5280.0,
                        ManufactureYear = 2018,
                        Mileage = 55000.0,
                        PeakPowerHP = 181.0,
                        PeakTorqueNM = 430.0,
                        PredictedPrice = 90270.14m,
                        PricePerMonth = 6900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1815.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 664",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2008,
                        Mileage = 115000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 14383.36m,
                        PricePerMonth = 816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 665",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 96800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2442.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5280.0,
                        ManufactureYear = 2017,
                        Mileage = 57500.0,
                        PeakPowerHP = 181.0,
                        PeakTorqueNM = 430.0,
                        PredictedPrice = 90270.14m,
                        PricePerMonth = 8066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1815.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 666",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 31800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1466.0,
                        LengthMM = 4358.0,
                        ManufactureYear = 2012,
                        Mileage = 89000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 202.0,
                        PredictedPrice = 38913.77m,
                        PricePerMonth = 2650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2648.0,
                        WidthMM = 1824.0,
                        CarModelID = FordFocus.ID,
                        CarModel = FordFocus,
                        Title = "Ford Focus 667",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 64800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4454.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 81838.61m,
                        PricePerMonth = 5400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1798.0,
                        CarModelID = BmwX1.ID,
                        CarModel = BmwX1,
                        Title = "Bmw X1 668",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 65800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 181.0,
                        PeakTorqueNM = 231.0,
                        PredictedPrice = 73058.17m,
                        PricePerMonth = 5483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1825.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 669",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 55500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5359.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 375.0,
                        PredictedPrice = 58327.43m,
                        PricePerMonth = 4625.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1850.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 670",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25183.88m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 671",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 62800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1750.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2006,
                        Mileage = 170000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 62158.5m,
                        PricePerMonth = 5233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 672",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 30125.86m,
                        PricePerMonth = 2075.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 673",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 269888.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1431.0,
                        LengthMM = 4761.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 324.0,
                        PeakTorqueNM = 640.0,
                        PredictedPrice = 237514.99m,
                        PricePerMonth = 22490.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2872.0,
                        WidthMM = 1850.0,
                        CarModelID = VolvoS60.ID,
                        CarModel = VolvoS60,
                        Title = "Volvo S60 674",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 42800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4080.0,
                        ManufactureYear = 2012,
                        Mileage = 10000.0,
                        PeakPowerHP = 124.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 50221.64m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 675",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 52800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1477.0,
                        LengthMM = 4440.0,
                        ManufactureYear = 2016,
                        Mileage = 95000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 52650.99m,
                        PricePerMonth = 4400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 676",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 18800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 21852.85m,
                        PricePerMonth = 1566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 677",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 186800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1762.0,
                        LengthMM = 4886.0,
                        ManufactureYear = 2018,
                        Mileage = 80000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 200354.49m,
                        PricePerMonth = 15566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2933.0,
                        WidthMM = 1938.0,
                        CarModelID = BmwX5.ID,
                        CarModel = BmwX5,
                        Title = "Bmw X5 678",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 12800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1511.357142857143,
                        LengthMM = 4512.571428571428,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 75.0,
                        PeakTorqueNM = 114.0,
                        PredictedPrice = 16611.77m,
                        PricePerMonth = 1066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2605.0,
                        WidthMM = 1804.857142857143,
                        CarModelID = RenaultKangoo.ID,
                        CarModel = RenaultKangoo,
                        Title = "Renault Kangoo 679",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1557.0,
                        LengthMM = 4158.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 35440.07m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1740.0,
                        CarModelID = Peugeot2008.ID,
                        CarModel = Peugeot2008,
                        Title = "Peugeot 2008 680",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 67800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1715.0,
                        LengthMM = 4640.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 72881.39m,
                        PricePerMonth = 5650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2705.0,
                        WidthMM = 1820.0,
                        CarModelID = NissanXTrail.ID,
                        CarModel = NissanXTrail,
                        Title = "Nissan XTrail 681",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 47800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4525.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 43123.16m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1755.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 682",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 42800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1790.0,
                        LengthMM = 4845.0,
                        ManufactureYear = 2008,
                        Mileage = 130000.0,
                        PeakPowerHP = 250.0,
                        PeakTorqueNM = 309.0,
                        PredictedPrice = 52085.89m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1830.0,
                        CarModelID = HondaElysion.ID,
                        CarModel = HondaElysion,
                        Title = "Honda Elysion 683",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2016,
                        Mileage = 85000.0,
                        PeakPowerHP = 129.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 46715.83m,
                        PricePerMonth = 3083.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1775.0,
                        CarModelID = HyundaiElantra.ID,
                        CarModel = HyundaiElantra,
                        Title = "Hyundai Elantra 684",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 50800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1421.0,
                        LengthMM = 4531.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 222.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 38961.04m,
                        PricePerMonth = 4233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1817.0,
                        CarModelID = Bmw325I.ID,
                        CarModel = Bmw325I,
                        Title = "Bmw 325I 685",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 30800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4510.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 152.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 34171.28m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1740.0,
                        CarModelID = ToyotaCaldina.ID,
                        CarModel = ToyotaCaldina,
                        Title = "Toyota Caldina 686",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 16888.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2011,
                        Mileage = 70000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 22030.36m,
                        PricePerMonth = 1407.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 687",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1865.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2014,
                        Mileage = 60000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 59984.98m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2860.0,
                        WidthMM = 1735.0,
                        CarModelID = NissanSerena.ID,
                        CarModel = NissanSerena,
                        Title = "Nissan Serena 688",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 55700.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 4575.0,
                        ManufactureYear = 2009,
                        Mileage = 115000.0,
                        PeakPowerHP = 208.0,
                        PeakTorqueNM = 252.0,
                        PredictedPrice = 67425.33m,
                        PricePerMonth = 4641.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1800.0,
                        CarModelID = LexusIs250.ID,
                        CarModel = LexusIs250,
                        Title = "Lexus Is250 689",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 35800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 34326.79m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 690",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 145900.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1450.0,
                        LengthMM = 4900.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 235.0,
                        PredictedPrice = 117976.34m,
                        PricePerMonth = 12158.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2820.0,
                        WidthMM = 1820.0,
                        CarModelID = LexusEs250.ID,
                        CarModel = LexusEs250,
                        Title = "Lexus Es250 691",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 23596.64m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 692",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2009,
                        Mileage = 75000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 38595.11m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 693",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 62700.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4235.0,
                        ManufactureYear = 2016,
                        Mileage = 35000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 143.0,
                        PredictedPrice = 64967.81m,
                        PricePerMonth = 5225.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaSienta.ID,
                        CarModel = ToyotaSienta,
                        Title = "Toyota Sienta 694",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 92888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1710.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2016,
                        Mileage = 70000.0,
                        PeakPowerHP = 171.0,
                        PeakTorqueNM = 226.0,
                        PredictedPrice = 99191.85m,
                        PricePerMonth = 7740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2690.0,
                        WidthMM = 1865.0,
                        CarModelID = RenaultKoleos.ID,
                        CarModel = RenaultKoleos,
                        Title = "Renault Koleos 695",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 66800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4595.0,
                        ManufactureYear = 2016,
                        Mileage = 55000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 68822.49m,
                        PricePerMonth = 5566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruForester.ID,
                        CarModel = SubaruForester,
                        Title = "Subaru Forester 696",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23900.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1491.0,
                        LengthMM = 4331.0,
                        ManufactureYear = 2018,
                        Mileage = 45000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 27107.3m,
                        PricePerMonth = 1991.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1689.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 697",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 64800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1797.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4600.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 55515.29m,
                        PricePerMonth = 5400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1720.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 698",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 72888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2015,
                        Mileage = 75233.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 67004.36m,
                        PricePerMonth = 6074.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 699",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 103800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2393.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5330.0,
                        ManufactureYear = 2018,
                        Mileage = 80000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 95909.43m,
                        PricePerMonth = 8650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1855.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 700",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 148800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1561.0,
                        LengthMM = 4110.0,
                        ManufactureYear = 2017,
                        Mileage = 70000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 122117.52m,
                        PricePerMonth = 12400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2595.0,
                        WidthMM = 1789.0,
                        CarModelID = MiniCountryman.ID,
                        CarModel = MiniCountryman,
                        Title = "Mini Countryman 701",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 53800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 194.0,
                        PredictedPrice = 47948.7m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1780.0,
                        CarModelID = KiaCerato.ID,
                        CarModel = KiaCerato,
                        Title = "Kia Cerato 702",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 52800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1484.0,
                        LengthMM = 4628.0,
                        ManufactureYear = 2012,
                        Mileage = 115000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 63016.11m,
                        PricePerMonth = 4400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2776.0,
                        WidthMM = 1865.0,
                        CarModelID = VolvoV60.ID,
                        CarModel = VolvoV60,
                        Title = "Volvo V60 703",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 52800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4075.0,
                        ManufactureYear = 2013,
                        Mileage = 105000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 48008.3m,
                        PricePerMonth = 4400.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 704",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 44888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 129.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 40298.39m,
                        PricePerMonth = 3740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1780.0,
                        CarModelID = KiaCerato.ID,
                        CarModel = KiaCerato,
                        Title = "Kia Cerato 705",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 45800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5280.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 324.0,
                        PredictedPrice = 59422.87m,
                        PricePerMonth = 3816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1815.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 706",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1638.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 27311.66m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2727.0,
                        WidthMM = 2118.0,
                        CarModelID = Peugeot5008.ID,
                        CarModel = Peugeot5008,
                        Title = "Peugeot 5008 707",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1471.0,
                        LengthMM = 4868.0,
                        ManufactureYear = 2010,
                        Mileage = 110000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 86073.44m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE200Cgi.ID,
                        CarModel = MercedesBenzE200Cgi,
                        Title = "MercedesBenz E200Cgi 708",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 139800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1432.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2015,
                        Mileage = 90000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 128961.72m,
                        PricePerMonth = 11650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1777.0,
                        CarModelID = MercedesBenzCla200.ID,
                        CarModel = MercedesBenzCla200,
                        Title = "MercedesBenz Cla200 709",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 46888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1655.0,
                        LengthMM = 5200.0,
                        ManufactureYear = 2015,
                        Mileage = 125000.0,
                        PeakPowerHP = 110.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 57130.3m,
                        PricePerMonth = 3907.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1785.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 710",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2009,
                        Mileage = 125000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 35850.6m,
                        PricePerMonth = 2333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 711",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 73888.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2014,
                        Mileage = 115000.0,
                        PeakPowerHP = 185.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 74153.36m,
                        PricePerMonth = 6157.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 712",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 19888.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2261.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1770.0,
                        LengthMM = 4480.0,
                        ManufactureYear = 2012,
                        Mileage = 80000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 51900.79m,
                        PricePerMonth = 1657.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1845.0,
                        CarModelID = FordEscape.ID,
                        CarModel = FordEscape,
                        Title = "Ford Escape 713",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 26800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2008,
                        Mileage = 95000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 27872.08m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRush.ID,
                        CarModel = ToyotaRush,
                        Title = "Toyota Rush 714",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2017,
                        Mileage = 66000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 74233.99m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 715",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1760.0,
                        LengthMM = 4585.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 39804.64m,
                        PricePerMonth = 3166.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 716",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 54999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1750.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2006,
                        Mileage = 55000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 69478.81m,
                        PricePerMonth = 4583.25m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 717",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 3905.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 16652.9m,
                        PricePerMonth = 1400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1710.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 718",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 136880.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1835.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2018,
                        Mileage = 75000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 122761.17m,
                        PricePerMonth = 11406.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2745.0,
                        WidthMM = 4855.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 719",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 248800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1780.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 340.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 275246.9m,
                        PricePerMonth = 20733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2923.0,
                        WidthMM = 2073.0,
                        CarModelID = LandRoverRangeRoverSport.ID,
                        CarModel = LandRoverRangeRoverSport,
                        Title = "LandRover RangeRoverSport 720",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 55000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 1300.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1472.8516746411483,
                        LengthMM = 3942.555023923445,
                        ManufactureYear = 1968,
                        Mileage = 80000.0,
                        PeakPowerHP = 166.83644859813083,
                        PeakTorqueNM = 231.285046728972,
                        PredictedPrice = 66865.26m,
                        PricePerMonth = 4583.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2545.845794392523,
                        WidthMM = 1747.066985645933,
                        CarModelID = MiniMk2.ID,
                        CarModel = MiniMk2,
                        Title = "Mini Mk2 721",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2012,
                        Mileage = 105000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 23660.85m,
                        PricePerMonth = 1483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 722",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16999.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1800.0,
                        LengthMM = 4935.0,
                        ManufactureYear = 2002,
                        Mileage = 80000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 33151.13m,
                        PricePerMonth = 1416.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2960.0,
                        WidthMM = 1775.0,
                        CarModelID = MitsubishiStorm.ID,
                        CarModel = MitsubishiStorm,
                        Title = "Mitsubishi Storm 723",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 55800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1760.0,
                        LengthMM = 4585.0,
                        ManufactureYear = 2014,
                        Mileage = 115000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 45432.45m,
                        PricePerMonth = 4650.0m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 724",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 63800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1456.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2017,
                        Mileage = 80000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 101482.41m,
                        PricePerMonth = 5316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2817.0,
                        WidthMM = 1828.0,
                        CarModelID = Peugeot508.ID,
                        CarModel = Peugeot508,
                        Title = "Peugeot 508 725",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25730.32m,
                        PricePerMonth = 2083.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 726",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 10800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1296.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1715.0,
                        LengthMM = 3875.0,
                        ManufactureYear = 1998,
                        Mileage = 190000.0,
                        PeakPowerHP = 83.0,
                        PeakTorqueNM = 105.0,
                        PredictedPrice = 13939.06m,
                        PricePerMonth = 900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2420.0,
                        WidthMM = 1555.0,
                        CarModelID = PeroduaKembara.ID,
                        CarModel = PeroduaKembara,
                        Title = "Perodua Kembara 727",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4999.0,
                        ManufactureYear = 2017,
                        Mileage = 40000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 72022.61m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 728",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 11800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4601.090693538827,
                        ManufactureYear = 1999,
                        Mileage = 205000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 181.0,
                        PredictedPrice = 17026.53m,
                        PricePerMonth = 983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2735.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaNadia.ID,
                        CarModel = ToyotaNadia,
                        Title = "Toyota Nadia 729",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1488.0,
                        LengthMM = 4750.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 93924.88m,
                        PricePerMonth = 5233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1820.0,
                        CarModelID = Peugeot408.ID,
                        CarModel = Peugeot408,
                        Title = "Peugeot 408 730",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 133888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4595.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 268.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 142441.89m,
                        PricePerMonth = 11157.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruWrx.ID,
                        CarModel = SubaruWrx,
                        Title = "Subaru Wrx 731",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 248000.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 2979.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1383.0,
                        LengthMM = 4671.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 431.0,
                        PeakTorqueNM = 550.0,
                        PredictedPrice = 293028.54m,
                        PricePerMonth = 20666.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2812.0,
                        WidthMM = 1870.0,
                        CarModelID = BmwM4.ID,
                        CarModel = BmwM4,
                        Title = "Bmw M4 732",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 59900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4545.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 51267.1m,
                        PricePerMonth = 4991.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2620.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 733",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 188000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4690.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 194576.33m,
                        PricePerMonth = 15666.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC200.ID,
                        CarModel = MercedesBenzC200,
                        Title = "MercedesBenz C200 734",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 88800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 223.0,
                        PredictedPrice = 82974.57m,
                        PricePerMonth = 7400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 1950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 735",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 228900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1432.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 360.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 191759.21m,
                        PricePerMonth = 19075.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1777.0,
                        CarModelID = MercedesBenzCla45Amg.ID,
                        CarModel = MercedesBenzCla45Amg,
                        Title = "MercedesBenz Cla45Amg 736",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 4800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1150.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1480.0,
                        LengthMM = 3710.0,
                        ManufactureYear = 2007,
                        Mileage = 257440.0,
                        PeakPowerHP = 75.0,
                        PeakTorqueNM = 105.0,
                        PredictedPrice = 11460.5m,
                        PricePerMonth = 400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2395.0,
                        WidthMM = 1643.0,
                        CarModelID = ProtonSavvy.ID,
                        CarModel = ProtonSavvy,
                        Title = "Proton Savvy 737",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 188800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.2183673469387,
                        LengthMM = 4735.030612244898,
                        ManufactureYear = 2016,
                        Mileage = 90000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 185426.85m,
                        PricePerMonth = 15733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2868.4591836734694,
                        WidthMM = 1851.308163265306,
                        CarModelID = Bmw430I.ID,
                        CarModel = Bmw430I,
                        Title = "Bmw 430I 738",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 60800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 3955.0,
                        ManufactureYear = 2016,
                        Mileage = 65840.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 55621.12m,
                        PricePerMonth = 5066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 739",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 39800.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2018,
                        Mileage = 65000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 36602.51m,
                        PricePerMonth = 3316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 740",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 95900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4624.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 113911.78m,
                        PricePerMonth = 7991.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw320I.ID,
                        CarModel = Bmw320I,
                        Title = "Bmw 320I 741",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 399000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2996.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1496.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2019,
                        Mileage = 20000.0,
                        PeakPowerHP = 367.0,
                        PeakTorqueNM = 500.0,
                        PredictedPrice = 347069.94m,
                        PricePerMonth = 33250.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3035.0,
                        WidthMM = 1899.0,
                        CarModelID = MercedesBenzS560E.ID,
                        CarModel = MercedesBenzS560E,
                        Title = "MercedesBenz S560E 742",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23707.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1425.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2012,
                        Mileage = 82000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 25986.24m,
                        PricePerMonth = 1975.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 743",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1471.0,
                        LengthMM = 4821.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 194.0,
                        PredictedPrice = 46435.43m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2794.0,
                        WidthMM = 1834.0,
                        CarModelID = HyundaiSonata.ID,
                        CarModel = HyundaiSonata,
                        Title = "Hyundai Sonata 744",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 99800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2017,
                        Mileage = 70000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 124908.02m,
                        PricePerMonth = 8316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw318I.ID,
                        CarModel = Bmw318I,
                        Title = "Bmw 318I 745",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1584.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4465.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 12411.3m,
                        PricePerMonth = 816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1740.0,
                        CarModelID = ProtonWaja.ID,
                        CarModel = ProtonWaja,
                        Title = "Proton Waja 746",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 17500.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2012,
                        Mileage = 105000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 21580.17m,
                        PricePerMonth = 1458.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 747",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1430.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 45485.41m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1765.0,
                        CarModelID = LexusCt200H.ID,
                        CarModel = LexusCt200H,
                        Title = "Lexus Ct200H 748",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 54800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1477.0,
                        LengthMM = 4442.0,
                        ManufactureYear = 2017,
                        Mileage = 95000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 55658.5m,
                        PricePerMonth = 4566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 749",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 26800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1435.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2011,
                        Mileage = 90000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 25758.67m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 750",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 847.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2004,
                        Mileage = 175000.0,
                        PeakPowerHP = 50.0,
                        PeakTorqueNM = 74.0,
                        PredictedPrice = 9779.75m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 751",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 18800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 3750.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 87.0,
                        PeakTorqueNM = 116.0,
                        PredictedPrice = 20041.11m,
                        PricePerMonth = 1566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 752",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 57900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 42007.32m,
                        PricePerMonth = 4825.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 753",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1715.0,
                        LengthMM = 5080.0,
                        ManufactureYear = 2005,
                        Mileage = 120000.0,
                        PeakPowerHP = 133.0,
                        PeakTorqueNM = 304.0,
                        PredictedPrice = 36543.28m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1825.0,
                        CarModelID = NissanFrontier.ID,
                        CarModel = NissanFrontier,
                        Title = "Nissan Frontier 754",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1447.0,
                        LengthMM = 4676.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 21789.24m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2725.0,
                        WidthMM = 1811.0,
                        CarModelID = Peugeot407.ID,
                        CarModel = Peugeot407,
                        Title = "Peugeot 407 755",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2014,
                        Mileage = 115000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 35470.6m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 756",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 79800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2967.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4961.0,
                        ManufactureYear = 2010,
                        Mileage = 80000.0,
                        PeakPowerHP = 238.0,
                        PeakTorqueNM = 293.0,
                        PredictedPrice = 76361.1m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2909.0,
                        WidthMM = 1877.0,
                        CarModelID = JaguarXf.ID,
                        CarModel = JaguarXf,
                        Title = "Jaguar Xf 757",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 93999.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1713.0,
                        LengthMM = 4627.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 320.0,
                        PredictedPrice = 93910.0m,
                        PricePerMonth = 7833.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2774.0,
                        WidthMM = 2120.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 758",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1471.0,
                        LengthMM = 4821.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 194.0,
                        PredictedPrice = 45884.51m,
                        PricePerMonth = 3658.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2794.0,
                        WidthMM = 1834.0,
                        CarModelID = HyundaiSonata.ID,
                        CarModel = HyundaiSonata,
                        Title = "Hyundai Sonata 759",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 185000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 4806.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1702.0,
                        LengthMM = 4846.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 500.0,
                        PeakTorqueNM = 700.0,
                        PredictedPrice = 267045.98m,
                        PricePerMonth = 15416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2895.0,
                        WidthMM = 1939.0,
                        CarModelID = PorscheCayenne.ID,
                        CarModel = PorscheCayenne,
                        Title = "Porsche Cayenne 760",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 4387.0,
                        ManufactureYear = 2017,
                        Mileage = 60000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 34817.56m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 761",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 47800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 43363.06m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 762",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 128800.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 4005.0,
                        ManufactureYear = 2015,
                        Mileage = 95000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 126815.01m,
                        PricePerMonth = 10733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2567.0,
                        WidthMM = 1727.0,
                        CarModelID = Mini5Door.ID,
                        CarModel = Mini5Door,
                        Title = "Mini 5Door 763",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 47800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1452.0,
                        LengthMM = 3976.0,
                        ManufactureYear = 2012,
                        Mileage = 98100.0,
                        PeakPowerHP = 179.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 49555.26m,
                        PricePerMonth = 3983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2468.0,
                        WidthMM = 1682.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 764",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 113000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 209.0,
                        PeakTorqueNM = 253.0,
                        PredictedPrice = 112502.75m,
                        PricePerMonth = 9416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1840.0,
                        CarModelID = LexusGs250.ID,
                        CarModel = LexusGs250,
                        Title = "Lexus Gs250 765",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41995.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1373.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4265.0,
                        ManufactureYear = 2018,
                        Mileage = 120000.0,
                        PeakPowerHP = 92.0,
                        PeakTorqueNM = 130.0,
                        PredictedPrice = 35182.63m,
                        PricePerMonth = 3499.58m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = ProtonErtiga.ID,
                        CarModel = ProtonErtiga,
                        Title = "Proton Ertiga 766",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 64800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4610.0,
                        ManufactureYear = 2016,
                        Mileage = 85000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 66108.39m,
                        PricePerMonth = 5400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruForester.ID,
                        CarModel = SubaruForester,
                        Title = "Subaru Forester 767",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 85700.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4624.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 96052.44m,
                        PricePerMonth = 7141.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw320I.ID,
                        CarModel = Bmw320I,
                        Title = "Bmw 320I 768",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 45800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5230.0,
                        ManufactureYear = 2011,
                        Mileage = 110000.0,
                        PeakPowerHP = 174.0,
                        PeakTorqueNM = 403.0,
                        PredictedPrice = 54759.41m,
                        PricePerMonth = 3816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1850.0,
                        CarModelID = NissanNavara.ID,
                        CarModel = NissanNavara,
                        Title = "Nissan Navara 769",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 234999.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1468.0,
                        LengthMM = 4923.0,
                        ManufactureYear = 2017,
                        Mileage = 55000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 188549.46m,
                        PricePerMonth = 19583.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2939.0,
                        WidthMM = 1852.0,
                        CarModelID = MercedesBenzE250.ID,
                        CarModel = MercedesBenzE250,
                        Title = "MercedesBenz E250 770",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26800.0m,
                        Colour = "Yellow",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3685.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 29517.17m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 771",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 32800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1421.0,
                        LengthMM = 4531.0,
                        ManufactureYear = 2010,
                        Mileage = 122500.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 37240.86m,
                        PricePerMonth = 2733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1817.0,
                        CarModelID = Bmw320I.ID,
                        CarModel = Bmw320I,
                        Title = "Bmw 320I 772",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 25800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4540.0,
                        ManufactureYear = 2009,
                        Mileage = 90000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 32893.49m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaCorollaAltis.ID,
                        CarModel = ToyotaCorollaAltis,
                        Title = "Toyota CorollaAltis 773",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 41800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4856.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 51602.09m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2795.0,
                        WidthMM = 1835.0,
                        CarModelID = KiaOptimaK5.ID,
                        CarModel = KiaOptimaK5,
                        Title = "Kia OptimaK5 774",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 62800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2359.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1680.0,
                        LengthMM = 4690.0,
                        ManufactureYear = 2014,
                        Mileage = 160000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 227.0,
                        PredictedPrice = 66638.02m,
                        PricePerMonth = 5233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1880.0,
                        CarModelID = HyundaiSantaFe.ID,
                        CarModel = HyundaiSantaFe,
                        Title = "Hyundai SantaFe 775",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 69800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2018,
                        Mileage = 15000.0,
                        PeakPowerHP = 129.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 55161.45m,
                        PricePerMonth = 5816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1780.0,
                        CarModelID = KiaCerato.ID,
                        CarModel = KiaCerato,
                        Title = "Kia Cerato 776",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 9900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1441.0,
                        LengthMM = 4818.0,
                        ManufactureYear = 1997,
                        Mileage = 105000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 33657.78m,
                        PricePerMonth = 825.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.HydraulicPower],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2833.0,
                        WidthMM = 1799.0,
                        CarModelID = MercedesBenzE280.ID,
                        CarModel = MercedesBenzE280,
                        Title = "MercedesBenz E280 777",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 37888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1655.0,
                        LengthMM = 5220.0,
                        ManufactureYear = 2014,
                        Mileage = 285000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 41698.14m,
                        PricePerMonth = 3157.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1750.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 778",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 22800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 3962.0,
                        ManufactureYear = 2014,
                        Mileage = 86500.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 26705.99m,
                        PricePerMonth = 1900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1739.0,
                        CarModelID = Peugeot208.ID,
                        CarModel = Peugeot208,
                        Title = "Peugeot 208 779",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4536.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 28676.7m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonSuprimaS.ID,
                        CarModel = ProtonSuprimaS,
                        Title = "Proton SuprimaS 780",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 116888.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1565.0,
                        LengthMM = 4360.0,
                        ManufactureYear = 2018,
                        Mileage = 35000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 171.0,
                        PredictedPrice = 95260.11m,
                        PricePerMonth = 9740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1795.0,
                        CarModelID = ToyotaCHr.ID,
                        CarModel = ToyotaCHr,
                        Title = "Toyota CHr 781",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2019,
                        Mileage = 40000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34702.08m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 782",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 35800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1790.0,
                        LengthMM = 4920.0,
                        ManufactureYear = 2004,
                        Mileage = 180000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 37785.24m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1845.0,
                        CarModelID = HondaElysion.ID,
                        CarModel = HondaElysion,
                        Title = "Honda Elysion 783",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 28888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1490.0,
                        LengthMM = 4460.0,
                        ManufactureYear = 2011,
                        Mileage = 100000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 33728.09m,
                        PricePerMonth = 2407.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1745.0,
                        CarModelID = ToyotaPrius.ID,
                        CarModel = ToyotaPrius,
                        Title = "Toyota Prius 784",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 112700.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1395.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1673.0,
                        LengthMM = 4486.0,
                        ManufactureYear = 2018,
                        Mileage = 50000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 116902.67m,
                        PricePerMonth = 9391.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2677.0,
                        WidthMM = 1839.0,
                        CarModelID = VolkswagenTiguan.ID,
                        CarModel = VolkswagenTiguan,
                        Title = "Volkswagen Tiguan 785",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 179999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2993.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1837.0,
                        LengthMM = 4829.0,
                        ManufactureYear = 2013,
                        Mileage = 145000.0,
                        PeakPowerHP = 253.0,
                        PeakTorqueNM = 600.0,
                        PredictedPrice = 213922.69m,
                        PricePerMonth = 14999.92m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2885.0,
                        WidthMM = 2022.0,
                        CarModelID = LandRoverDiscovery4.ID,
                        CarModel = LandRoverDiscovery4,
                        Title = "LandRover Discovery4 786",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 44800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4215.0,
                        ManufactureYear = 2010,
                        Mileage = 165000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 41339.54m,
                        PricePerMonth = 3733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1700.0,
                        CarModelID = HondaFreed.ID,
                        CarModel = HondaFreed,
                        Title = "Honda Freed 787",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 76700.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5362.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 200.0,
                        PeakTorqueNM = 470.0,
                        PredictedPrice = 85606.74m,
                        PricePerMonth = 6391.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1860.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 788",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 66900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4235.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 143.0,
                        PredictedPrice = 60923.67m,
                        PricePerMonth = 5575.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaSienta.ID,
                        CarModel = ToyotaSienta,
                        Title = "Toyota Sienta 789",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 41800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4215.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 40471.45m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1700.0,
                        CarModelID = HondaFreed.ID,
                        CarModel = HondaFreed,
                        Title = "Honda Freed 790",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 46800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4856.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 48881.13m,
                        PricePerMonth = 3900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2795.0,
                        WidthMM = 1835.0,
                        CarModelID = KiaOptimaK5.ID,
                        CarModel = KiaOptimaK5,
                        Title = "Kia OptimaK5 791",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 26200.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1660.0,
                        LengthMM = 4650.0,
                        ManufactureYear = 2004,
                        Mileage = 165000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 32831.86m,
                        PricePerMonth = 2183.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2825.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaIpsum.ID,
                        CarModel = ToyotaIpsum,
                        Title = "Toyota Ipsum 792",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1373.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4265.0,
                        ManufactureYear = 2017,
                        Mileage = 80000.0,
                        PeakPowerHP = 92.0,
                        PeakTorqueNM = 130.0,
                        PredictedPrice = 37809.61m,
                        PricePerMonth = 3166.58m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = ProtonErtiga.ID,
                        CarModel = ProtonErtiga,
                        Title = "Proton Ertiga 793",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1570.0,
                        LengthMM = 3695.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 91.0,
                        PeakTorqueNM = 117.0,
                        PredictedPrice = 24476.64m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 794",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 248800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2979.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1702.0,
                        LengthMM = 4909.0,
                        ManufactureYear = 2015,
                        Mileage = 50000.0,
                        PeakPowerHP = 306.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 237026.42m,
                        PricePerMonth = 20733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2933.0,
                        WidthMM = 1989.0,
                        CarModelID = BmwX6.ID,
                        CarModel = BmwX6,
                        Title = "Bmw X6 795",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 82800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1810.0,
                        LengthMM = 5255.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 403.0,
                        PredictedPrice = 76903.33m,
                        PricePerMonth = 6900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3150.0,
                        WidthMM = 1850.0,
                        CarModelID = NissanNavara.ID,
                        CarModel = NissanNavara,
                        Title = "Nissan Navara 796",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 133000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1986.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4720.0,
                        ManufactureYear = 2015,
                        Mileage = 50000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 193.0,
                        PredictedPrice = 120848.02m,
                        PricePerMonth = 11083.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 797",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 15800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2994.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1669.0,
                        LengthMM = 4575.0,
                        ManufactureYear = 1998,
                        Mileage = 205000.0,
                        PeakPowerHP = 220.0,
                        PeakTorqueNM = 304.0,
                        PredictedPrice = 20153.44m,
                        PricePerMonth = 1316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2619.0,
                        WidthMM = 1816.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 798",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4420.0,
                        ManufactureYear = 2008,
                        Mileage = 85000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 31635.63m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1690.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 799",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 27800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1425.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 26055.39m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 800",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 35800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1790.0,
                        LengthMM = 4920.0,
                        ManufactureYear = 2004,
                        Mileage = 175000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 38480.31m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1845.0,
                        CarModelID = HondaElysion.ID,
                        CarModel = HondaElysion,
                        Title = "Honda Elysion 801",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 56800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1925.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2012,
                        Mileage = 110000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 392.0,
                        PredictedPrice = 64848.03m,
                        PricePerMonth = 4733.33m,
                        SeatCapacity = 11,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1920.0,
                        CarModelID = HyundaiGrandStarex.ID,
                        CarModel = HyundaiGrandStarex,
                        Title = "Hyundai GrandStarex 802",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 44800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 129.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 39852.01m,
                        PricePerMonth = 3733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1780.0,
                        CarModelID = KiaCerato.ID,
                        CarModel = KiaCerato,
                        Title = "Kia Cerato 803",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34800.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 3626.0,
                        ManufactureYear = 2005,
                        Mileage = 165000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 149.0,
                        PredictedPrice = 37077.25m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1688.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 804",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 189000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4310.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 360.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 191365.82m,
                        PricePerMonth = 15750.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA45Amg.ID,
                        CarModel = MercedesBenzA45Amg,
                        Title = "MercedesBenz A45Amg 805",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2359.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1750.0,
                        LengthMM = 4685.0,
                        ManufactureYear = 2011,
                        Mileage = 110000.0,
                        PeakPowerHP = 177.0,
                        PeakTorqueNM = 226.0,
                        PredictedPrice = 42576.45m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1885.0,
                        CarModelID = KiaSorento.ID,
                        CarModel = KiaSorento,
                        Title = "Kia Sorento 806",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 176800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1414.0,
                        LengthMM = 3850.0,
                        ManufactureYear = 2018,
                        Mileage = 20000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 164893.42m,
                        PricePerMonth = 14733.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2495.0,
                        WidthMM = 1727.0,
                        CarModelID = Mini3Door.ID,
                        CarModel = Mini3Door,
                        Title = "Mini 3Door 807",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 59800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 52759.07m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 808",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 82999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1474.0,
                        LengthMM = 4879.0,
                        ManufactureYear = 2014,
                        Mileage = 100000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 137160.4m,
                        PricePerMonth = 6916.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE250.ID,
                        CarModel = MercedesBenzE250,
                        Title = "MercedesBenz E250 809",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 179800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1747.0,
                        LengthMM = 5075.0,
                        ManufactureYear = 2017,
                        Mileage = 100000.0,
                        PeakPowerHP = 231.0,
                        PeakTorqueNM = 420.0,
                        PredictedPrice = 176127.41m,
                        PricePerMonth = 14983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2930.0,
                        WidthMM = 1969.0,
                        CarModelID = MazdaCx9.ID,
                        CarModel = MazdaCx9,
                        Title = "Mazda Cx9 810",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 74800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1557.0,
                        LengthMM = 4359.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 90826.83m,
                        PricePerMonth = 6233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1786.0,
                        CarModelID = MercedesBenzB200.ID,
                        CarModel = MercedesBenzB200,
                        Title = "MercedesBenz B200 811",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 81800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 74547.78m,
                        PricePerMonth = 6816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 812",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 847.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2004,
                        Mileage = 175000.0,
                        PeakPowerHP = 50.0,
                        PeakTorqueNM = 74.0,
                        PredictedPrice = 9779.75m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 813",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 67999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1430.0,
                        LengthMM = 3723.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 38698.34m,
                        PricePerMonth = 5666.58m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1683.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 814",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 19800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1585.0,
                        LengthMM = 4995.0,
                        ManufactureYear = 2006,
                        Mileage = 145000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 158.0,
                        PredictedPrice = 33961.06m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1695.0,
                        CarModelID = MitsubishiL200.ID,
                        CarModel = MitsubishiL200,
                        Title = "Mitsubishi L200 815",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19990.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 124.0,
                        PeakTorqueNM = 156.0,
                        PredictedPrice = 29356.34m,
                        PricePerMonth = 1665.83m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1775.0,
                        CarModelID = KiaForte.ID,
                        CarModel = KiaForte,
                        Title = "Kia Forte 816",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 28800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1785.0,
                        LengthMM = 4750.0,
                        ManufactureYear = 2001,
                        Mileage = 370000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 221.0,
                        PredictedPrice = 36516.98m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1790.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 817",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 47700.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2015,
                        Mileage = 50000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 42845.99m,
                        PricePerMonth = 3975.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1600.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 818",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1570.0,
                        LengthMM = 3695.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 91.0,
                        PeakTorqueNM = 117.0,
                        PredictedPrice = 24632.98m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 819",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14400.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1434.0,
                        LengthMM = 3898.0,
                        ManufactureYear = 2011,
                        Mileage = 100000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 20950.61m,
                        PricePerMonth = 1200.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1745.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 820",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 118800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1675.0,
                        LengthMM = 4550.0,
                        ManufactureYear = 2018,
                        Mileage = 40000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 106340.41m,
                        PricePerMonth = 9900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 821",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 70800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2019,
                        Mileage = 10000.0,
                        PeakPowerHP = 129.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 54644.96m,
                        PricePerMonth = 5900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1780.0,
                        CarModelID = KiaCerato.ID,
                        CarModel = KiaCerato,
                        Title = "Kia Cerato 822",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 97800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4865.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 102220.49m,
                        PricePerMonth = 8150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 823",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 29700.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4300.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 34470.8m,
                        PricePerMonth = 2475.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 824",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 36286.2m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 825",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 45000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.3862212943632,
                        LengthMM = 4581.0,
                        ManufactureYear = 2009,
                        Mileage = 90000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 230.0,
                        PredictedPrice = 39435.77m,
                        PricePerMonth = 3750.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 1770.0,
                        CarModelID = MercedesBenzC180K.ID,
                        CarModel = MercedesBenzC180K,
                        Title = "MercedesBenz C180K 826",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4769.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 62168.42m,
                        PricePerMonth = 4150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2712.0,
                        WidthMM = 1820.0,
                        CarModelID = VolkswagenPassat.ID,
                        CarModel = VolkswagenPassat,
                        Title = "Volkswagen Passat 827",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 200800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1414.0,
                        LengthMM = 3850.0,
                        ManufactureYear = 2019,
                        Mileage = 35000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 160040.46m,
                        PricePerMonth = 16733.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2495.0,
                        WidthMM = 1727.0,
                        CarModelID = Mini3Door.ID,
                        CarModel = Mini3Door,
                        Title = "Mini 3Door 828",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 56800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2013,
                        Mileage = 125000.0,
                        PeakPowerHP = 154.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 62890.59m,
                        PricePerMonth = 4733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 829",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1396.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4045.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 137.0,
                        PredictedPrice = 28628.3m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1720.0,
                        CarModelID = KiaRio.ID,
                        CarModel = KiaRio,
                        Title = "Kia Rio 830",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 26800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1660.0,
                        LengthMM = 4650.0,
                        ManufactureYear = 2004,
                        Mileage = 175000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 31657.34m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2825.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaIpsum.ID,
                        CarModel = ToyotaIpsum,
                        Title = "Toyota Ipsum 831",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 128888.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1675.0,
                        LengthMM = 4550.0,
                        ManufactureYear = 2019,
                        Mileage = 35000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 106340.41m,
                        PricePerMonth = 10740.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 832",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 49900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2009,
                        Mileage = 145000.0,
                        PeakPowerHP = 152.0,
                        PeakTorqueNM = 194.0,
                        PredictedPrice = 35375.73m,
                        PricePerMonth = 4158.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1815.0,
                        CarModelID = ToyotaRav4.ID,
                        CarModel = ToyotaRav4,
                        Title = "Toyota Rav4 833",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 32800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2694.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1850.0,
                        LengthMM = 4695.0,
                        ManufactureYear = 2005,
                        Mileage = 155000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 241.0,
                        PredictedPrice = 37264.22m,
                        PricePerMonth = 2733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1540.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 834",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 400888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1665.0,
                        LengthMM = 4803.0,
                        ManufactureYear = 2017,
                        Mileage = 10000.0,
                        PeakPowerHP = 381.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 357210.74m,
                        PricePerMonth = 33407.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 2032.0,
                        CarModelID = LandRoverRangeRoverVelar.ID,
                        CarModel = LandRoverRangeRoverVelar,
                        Title = "LandRover RangeRoverVelar 835",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 42800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4080.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 124.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 44791.84m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 836",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 79800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 3598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1699.0,
                        LengthMM = 4792.0,
                        ManufactureYear = 2007,
                        Mileage = 95000.0,
                        PeakPowerHP = 290.0,
                        PeakTorqueNM = 385.0,
                        PredictedPrice = 154922.71m,
                        PricePerMonth = 6650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2855.0,
                        WidthMM = 1928.0,
                        CarModelID = PorscheCayenne.ID,
                        CarModel = PorscheCayenne,
                        Title = "Porsche Cayenne 837",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 54800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4075.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 48934.5m,
                        PricePerMonth = 4566.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 838",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 179000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4725.0,
                        ManufactureYear = 2018,
                        Mileage = 85000.0,
                        PeakPowerHP = 231.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 152138.88m,
                        PricePerMonth = 14916.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 839",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 59800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4595.0,
                        ManufactureYear = 2014,
                        Mileage = 95000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 53027.0m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1795.0,
                        CarModelID = SubaruForester.ID,
                        CarModel = SubaruForester,
                        Title = "Subaru Forester 840",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 29000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2013,
                        Mileage = 115000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 26457.76m,
                        PricePerMonth = 2416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 841",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 3690.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 91.0,
                        PeakTorqueNM = 117.0,
                        PredictedPrice = 24170.63m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 842",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34777.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2008,
                        Mileage = 135000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 41680.72m,
                        PricePerMonth = 2898.08m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1820.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 843",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1557.0,
                        LengthMM = 4158.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 35440.07m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1740.0,
                        CarModelID = Peugeot2008.ID,
                        CarModel = Peugeot2008,
                        Title = "Peugeot 2008 844",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 9900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1399.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1495.0,
                        LengthMM = 3825.0,
                        ManufactureYear = 2007,
                        Mileage = 80000.0,
                        PeakPowerHP = 97.0,
                        PeakTorqueNM = 122.0,
                        PredictedPrice = 19312.48m,
                        PricePerMonth = 825.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1665.0,
                        CarModelID = HyundaiGetz.ID,
                        CarModel = HyundaiGetz,
                        Title = "Hyundai Getz 845",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25888.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2012,
                        Mileage = 105000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 26193.3m,
                        PricePerMonth = 2157.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 846",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 29800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2012,
                        Mileage = 170000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 28204.41m,
                        PricePerMonth = 2483.33m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 847",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 43800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1457.0,
                        LengthMM = 4522.0,
                        ManufactureYear = 2012,
                        Mileage = 80000.0,
                        PeakPowerHP = 145.0,
                        PeakTorqueNM = 185.0,
                        PredictedPrice = 36161.53m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2640.0,
                        WidthMM = 1770.0,
                        CarModelID = VolvoV50.ID,
                        CarModel = VolvoV50,
                        Title = "Volvo V50 848",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 37800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1600.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2006,
                        Mileage = 125000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 192.0,
                        PredictedPrice = 40703.89m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1490.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 849",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 30800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4510.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 152.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 34171.28m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1740.0,
                        CarModelID = ToyotaCaldina.ID,
                        CarModel = ToyotaCaldina,
                        Title = "Toyota Caldina 850",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 265888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1658.0,
                        LengthMM = 4688.0,
                        ManufactureYear = 2019,
                        Mileage = 20000.0,
                        PeakPowerHP = 320.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 276350.53m,
                        PricePerMonth = 22157.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2865.0,
                        WidthMM = 1902.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 851",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2013,
                        Mileage = 50000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 32870.43m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 852",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 20999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1675.0,
                        LengthMM = 4273.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 110.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 36267.72m,
                        PricePerMonth = 1749.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2519.0,
                        WidthMM = 1765.0,
                        CarModelID = FordEcosport.ID,
                        CarModel = FordEcosport,
                        Title = "Ford Ecosport 853",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 28800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25419.14m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 854",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2009,
                        Mileage = 120000.0,
                        PeakPowerHP = 147.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 45400.26m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1820.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 855",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 86800.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2019,
                        Mileage = 40000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 285.0,
                        PredictedPrice = 93590.69m,
                        PricePerMonth = 7233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 856",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2996.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1471.0,
                        LengthMM = 4868.0,
                        ManufactureYear = 2010,
                        Mileage = 145000.0,
                        PeakPowerHP = 231.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 64785.45m,
                        PricePerMonth = 5708.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE300.ID,
                        CarModel = MercedesBenzE300,
                        Title = "MercedesBenz E300 857",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 31800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4420.0,
                        ManufactureYear = 2011,
                        Mileage = 115000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 29380.88m,
                        PricePerMonth = 2650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1690.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 858",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34702.08m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 859",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 45500.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4540.0,
                        ManufactureYear = 2012,
                        Mileage = 80000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 40714.96m,
                        PricePerMonth = 3791.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1755.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 860",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 45000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4856.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 48881.13m,
                        PricePerMonth = 3750.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2795.0,
                        WidthMM = 1835.0,
                        CarModelID = KiaOptimaK5.ID,
                        CarModel = KiaOptimaK5,
                        Title = "Kia OptimaK5 861",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 12800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2009,
                        Mileage = 105000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 14747.11m,
                        PricePerMonth = 1066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 862",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38999.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1487.0,
                        LengthMM = 4813.0,
                        ManufactureYear = 2012,
                        Mileage = 70000.0,
                        PeakPowerHP = 158.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 60112.26m,
                        PricePerMonth = 3249.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2817.0,
                        WidthMM = 2068.0,
                        CarModelID = Peugeot508.ID,
                        CarModel = Peugeot508,
                        Title = "Peugeot 508 863",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 208888.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1496.0,
                        LengthMM = 5246.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 306.0,
                        PeakTorqueNM = 370.0,
                        PredictedPrice = 198334.01m,
                        PricePerMonth = 17407.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3165.0,
                        WidthMM = 1899.0,
                        CarModelID = MercedesBenzS400L.ID,
                        CarModel = MercedesBenzS400L,
                        Title = "MercedesBenz S400L 864",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 26800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1498.0,
                        LengthMM = 4276.0,
                        ManufactureYear = 2012,
                        Mileage = 40000.0,
                        PeakPowerHP = 158.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 31371.76m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2608.0,
                        WidthMM = 1815.0,
                        CarModelID = Peugeot308.ID,
                        CarModel = Peugeot308,
                        Title = "Peugeot 308 865",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 219000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1969.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1652.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2019,
                        Mileage = 8000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 215043.94m,
                        PricePerMonth = 18250.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2702.0,
                        WidthMM = 1863.0,
                        CarModelID = VolvoXc40.ID,
                        CarModel = VolvoXc40,
                        Title = "Volvo Xc40 866",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 148000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2018,
                        Mileage = 20000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 145473.18m,
                        PricePerMonth = 12333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw330E.ID,
                        CarModel = Bmw330E,
                        Title = "Bmw 330E 867",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 32800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1434.0,
                        LengthMM = 3898.0,
                        ManufactureYear = 2013,
                        Mileage = 84000.0,
                        PeakPowerHP = 126.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 23979.33m,
                        PricePerMonth = 2733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1745.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 868",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 238800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1414.0,
                        LengthMM = 3874.0,
                        ManufactureYear = 2018,
                        Mileage = 25000.0,
                        PeakPowerHP = 231.0,
                        PeakTorqueNM = 320.0,
                        PredictedPrice = 182819.74m,
                        PricePerMonth = 19900.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2495.0,
                        WidthMM = 1727.0,
                        CarModelID = Mini3Door.ID,
                        CarModel = Mini3Door,
                        Title = "Mini 3Door 869",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 22800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 90000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25522.4m,
                        PricePerMonth = 1900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 870",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 388000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 4395.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1393.0,
                        LengthMM = 5011.0,
                        ManufactureYear = 2014,
                        Mileage = 38061.0,
                        PeakPowerHP = 560.0,
                        PeakTorqueNM = 680.0,
                        PredictedPrice = 276436.89m,
                        PricePerMonth = 32333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2964.0,
                        WidthMM = 1899.0,
                        CarModelID = BmwM6.ID,
                        CarModel = BmwM6,
                        Title = "Bmw M6 871",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 77999.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1840.0,
                        LengthMM = 5255.0,
                        ManufactureYear = 2017,
                        Mileage = 65000.0,
                        PeakPowerHP = 190.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 86825.38m,
                        PricePerMonth = 6499.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3150.0,
                        WidthMM = 1850.0,
                        CarModelID = NissanNavara.ID,
                        CarModel = NissanNavara,
                        Title = "Nissan Navara 872",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1491.0,
                        LengthMM = 4331.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 25828.39m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1689.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 873",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 58700.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1395.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1452.0,
                        LengthMM = 4255.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 63982.01m,
                        PricePerMonth = 4891.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2637.0,
                        WidthMM = 1799.0,
                        CarModelID = VolkswagenGolf.ID,
                        CarModel = VolkswagenGolf,
                        Title = "Volkswagen Golf 874",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1308.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1340.0,
                        LengthMM = 4460.0,
                        ManufactureYear = 2008,
                        Mileage = 110000.0,
                        PeakPowerHP = 215.0,
                        PeakTorqueNM = 211.0,
                        PredictedPrice = 43037.96m,
                        PricePerMonth = 5740.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1770.0,
                        CarModelID = MazdaRx8.ID,
                        CarModel = MazdaRx8,
                        Title = "Mazda Rx8 875",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 3750.0,
                        ManufactureYear = 2010,
                        Mileage = 135000.0,
                        PeakPowerHP = 87.0,
                        PeakTorqueNM = 116.0,
                        PredictedPrice = 19607.75m,
                        PricePerMonth = 1490.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 876",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 69800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1850.0,
                        LengthMM = 5260.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 69711.91m,
                        PricePerMonth = 5816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 877",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68800.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4235.0,
                        ManufactureYear = 2016,
                        Mileage = 35000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 143.0,
                        PredictedPrice = 64969.84m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaSienta.ID,
                        CarModel = ToyotaSienta,
                        Title = "Toyota Sienta 878",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 78800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1450.0,
                        LengthMM = 4580.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 78809.26m,
                        PricePerMonth = 6566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1795.0,
                        CarModelID = Mazda3.ID,
                        CarModel = Mazda3,
                        Title = "Mazda 3 879",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13888.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1781.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1815.0,
                        LengthMM = 4535.0,
                        ManufactureYear = 2003,
                        Mileage = 200000.0,
                        PeakPowerHP = 83.0,
                        PeakTorqueNM = 147.0,
                        PredictedPrice = 21405.68m,
                        PricePerMonth = 1157.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1710.0,
                        CarModelID = ToyotaUnser.ID,
                        CarModel = ToyotaUnser,
                        Title = "Toyota Unser 880",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1373.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4265.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 92.0,
                        PeakTorqueNM = 130.0,
                        PredictedPrice = 38896.46m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 6,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = ProtonErtiga.ID,
                        CarModel = ProtonErtiga,
                        Title = "Proton Ertiga 881",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 61800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2013,
                        Mileage = 100000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 60985.25m,
                        PricePerMonth = 5150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 882",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Supercharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 600000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1667.0,
                        LengthMM = 4731.0,
                        ManufactureYear = 2016,
                        Mileage = 10000.0,
                        PeakPowerHP = 385.0,
                        PeakTorqueNM = 450.0,
                        PredictedPrice = 356464.09m,
                        PricePerMonth = 50000.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1936.0,
                        CarModelID = JaguarFPace.ID,
                        CarModel = JaguarFPace,
                        Title = "Jaguar FPace 883",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 51800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.0,
                        LengthMM = 4627.0,
                        ManufactureYear = 2010,
                        Mileage = 125000.0,
                        PeakPowerHP = 205.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 52208.14m,
                        PricePerMonth = 4316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2774.0,
                        WidthMM = 1891.0,
                        CarModelID = VolvoXc60.ID,
                        CarModel = VolvoXc60,
                        Title = "Volvo Xc60 884",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 59800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2500.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 245.0,
                        PredictedPrice = 67790.58m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2825.0,
                        WidthMM = 1880.0,
                        CarModelID = NissanMurano.ID,
                        CarModel = NissanMurano,
                        Title = "Nissan Murano 885",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 173000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 3956.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1830.0,
                        LengthMM = 4670.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 272.0,
                        PeakTorqueNM = 380.0,
                        PredictedPrice = 141132.59m,
                        PricePerMonth = 14416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2690.0,
                        WidthMM = 1905.0,
                        CarModelID = ToyotaFjCruiser.ID,
                        CarModel = ToyotaFjCruiser,
                        Title = "Toyota FjCruiser 886",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 71800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5362.0,
                        ManufactureYear = 2016,
                        Mileage = 5000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 385.0,
                        PredictedPrice = 87259.95m,
                        PricePerMonth = 5983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1860.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 887",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 23596.64m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 888",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 12800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4465.0,
                        ManufactureYear = 2010,
                        Mileage = 110000.0,
                        PeakPowerHP = 125.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 18413.37m,
                        PricePerMonth = 1066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1740.0,
                        CarModelID = ProtonWaja.ID,
                        CarModel = ProtonWaja,
                        Title = "Proton Waja 889",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 58800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1797.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4600.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 173.0,
                        PredictedPrice = 53215.72m,
                        PricePerMonth = 4900.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1720.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 890",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 57800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1456.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 67781.53m,
                        PricePerMonth = 4816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2817.0,
                        WidthMM = 1828.0,
                        CarModelID = Peugeot508.ID,
                        CarModel = Peugeot508,
                        Title = "Peugeot 508 891",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 3955.0,
                        ManufactureYear = 2016,
                        Mileage = 93000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 54683.37m,
                        PricePerMonth = 4157.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2530.0,
                        WidthMM = 1694.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 892",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 44800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1395.0,
                        LengthMM = 4075.0,
                        ManufactureYear = 2013,
                        Mileage = 10000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 53949.59m,
                        PricePerMonth = 3733.33m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2435.0,
                        WidthMM = 1740.0,
                        CarModelID = HondaCrZ.ID,
                        CarModel = HondaCrZ,
                        Title = "Honda CrZ 893",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 106800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4268.0,
                        ManufactureYear = 2013,
                        Mileage = 70000.0,
                        PeakPowerHP = 220.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 118146.39m,
                        PricePerMonth = 8900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2631.0,
                        WidthMM = 1799.0,
                        CarModelID = VolkswagenGolf.ID,
                        CarModel = VolkswagenGolf,
                        Title = "Volkswagen Golf 894",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 129800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1675.0,
                        LengthMM = 4550.0,
                        ManufactureYear = 2019,
                        Mileage = 15000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 210.0,
                        PredictedPrice = 115358.03m,
                        PricePerMonth = 10816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 895",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 22852.4m,
                        PricePerMonth = 1333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 896",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 263800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectOrMultiPointInjection],
                        Doors = 5,
                        EngineCC = 3456.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4890.0,
                        ManufactureYear = 2016,
                        Mileage = 95000.0,
                        PeakPowerHP = 299.0,
                        PeakTorqueNM = 370.0,
                        PredictedPrice = 217295.67m,
                        PricePerMonth = 21983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2790.0,
                        WidthMM = 1895.0,
                        CarModelID = LexusRx350.ID,
                        CarModel = LexusRx350,
                        Title = "Lexus Rx350 897",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 5800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1468.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1385.0,
                        LengthMM = 4360.0,
                        ManufactureYear = 2000,
                        Mileage = 135000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 126.0,
                        PredictedPrice = 8838.95m,
                        PricePerMonth = 483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonWira.ID,
                        CarModel = ProtonWira,
                        Title = "Proton Wira 898",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 57799.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4769.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 62168.42m,
                        PricePerMonth = 4816.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2712.0,
                        WidthMM = 1820.0,
                        CarModelID = VolkswagenPassat.ID,
                        CarModel = VolkswagenPassat,
                        Title = "Volkswagen Passat 899",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 265000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 4395.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1467.0,
                        LengthMM = 4910.0,
                        ManufactureYear = 2014,
                        Mileage = 50000.0,
                        PeakPowerHP = 560.0,
                        PeakTorqueNM = 680.0,
                        PredictedPrice = 265431.68m,
                        PricePerMonth = 22083.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2964.0,
                        WidthMM = 1891.0,
                        CarModelID = BmwM5.ID,
                        CarModel = BmwM5,
                        Title = "Bmw M5 900",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 32800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1482.0,
                        LengthMM = 4644.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 43790.99m,
                        PricePerMonth = 2733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2651.0,
                        WidthMM = 1778.0,
                        CarModelID = VolkswagenJetta.ID,
                        CarModel = VolkswagenJetta,
                        Title = "Volkswagen Jetta 901",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 65800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1447.0,
                        LengthMM = 4581.0,
                        ManufactureYear = 2011,
                        Mileage = 75000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 74905.57m,
                        PricePerMonth = 5483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2760.0,
                        WidthMM = 2020.0,
                        CarModelID = MercedesBenzC200Cgi.ID,
                        CarModel = MercedesBenzC200Cgi,
                        Title = "MercedesBenz C200Cgi 902",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2014,
                        Mileage = 40000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 57063.83m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 903",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 139000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4355.0,
                        ManufactureYear = 2016,
                        Mileage = 65000.0,
                        PeakPowerHP = 222.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 175693.86m,
                        PricePerMonth = 11583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA250.ID,
                        CarModel = MercedesBenzA250,
                        Title = "MercedesBenz A250 904",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1329.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34438.99m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 905",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 50000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 4163.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1860.0,
                        LengthMM = 4890.0,
                        ManufactureYear = 2000,
                        Mileage = 180000.0,
                        PeakPowerHP = 205.0,
                        PeakTorqueNM = 431.0,
                        PredictedPrice = 92547.52m,
                        PricePerMonth = 4166.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1940.0,
                        CarModelID = ToyotaLandCruiser.ID,
                        CarModel = ToyotaLandCruiser,
                        Title = "Toyota LandCruiser 906",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 216800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 2261.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1379.0,
                        LengthMM = 4784.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 317.0,
                        PeakTorqueNM = 432.0,
                        PredictedPrice = 253287.61m,
                        PricePerMonth = 18066.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2720.0,
                        WidthMM = 1916.0,
                        CarModelID = FordMustang.ID,
                        CarModel = FordMustang,
                        Title = "Ford Mustang 907",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 4387.0,
                        ManufactureYear = 2019,
                        Mileage = 40000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 36172.12m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonPersona.ID,
                        CarModel = ProtonPersona,
                        Title = "Proton Persona 908",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2014,
                        Mileage = 110000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 27411.56m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.ElectronicPowerSteering],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2613.0,
                        WidthMM = 1837.0,
                        CarModelID = Peugeot3008.ID,
                        CarModel = Peugeot3008,
                        Title = "Peugeot 3008 909",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1498.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1500.0,
                        LengthMM = 4425.0,
                        ManufactureYear = 2017,
                        Mileage = 85000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 139.0,
                        PredictedPrice = 35212.72m,
                        PricePerMonth = 3483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = NissanAlmera.ID,
                        CarModel = NissanAlmera,
                        Title = "Nissan Almera 910",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2012,
                        Mileage = 65000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 22305.68m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 911",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 185000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 4806.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1702.0,
                        LengthMM = 4846.0,
                        ManufactureYear = 2010,
                        Mileage = 80000.0,
                        PeakPowerHP = 500.0,
                        PeakTorqueNM = 700.0,
                        PredictedPrice = 280650.74m,
                        PricePerMonth = 15416.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2895.0,
                        WidthMM = 1939.0,
                        CarModelID = PorscheCayenne.ID,
                        CarModel = PorscheCayenne,
                        Title = "Porsche Cayenne 912",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 50600.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 37047.61m,
                        PricePerMonth = 4216.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 913",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 37800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1600.0,
                        LengthMM = 4560.0,
                        ManufactureYear = 2006,
                        Mileage = 125000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 192.0,
                        PredictedPrice = 40703.89m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1490.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 914",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 144800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1442.0,
                        LengthMM = 4686.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 147607.89m,
                        PricePerMonth = 12066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2840.0,
                        WidthMM = 1810.0,
                        CarModelID = MercedesBenzC200.ID,
                        CarModel = MercedesBenzC200,
                        Title = "MercedesBenz C200 915",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 86800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2996.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1473.0,
                        LengthMM = 5209.0,
                        ManufactureYear = 2010,
                        Mileage = 110000.0,
                        PeakPowerHP = 314.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 69293.02m,
                        PricePerMonth = 7233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3165.0,
                        WidthMM = 1872.0,
                        CarModelID = MercedesBenzS300L.ID,
                        CarModel = MercedesBenzS300L,
                        Title = "MercedesBenz S300L 916",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24500.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1485.0,
                        LengthMM = 4618.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 195.0,
                        PredictedPrice = 35336.59m,
                        PricePerMonth = 2041.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2702.0,
                        WidthMM = 1813.0,
                        CarModelID = RenaultFluence.ID,
                        CarModel = RenaultFluence,
                        Title = "Renault Fluence 917",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 229800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1479.0,
                        LengthMM = 4936.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 261245.47m,
                        PricePerMonth = 19150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2975.0,
                        WidthMM = 1868.0,
                        CarModelID = Bmw530I.ID,
                        CarModel = Bmw530I,
                        Title = "Bmw 530I 918",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38500.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2477.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1779.0,
                        LengthMM = 5295.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 314.0,
                        PredictedPrice = 42090.28m,
                        PricePerMonth = 3208.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 919",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 40800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1794.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4550.0,
                        ManufactureYear = 2008,
                        Mileage = 135000.0,
                        PeakPowerHP = 179.0,
                        PeakTorqueNM = 170.0,
                        PredictedPrice = 45457.56m,
                        PricePerMonth = 3400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaWish.ID,
                        CarModel = ToyotaWish,
                        Title = "Toyota Wish 920",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 48999.0m,
                        Colour = "Brown",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1590.0,
                        LengthMM = 4485.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 41816.29m,
                        PricePerMonth = 4083.25m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1700.0,
                        CarModelID = NissanGrandLivina.ID,
                        CarModel = NissanGrandLivina,
                        Title = "Nissan GrandLivina 921",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 53999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1821.0,
                        LengthMM = 5365.0,
                        ManufactureYear = 2015,
                        Mileage = 85000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 375.0,
                        PredictedPrice = 65252.31m,
                        PricePerMonth = 4499.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1850.0,
                        CarModelID = MazdaBt50.ID,
                        CarModel = MazdaBt50,
                        Title = "Mazda Bt50 922",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 178800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1436.0,
                        LengthMM = 4276.0,
                        ManufactureYear = 2015,
                        Mileage = 95000.0,
                        PeakPowerHP = 280.0,
                        PeakTorqueNM = 380.0,
                        PredictedPrice = 166345.21m,
                        PricePerMonth = 14900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2630.0,
                        WidthMM = 1799.0,
                        CarModelID = VolkswagenGolf.ID,
                        CarModel = VolkswagenGolf,
                        Title = "Volkswagen Golf 923",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 64800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1850.0,
                        LengthMM = 5260.0,
                        ManufactureYear = 2012,
                        Mileage = 130000.0,
                        PeakPowerHP = 144.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 62710.44m,
                        PricePerMonth = 5400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 924",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 42800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4856.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 44581.12m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2795.0,
                        WidthMM = 1835.0,
                        CarModelID = KiaOptimaK5.ID,
                        CarModel = KiaOptimaK5,
                        Title = "Kia OptimaK5 925",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 63988.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1740.0,
                        LengthMM = 4435.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 133.0,
                        PredictedPrice = 63823.15m,
                        PricePerMonth = 5332.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAruz.ID,
                        CarModel = PeroduaAruz,
                        Title = "Perodua Aruz 926",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2018,
                        Mileage = 15000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 64229.97m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 927",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1430.0,
                        LengthMM = 4320.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 99.0,
                        PeakTorqueNM = 142.0,
                        PredictedPrice = 45485.41m,
                        PricePerMonth = 3650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1765.0,
                        CarModelID = LexusCt200H.ID,
                        CarModel = LexusCt200H,
                        Title = "Lexus Ct200H 928",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 96888.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2019,
                        Mileage = 35000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 285.0,
                        PredictedPrice = 93590.69m,
                        PricePerMonth = 8074.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 929",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 183800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 3605.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1418.0,
                        LengthMM = 4970.0,
                        ManufactureYear = 2012,
                        Mileage = 75000.0,
                        PeakPowerHP = 299.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 189642.44m,
                        PricePerMonth = 15316.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2920.0,
                        WidthMM = 1931.0,
                        CarModelID = PorschePanamera.ID,
                        CarModel = PorschePanamera,
                        Title = "Porsche Panamera 930",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24988.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 3962.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 26769.01m,
                        PricePerMonth = 2082.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1739.0,
                        CarModelID = Peugeot208.ID,
                        CarModel = Peugeot208,
                        Title = "Peugeot 208 931",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 48800.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 3,
                        EngineCC = 2953.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1990.0,
                        LengthMM = 4990.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 209.0,
                        PredictedPrice = 48241.66m,
                        PricePerMonth = 4066.67m,
                        SeatCapacity = 14,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2715.0,
                        WidthMM = 1690.0,
                        CarModelID = NissanUrvan.ID,
                        CarModel = NissanUrvan,
                        Title = "Nissan Urvan 932",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 47600.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2994.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1935.0,
                        LengthMM = 4800.0,
                        ManufactureYear = 2006,
                        Mileage = 185000.0,
                        PeakPowerHP = 220.0,
                        PeakTorqueNM = 304.0,
                        PredictedPrice = 54313.58m,
                        PricePerMonth = 3966.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1805.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 933",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 114999.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1433.0,
                        LengthMM = 4292.0,
                        ManufactureYear = 2015,
                        Mileage = 45000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 132404.96m,
                        PricePerMonth = 9583.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1780.0,
                        CarModelID = MercedesBenzA200.ID,
                        CarModel = MercedesBenzA200,
                        Title = "MercedesBenz A200 934",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34500.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1525.0,
                        LengthMM = 3900.0,
                        ManufactureYear = 2014,
                        Mileage = 100000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 34015.56m,
                        PricePerMonth = 2875.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaJazz.ID,
                        CarModel = HondaJazz,
                        Title = "Honda Jazz 935",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 48500.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2354.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1790.0,
                        LengthMM = 4920.0,
                        ManufactureYear = 2008,
                        Mileage = 105000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 218.0,
                        PredictedPrice = 44718.25m,
                        PricePerMonth = 4041.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1845.0,
                        CarModelID = HondaElysion.ID,
                        CarModel = HondaElysion,
                        Title = "Honda Elysion 936",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 42800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1984.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1703.0,
                        LengthMM = 4426.0,
                        ManufactureYear = 2012,
                        Mileage = 70000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 70892.26m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2604.0,
                        WidthMM = 1809.0,
                        CarModelID = VolkswagenTiguan.ID,
                        CarModel = VolkswagenTiguan,
                        Title = "Volkswagen Tiguan 937",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34880.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1512.0,
                        LengthMM = 4199.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 45730.32m,
                        PricePerMonth = 2906.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2575.0,
                        WidthMM = 1786.0,
                        CarModelID = VolkswagenGolf.ID,
                        CarModel = VolkswagenGolf,
                        Title = "Volkswagen Golf 938",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 125888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2017,
                        Mileage = 115000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 290.0,
                        PredictedPrice = 132406.13m,
                        PricePerMonth = 10490.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw330E.ID,
                        CarModel = Bmw330E,
                        Title = "Bmw 330E 939",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 34888.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2994.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1680.0,
                        LengthMM = 4730.0,
                        ManufactureYear = 2003,
                        Mileage = 165000.0,
                        PeakPowerHP = 299.0,
                        PeakTorqueNM = 304.0,
                        PredictedPrice = 48416.73m,
                        PricePerMonth = 2907.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2715.0,
                        WidthMM = 1845.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 940",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 19800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1750.0,
                        LengthMM = 5135.0,
                        ManufactureYear = 2000,
                        Mileage = 225000.0,
                        PeakPowerHP = 87.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 35201.75m,
                        PricePerMonth = 1650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RecirculatingBall],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1695.0,
                        CarModelID = MazdaFighter.ID,
                        CarModel = MazdaFighter,
                        Title = "Mazda Fighter 941",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 69800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5359.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 375.0,
                        PredictedPrice = 63313.48m,
                        PricePerMonth = 5816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1850.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 942",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 18800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2005,
                        Mileage = 285000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 186.0,
                        PredictedPrice = 31006.35m,
                        PricePerMonth = 1566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 943",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 72800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2018,
                        Mileage = 80000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 74547.78m,
                        PricePerMonth = 6066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 944",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 158800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2014,
                        Mileage = 80000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 141613.74m,
                        PricePerMonth = 13233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1965.0,
                        CarModelID = LandRoverRangeRoverEvoque.ID,
                        CarModel = LandRoverRangeRoverEvoque,
                        Title = "LandRover RangeRoverEvoque 945",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 12800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1640.0,
                        LengthMM = 3450.0,
                        ManufactureYear = 2003,
                        Mileage = 187000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 11790.28m,
                        PricePerMonth = 1066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1480.0,
                        CarModelID = PeroduaKenari.ID,
                        CarModel = PeroduaKenari,
                        Title = "Perodua Kenari 946",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 11800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1584.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4465.0,
                        ManufactureYear = 2006,
                        Mileage = 150000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 13551.69m,
                        PricePerMonth = 983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1740.0,
                        CarModelID = ProtonWaja.ID,
                        CarModel = ProtonWaja,
                        Title = "Proton Waja 947",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 95000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 26386.28m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 948",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 72800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1850.0,
                        LengthMM = 4705.0,
                        ManufactureYear = 2012,
                        Mileage = 65000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 62011.83m,
                        PricePerMonth = 6066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaFortuner.ID,
                        CarModel = ToyotaFortuner,
                        Title = "Toyota Fortuner 949",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 139000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1986.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4720.0,
                        ManufactureYear = 2015,
                        Mileage = 30000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 193.0,
                        PredictedPrice = 118501.92m,
                        PricePerMonth = 11583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 950",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25183.88m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 951",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 30800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4510.0,
                        ManufactureYear = 2006,
                        Mileage = 155000.0,
                        PeakPowerHP = 260.0,
                        PeakTorqueNM = 323.0,
                        PredictedPrice = 32801.17m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1740.0,
                        CarModelID = ToyotaCaldina.ID,
                        CarModel = ToyotaCaldina,
                        Title = "Toyota Caldina 952",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2015,
                        Mileage = 60000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 38304.95m,
                        PricePerMonth = 2816.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 953",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 157999.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1429.0,
                        LengthMM = 4633.0,
                        ManufactureYear = 2017,
                        Mileage = 65000000.0,
                        PeakPowerHP = 252.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 156427.06m,
                        PricePerMonth = 13166.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2810.0,
                        WidthMM = 1811.0,
                        CarModelID = Bmw330I.ID,
                        CarModel = Bmw330I,
                        Title = "Bmw 330I 954",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 14800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 14781.37m,
                        PricePerMonth = 1233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 955",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1755.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2010,
                        Mileage = 85000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 37641.5m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1770.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 956",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 32800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1462.0,
                        LengthMM = 3970.0,
                        ManufactureYear = 2013,
                        Mileage = 149999.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 175.0,
                        PredictedPrice = 39546.2m,
                        PricePerMonth = 2733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2470.0,
                        WidthMM = 1682.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 957",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 57800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1925.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2013,
                        Mileage = 80000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 392.0,
                        PredictedPrice = 64848.03m,
                        PricePerMonth = 4816.67m,
                        SeatCapacity = 11,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1920.0,
                        CarModelID = HyundaiGrandStarex.ID,
                        CarModel = HyundaiGrandStarex,
                        Title = "Hyundai GrandStarex 958",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1638.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 27311.66m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2727.0,
                        WidthMM = 2118.0,
                        CarModelID = Peugeot5008.ID,
                        CarModel = Peugeot5008,
                        Title = "Peugeot 5008 959",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 16800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2010,
                        Mileage = 105000.0,
                        PeakPowerHP = 124.0,
                        PeakTorqueNM = 156.0,
                        PredictedPrice = 28733.55m,
                        PricePerMonth = 1400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1775.0,
                        CarModelID = KiaForte.ID,
                        CarModel = KiaForte,
                        Title = "Kia Forte 960",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 98900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 3456.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2010,
                        Mileage = 140000.0,
                        PeakPowerHP = 276.0,
                        PeakTorqueNM = 342.0,
                        PredictedPrice = 90958.73m,
                        PricePerMonth = 8241.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1885.0,
                        CarModelID = LexusRx350.ID,
                        CarModel = LexusRx350,
                        Title = "Lexus Rx350 961",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 63300.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1740.0,
                        LengthMM = 4435.0,
                        ManufactureYear = 2019,
                        Mileage = 15000.0,
                        PeakPowerHP = 102.0,
                        PeakTorqueNM = 133.0,
                        PredictedPrice = 63771.61m,
                        PricePerMonth = 5275.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2685.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAruz.ID,
                        CarModel = PeroduaAruz,
                        Title = "Perodua Aruz 962",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 4800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 659.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 2005,
                        Mileage = 165000.0,
                        PeakPowerHP = 31.0,
                        PeakTorqueNM = 49.0,
                        PredictedPrice = 5976.62m,
                        PricePerMonth = 400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 963",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1638.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 27311.66m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2727.0,
                        WidthMM = 2118.0,
                        CarModelID = Peugeot5008.ID,
                        CarModel = Peugeot5008,
                        Title = "Peugeot 5008 964",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2012,
                        Mileage = 70000.0,
                        PeakPowerHP = 131.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 38445.2m,
                        PricePerMonth = 3066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1775.0,
                        CarModelID = HyundaiElantra.ID,
                        CarModel = HyundaiElantra,
                        Title = "Hyundai Elantra 965",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 136800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4885.0,
                        ManufactureYear = 2013,
                        Mileage = 120000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 114398.03m,
                        PricePerMonth = 11400.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 966",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 26800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1660.0,
                        LengthMM = 4650.0,
                        ManufactureYear = 2004,
                        Mileage = 165000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 32831.86m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2825.0,
                        WidthMM = 1760.0,
                        CarModelID = ToyotaIpsum.ID,
                        CarModel = ToyotaIpsum,
                        Title = "Toyota Ipsum 967",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 53800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 177.0,
                        PeakTorqueNM = 213.0,
                        PredictedPrice = 51237.02m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2770.0,
                        WidthMM = 1815.0,
                        CarModelID = HyundaiI40.ID,
                        CarModel = HyundaiI40,
                        Title = "Hyundai I40 968",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 26800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1762.0,
                        LengthMM = 5173.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 330.0,
                        PredictedPrice = 37873.69m,
                        PricePerMonth = 2233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1788.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 969",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 6800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1412.0,
                        LengthMM = 4598.0,
                        ManufactureYear = 1997,
                        Mileage = 245000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 14809.72m,
                        PricePerMonth = 566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1765.0,
                        CarModelID = Peugeot406.ID,
                        CarModel = Peugeot406,
                        Title = "Peugeot 406 970",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1948.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 4520.0,
                        ManufactureYear = 2000,
                        Mileage = 140000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 16045.31m,
                        PricePerMonth = 1157.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2560.0,
                        WidthMM = 1720.0,
                        CarModelID = VolvoV40.ID,
                        CarModel = VolvoV40,
                        Title = "Volvo V40 971",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 69999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2016,
                        Mileage = 70000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 71217.35m,
                        PricePerMonth = 5833.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 972",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2012,
                        Mileage = 120000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 194.0,
                        PredictedPrice = 33227.82m,
                        PricePerMonth = 2158.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1775.0,
                        CarModelID = KiaForte.ID,
                        CarModel = KiaForte,
                        Title = "Kia Forte 973",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 62800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5359.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 375.0,
                        PredictedPrice = 60859.1m,
                        PricePerMonth = 5233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1850.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 974",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 139800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1986.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1690.0,
                        LengthMM = 4720.0,
                        ManufactureYear = 2015,
                        Mileage = 60000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 193.0,
                        PredictedPrice = 116991.9m,
                        PricePerMonth = 11650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2660.0,
                        WidthMM = 1835.0,
                        CarModelID = ToyotaHarrier.ID,
                        CarModel = ToyotaHarrier,
                        Title = "Toyota Harrier 975",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1675.0,
                        LengthMM = 4510.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 32240.29m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2705.0,
                        WidthMM = 1765.0,
                        CarModelID = NissanXTrail.ID,
                        CarModel = NissanXTrail,
                        Title = "Nissan XTrail 976",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 33999.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1390.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4406.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 63887.26m,
                        PricePerMonth = 2833.25m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2677.0,
                        WidthMM = 1799.0,
                        CarModelID = VolkswagenCrossTouran.ID,
                        CarModel = VolkswagenCrossTouran,
                        Title = "Volkswagen CrossTouran 977",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1699.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1603.0,
                        LengthMM = 4273.0,
                        ManufactureYear = 2010,
                        Mileage = 95000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 155.0,
                        PredictedPrice = 35628.74m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2778.0,
                        WidthMM = 1551.0,
                        CarModelID = MercedesBenzB180.ID,
                        CarModel = MercedesBenzB180,
                        Title = "MercedesBenz B180 978",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 36800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 35977.98m,
                        PricePerMonth = 3066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 979",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Green",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2016,
                        Mileage = 50000.0,
                        PeakPowerHP = 67.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 27030.08m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 980",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 35800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4150.0,
                        ManufactureYear = 2013,
                        Mileage = 95000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 35547.72m,
                        PricePerMonth = 2983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1600.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 981",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 50800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2488.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 5230.0,
                        ManufactureYear = 2013,
                        Mileage = 105000.0,
                        PeakPowerHP = 174.0,
                        PeakTorqueNM = 403.0,
                        PredictedPrice = 59963.06m,
                        PricePerMonth = 4233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1850.0,
                        CarModelID = NissanNavara.ID,
                        CarModel = NissanNavara,
                        Title = "Nissan Navara 982",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 86500.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1925.0,
                        LengthMM = 5125.0,
                        ManufactureYear = 2018,
                        Mileage = 130000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 392.0,
                        PredictedPrice = 78227.47m,
                        PricePerMonth = 7208.33m,
                        SeatCapacity = 11,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3200.0,
                        WidthMM = 1920.0,
                        CarModelID = HyundaiGrandStarex.ID,
                        CarModel = HyundaiGrandStarex,
                        Title = "Hyundai GrandStarex 983",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 80800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1535.0,
                        LengthMM = 4275.0,
                        ManufactureYear = 2016,
                        Mileage = 85000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 204.0,
                        PredictedPrice = 75052.14m,
                        PricePerMonth = 6733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1765.0,
                        CarModelID = MazdaCx3.ID,
                        CarModel = MazdaCx3,
                        Title = "Mazda Cx3 984",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 90800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1694.0,
                        LengthMM = 4519.0,
                        ManufactureYear = 2019,
                        Mileage = 27500.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 285.0,
                        PredictedPrice = 93166.48m,
                        PricePerMonth = 7566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1831.0,
                        CarModelID = ProtonX70.ID,
                        CarModel = ProtonX70,
                        Title = "Proton X70 985",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 110800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2143.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1474.0,
                        LengthMM = 4879.0,
                        ManufactureYear = 2015,
                        Mileage = 40000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 500.0,
                        PredictedPrice = 146107.79m,
                        PricePerMonth = 9233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2874.0,
                        WidthMM = 1854.0,
                        CarModelID = MercedesBenzE300.ID,
                        CarModel = MercedesBenzE300,
                        Title = "MercedesBenz E300 986",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 488888.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 2,
                        EngineCC = 3800.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1296.0,
                        LengthMM = 4491.0,
                        ManufactureYear = 2013,
                        Mileage = 45000.0,
                        PeakPowerHP = 400.0,
                        PeakTorqueNM = 440.0,
                        PredictedPrice = 371159.14m,
                        PricePerMonth = 40740.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2450.0,
                        WidthMM = 1852.0,
                        CarModelID = Porsche911.ID,
                        CarModel = Porsche911,
                        Title = "Porsche 911 987",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 58888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2198.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5359.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 375.0,
                        PredictedPrice = 60508.89m,
                        PricePerMonth = 4907.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3220.0,
                        WidthMM = 1850.0,
                        CarModelID = FordRanger.ID,
                        CarModel = FordRanger,
                        Title = "Ford Ranger 988",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 15800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1655.0,
                        LengthMM = 3705.0,
                        ManufactureYear = 1996,
                        Mileage = 185000.0,
                        PeakPowerHP = 135.0,
                        PeakTorqueNM = 181.0,
                        PredictedPrice = 35913.7m,
                        PricePerMonth = 1316.67m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2200.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaRav4.ID,
                        CarModel = ToyotaRav4,
                        Title = "Toyota Rav4 989",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 310000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 2993.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1780.0,
                        LengthMM = 4850.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 292.0,
                        PeakTorqueNM = 600.0,
                        PredictedPrice = 267899.98m,
                        PricePerMonth = 25833.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2923.0,
                        WidthMM = 1983.0,
                        CarModelID = LandRoverRangeRoverSport.ID,
                        CarModel = LandRoverRangeRoverSport,
                        Title = "LandRover RangeRoverSport 990",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30988.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1525.0,
                        LengthMM = 4170.0,
                        ManufactureYear = 2020,
                        Mileage = 10000.0,
                        PeakPowerHP = 68.0,
                        PeakTorqueNM = 91.0,
                        PredictedPrice = 30421.41m,
                        PricePerMonth = 2582.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaBezza.ID,
                        CarModel = PeroduaBezza,
                        Title = "Perodua Bezza 991",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1640.0,
                        LengthMM = 3450.0,
                        ManufactureYear = 2004,
                        Mileage = 165000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 11790.28m,
                        PricePerMonth = 741.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1480.0,
                        CarModelID = PeroduaKenari.ID,
                        CarModel = PeroduaKenari,
                        Title = "Perodua Kenari 992",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23900.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4543.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 26424.71m,
                        PricePerMonth = 1991.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonPreve.ID,
                        CarModel = ProtonPreve,
                        Title = "Proton Preve 993",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 183800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4370.0,
                        ManufactureYear = 2016,
                        Mileage = 60000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 190117.62m,
                        PricePerMonth = 15316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2660.0,
                        WidthMM = 2090.0,
                        CarModelID = LandRoverRangeRoverEvoque.ID,
                        CarModel = LandRoverRangeRoverEvoque,
                        Title = "LandRover RangeRoverEvoque 994",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4769.0,
                        ManufactureYear = 2011,
                        Mileage = 80000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 41661.12m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2712.0,
                        WidthMM = 1820.0,
                        CarModelID = VolkswagenPassat.ID,
                        CarModel = VolkswagenPassat,
                        Title = "Volkswagen Passat 995",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 88888.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1416.0,
                        LengthMM = 3626.0,
                        ManufactureYear = 2015,
                        Mileage = 25000.0,
                        PeakPowerHP = 116.0,
                        PeakTorqueNM = 149.0,
                        PredictedPrice = 72749.64m,
                        PricePerMonth = 7407.33m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2467.0,
                        WidthMM = 1688.0,
                        CarModelID = MiniCooper.ID,
                        CarModel = MiniCooper,
                        Title = "Mini Cooper 996",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 81500.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1605.0,
                        LengthMM = 4294.0,
                        ManufactureYear = 2018,
                        Mileage = 95000.0,
                        PeakPowerHP = 143.0,
                        PeakTorqueNM = 172.0,
                        PredictedPrice = 72891.56m,
                        PricePerMonth = 6791.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2610.0,
                        WidthMM = 1772.0,
                        CarModelID = HondaHrV.ID,
                        CarModel = HondaHrV,
                        Title = "Honda HrV 997",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 30800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1524.0,
                        LengthMM = 4536.0,
                        ManufactureYear = 2013,
                        Mileage = 70000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 29748.76m,
                        PricePerMonth = 2566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1786.0,
                        CarModelID = ProtonSuprimaS.ID,
                        CarModel = ProtonSuprimaS,
                        Title = "Proton SuprimaS 998",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 3962.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 122.0,
                        PeakTorqueNM = 160.0,
                        PredictedPrice = 26522.35m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2538.0,
                        WidthMM = 1739.0,
                        CarModelID = Peugeot208.ID,
                        CarModel = Peugeot208,
                        Title = "Peugeot 208 999",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 94999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1623.0,
                        LengthMM = 4447.0,
                        ManufactureYear = 2018,
                        Mileage = 75000.0,
                        PeakPowerHP = 165.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 84590.96m,
                        PricePerMonth = 7916.58m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2675.0,
                        WidthMM = 1841.0,
                        CarModelID = Peugeot3008.ID,
                        CarModel = Peugeot3008,
                        Title = "Peugeot 3008 1000",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 55000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4825.0,
                        ManufactureYear = 2008,
                        Mileage = 140000.0,
                        PeakPowerHP = 249.0,
                        PeakTorqueNM = 312.0,
                        PredictedPrice = 75013.42m,
                        PricePerMonth = 4583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1820.0,
                        CarModelID = LexusGs300.ID,
                        CarModel = LexusGs300,
                        Title = "Lexus Gs300 1001",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 83800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2010,
                        Mileage = 95000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 223.0,
                        PredictedPrice = 81185.2m,
                        PricePerMonth = 6983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 1950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 1002",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 36999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1545.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2009,
                        Mileage = 95000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 174.0,
                        PredictedPrice = 45101.42m,
                        PricePerMonth = 3083.25m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaStream.ID,
                        CarModel = HondaStream,
                        Title = "Honda Stream 1003",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 55800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1935.0,
                        LengthMM = 4840.0,
                        ManufactureYear = 2006,
                        Mileage = 105000.0,
                        PeakPowerHP = 159.0,
                        PeakTorqueNM = 220.0,
                        PredictedPrice = 54752.69m,
                        PricePerMonth = 4650.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1805.0,
                        CarModelID = ToyotaAlphard.ID,
                        CarModel = ToyotaAlphard,
                        Title = "Toyota Alphard 1004",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 145000.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1999.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1635.0,
                        LengthMM = 4365.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 241.0,
                        PeakTorqueNM = 340.0,
                        PredictedPrice = 149983.06m,
                        PricePerMonth = 12083.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1965.0,
                        CarModelID = LandRoverRangeRoverEvoque.ID,
                        CarModel = LandRoverRangeRoverEvoque,
                        Title = "LandRover RangeRoverEvoque 1005",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 205000.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1762.0,
                        LengthMM = 4886.0,
                        ManufactureYear = 2017,
                        Mileage = 65000.0,
                        PeakPowerHP = 245.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 197593.96m,
                        PricePerMonth = 17083.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2933.0,
                        WidthMM = 1938.0,
                        CarModelID = BmwX5.ID,
                        CarModel = BmwX5,
                        Title = "Bmw X5 1006",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 53800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4190.0,
                        ManufactureYear = 2016,
                        Mileage = 70000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 54933.11m,
                        PricePerMonth = 4483.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2655.0,
                        WidthMM = 1660.0,
                        CarModelID = ToyotaAvanza.ID,
                        CarModel = ToyotaAvanza,
                        Title = "Toyota Avanza 1007",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 34000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3200.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1795.0,
                        LengthMM = 5075.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 43852.43m,
                        PricePerMonth = 2833.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 1008",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 67.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 24772.1m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 1009",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 169800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1595.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1432.0,
                        LengthMM = 4630.0,
                        ManufactureYear = 2017,
                        Mileage = 35000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 144322.69m,
                        PricePerMonth = 14150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1777.0,
                        CarModelID = MercedesBenzCla200.ID,
                        CarModel = MercedesBenzCla200,
                        Title = "MercedesBenz Cla200 1010",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 61800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4525.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 45217.93m,
                        PricePerMonth = 5150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2670.0,
                        WidthMM = 1755.0,
                        CarModelID = HondaCivic.ID,
                        CarModel = HondaCivic,
                        Title = "Honda Civic 1011",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 113333.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1450.0,
                        LengthMM = 4900.0,
                        ManufactureYear = 2014,
                        Mileage = 95000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 235.0,
                        PredictedPrice = 121705.03m,
                        PricePerMonth = 9444.42m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2820.0,
                        WidthMM = 1820.0,
                        CarModelID = LexusEs250.ID,
                        CarModel = LexusEs250,
                        Title = "Lexus Es250 1012",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4950.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 156.0,
                        PeakTorqueNM = 189.0,
                        PredictedPrice = 46178.71m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2800.0,
                        WidthMM = 1845.0,
                        CarModelID = ProtonPerdana.ID,
                        CarModel = ProtonPerdana,
                        Title = "Proton Perdana 1013",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 25800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1485.0,
                        LengthMM = 4618.0,
                        ManufactureYear = 2014,
                        Mileage = 65000.0,
                        PeakPowerHP = 141.0,
                        PeakTorqueNM = 195.0,
                        PredictedPrice = 35336.59m,
                        PricePerMonth = 2150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2702.0,
                        WidthMM = 1813.0,
                        CarModelID = RenaultFluence.ID,
                        CarModel = RenaultFluence,
                        Title = "Renault Fluence 1014",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 45800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1515.0,
                        LengthMM = 3895.0,
                        ManufactureYear = 2019,
                        Mileage = 33000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 45192.34m,
                        PricePerMonth = 3816.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1735.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 1015",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 3900.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1430.0,
                        LengthMM = 3490.0,
                        ManufactureYear = 2003,
                        Mileage = 170000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 11265.01m,
                        PricePerMonth = 325.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1490.0,
                        CarModelID = PeroduaKelisa.ID,
                        CarModel = PeroduaKelisa,
                        Title = "Perodua Kelisa 1016",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1452.0,
                        LengthMM = 4818.0,
                        ManufactureYear = 2004,
                        Mileage = 150000.0,
                        PeakPowerHP = 177.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 37447.0m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2854.0,
                        WidthMM = 1822.0,
                        CarModelID = MercedesBenzE240.ID,
                        CarModel = MercedesBenzE240,
                        Title = "MercedesBenz E240 1017",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 10800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1498.0,
                        LengthMM = 4276.0,
                        ManufactureYear = 2010,
                        Mileage = 115000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 18664.35m,
                        PricePerMonth = 900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2608.0,
                        WidthMM = 1815.0,
                        CarModelID = Peugeot308.ID,
                        CarModel = Peugeot308,
                        Title = "Peugeot 308 1018",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 38800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 3200.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1795.0,
                        LengthMM = 5075.0,
                        ManufactureYear = 2011,
                        Mileage = 95000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 343.0,
                        PredictedPrice = 43852.43m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 3000.0,
                        WidthMM = 1800.0,
                        CarModelID = MitsubishiTriton.ID,
                        CarModel = MitsubishiTriton,
                        Title = "Mitsubishi Triton 1019",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 11800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1530.0,
                        LengthMM = 3575.0,
                        ManufactureYear = 2010,
                        Mileage = 75000.0,
                        PeakPowerHP = 61.0,
                        PeakTorqueNM = 90.0,
                        PredictedPrice = 15449.17m,
                        PricePerMonth = 983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2390.0,
                        WidthMM = 1475.0,
                        CarModelID = PeroduaViva.ID,
                        CarModel = PeroduaViva,
                        Title = "Perodua Viva 1020",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 105000.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1745.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 223.0,
                        PredictedPrice = 98884.96m,
                        PricePerMonth = 8750.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 1021",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 11800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4601.090693538827,
                        ManufactureYear = 1999,
                        Mileage = 205000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 181.0,
                        PredictedPrice = 17026.53m,
                        PricePerMonth = 983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2735.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaNadia.ID,
                        CarModel = ToyotaNadia,
                        Title = "Toyota Nadia 1022",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23870.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1339.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1435.0,
                        LengthMM = 4395.0,
                        ManufactureYear = 2011,
                        Mileage = 170000.0,
                        PeakPowerHP = 88.0,
                        PeakTorqueNM = 121.0,
                        PredictedPrice = 25759.0m,
                        PricePerMonth = 1989.17m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaInsight.ID,
                        CarModel = HondaInsight,
                        Title = "Honda Insight 1023",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 78800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 1796.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1296.0,
                        LengthMM = 4082.0,
                        ManufactureYear = 2008,
                        Mileage = 80000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 117416.83m,
                        PricePerMonth = 6566.67m,
                        SeatCapacity = 2,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2430.0,
                        WidthMM = 1777.0,
                        CarModelID = MercedesBenzSlk200K.ID,
                        CarModel = MercedesBenzSlk200K,
                        Title = "MercedesBenz Slk200K 1024",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 20800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1444.0,
                        LengthMM = 5038.0,
                        ManufactureYear = 2001,
                        Mileage = 105000.0,
                        PeakPowerHP = 204.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 45958.92m,
                        PricePerMonth = 1733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2965.0,
                        WidthMM = 1855.0,
                        CarModelID = MercedesBenzS280.ID,
                        CarModel = MercedesBenzS280,
                        Title = "MercedesBenz S280 1025",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 29988.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1710.0,
                        LengthMM = 4610.0,
                        ManufactureYear = 2007,
                        Mileage = 150000.0,
                        PeakPowerHP = 212.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 38951.97m,
                        PricePerMonth = 2499.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2625.0,
                        WidthMM = 1785.0,
                        CarModelID = HondaCrV.ID,
                        CarModel = HondaCrV,
                        Title = "Honda CrV 1026",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34988.0m,
                        Colour = "Maroon",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1491.0,
                        LengthMM = 4331.0,
                        ManufactureYear = 2020,
                        Mileage = 5000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 26809.09m,
                        PricePerMonth = 2915.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1689.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 1027",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8200.0m,
                        Colour = "Gold",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 989.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1640.0,
                        LengthMM = 3450.0,
                        ManufactureYear = 2002,
                        Mileage = 185000.0,
                        PeakPowerHP = 55.0,
                        PeakTorqueNM = 88.0,
                        PredictedPrice = 11855.9m,
                        PricePerMonth = 683.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2360.0,
                        WidthMM = 1480.0,
                        CarModelID = PeroduaKenari.ID,
                        CarModel = PeroduaKenari,
                        Title = "Perodua Kenari 1028",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1591.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4530.0,
                        ManufactureYear = 2013,
                        Mileage = 85000.0,
                        PeakPowerHP = 131.0,
                        PeakTorqueNM = 157.0,
                        PredictedPrice = 36991.59m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1775.0,
                        CarModelID = HyundaiElantra.ID,
                        CarModel = HyundaiElantra,
                        Title = "Hyundai Elantra 1029",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 85800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1464.0,
                        LengthMM = 4899.0,
                        ManufactureYear = 2012,
                        Mileage = 65000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 270.0,
                        PredictedPrice = 97770.04m,
                        PricePerMonth = 7150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2968.0,
                        WidthMM = 1860.0,
                        CarModelID = Bmw520I.ID,
                        CarModel = Bmw520I,
                        Title = "Bmw 520I 1030",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2019,
                        Mileage = 10000.0,
                        PeakPowerHP = 68.0,
                        PeakTorqueNM = 91.0,
                        PredictedPrice = 27729.51m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 1031",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 51999.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1798.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1421.0,
                        LengthMM = 4802.0,
                        ManufactureYear = 2012,
                        Mileage = 100000.0,
                        PeakPowerHP = 160.0,
                        PeakTorqueNM = 250.0,
                        PredictedPrice = 56833.14m,
                        PricePerMonth = 4333.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2710.0,
                        WidthMM = 1855.0,
                        CarModelID = VolkswagenCc.ID,
                        CarModel = VolkswagenCc,
                        Title = "Volkswagen Cc 1032",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 30320.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4510.0,
                        ManufactureYear = 2006,
                        Mileage = 105000.0,
                        PeakPowerHP = 260.0,
                        PeakTorqueNM = 323.0,
                        PredictedPrice = 34846.21m,
                        PricePerMonth = 2526.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1740.0,
                        CarModelID = ToyotaCaldina.ID,
                        CarModel = ToyotaCaldina,
                        Title = "Toyota Caldina 1033",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 68800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1672.2348711803477,
                        LengthMM = 4145.0,
                        ManufactureYear = 2019,
                        Mileage = 25000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 65167.38m,
                        PricePerMonth = 5733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1811.421210305572,
                        CarModelID = ToyotaYaris.ID,
                        CarModel = ToyotaYaris,
                        Title = "Toyota Yaris 1034",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34900.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1620.0,
                        LengthMM = 4270.0,
                        ManufactureYear = 2014,
                        Mileage = 75000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 36249.16m,
                        PricePerMonth = 2908.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1695.0,
                        CarModelID = PeroduaAlza.ID,
                        CarModel = PeroduaAlza,
                        Title = "Perodua Alza 1035",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 24800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Hybrid],
                        HeightMM = 1455.0,
                        LengthMM = 3995.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 73.0,
                        PeakTorqueNM = 111.0,
                        PredictedPrice = 25183.88m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = ToyotaPriusC.ID,
                        CarModel = ToyotaPriusC,
                        Title = "Toyota PriusC 1036",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 448800.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1665.0,
                        LengthMM = 4803.0,
                        ManufactureYear = 2019,
                        Mileage = 25300.0,
                        PeakPowerHP = 250.0,
                        PeakTorqueNM = 365.0,
                        PredictedPrice = 372286.59m,
                        PricePerMonth = 37400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2874.0,
                        WidthMM = 2032.0,
                        CarModelID = LandRoverRangeRoverVelar.ID,
                        CarModel = LandRoverRangeRoverVelar,
                        Title = "LandRover RangeRoverVelar 1037",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 33333.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1490.0,
                        LengthMM = 4570.0,
                        ManufactureYear = 2013,
                        Mileage = 50000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 197.0,
                        PredictedPrice = 34911.18m,
                        PricePerMonth = 2777.75m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1760.0,
                        CarModelID = ProtonInspira.ID,
                        CarModel = ProtonInspira,
                        Title = "Proton Inspira 1038",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 40800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1515.0,
                        LengthMM = 3895.0,
                        ManufactureYear = 2018,
                        Mileage = 40000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 42319.21m,
                        PricePerMonth = 3400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1735.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 1039",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 87800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1795.0,
                        LengthMM = 4735.0,
                        ManufactureYear = 2017,
                        Mileage = 45000.0,
                        PeakPowerHP = 139.0,
                        PeakTorqueNM = 183.0,
                        PredictedPrice = 85473.32m,
                        PricePerMonth = 7316.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1830.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 1040",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 42800.0m,
                        Colour = "Purple",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1515.0,
                        LengthMM = 3895.0,
                        ManufactureYear = 2019,
                        Mileage = 55000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 42342.19m,
                        PricePerMonth = 3566.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1735.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 1041",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 157700.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4885.0,
                        ManufactureYear = 2019,
                        Mileage = 30000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 235.0,
                        PredictedPrice = 140081.78m,
                        PricePerMonth = 13141.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2825.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 1042",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Turbocharged],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 43988.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1561.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1691.0,
                        LengthMM = 4592.0,
                        ManufactureYear = 2018,
                        Mileage = 30000.0,
                        PeakPowerHP = 140.0,
                        PeakTorqueNM = 205.0,
                        PredictedPrice = 38711.68m,
                        PricePerMonth = 3665.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2730.0,
                        WidthMM = 1809.0,
                        CarModelID = ProtonExora.ID,
                        CarModel = ProtonExora,
                        Title = "Proton Exora 1043",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 34800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1453.0,
                        LengthMM = 3970.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 153.0,
                        PredictedPrice = 29234.84m,
                        PricePerMonth = 2900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2456.0,
                        WidthMM = 1682.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 1044",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 13800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1520.0,
                        LengthMM = 4278.0,
                        ManufactureYear = 2013,
                        Mileage = 55000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 18734.97m,
                        PricePerMonth = 1150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2465.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonSaga.ID,
                        CarModel = ProtonSaga,
                        Title = "Proton Saga 1045",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 132800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2362.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1900.0,
                        LengthMM = 4885.0,
                        ManufactureYear = 2013,
                        Mileage = 55000.0,
                        PeakPowerHP = 170.0,
                        PeakTorqueNM = 224.0,
                        PredictedPrice = 121846.15m,
                        PricePerMonth = 11066.67m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaVellfire.ID,
                        CarModel = ToyotaVellfire,
                        Title = "Toyota Vellfire 1046",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 8800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1781.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1815.0,
                        LengthMM = 4535.0,
                        ManufactureYear = 1998,
                        Mileage = 150000.0,
                        PeakPowerHP = 83.0,
                        PeakTorqueNM = 147.0,
                        PredictedPrice = 18820.69m,
                        PricePerMonth = 733.33m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1710.0,
                        CarModelID = ToyotaUnser.ID,
                        CarModel = ToyotaUnser,
                        Title = "Toyota Unser 1047",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 59800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2495.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1390.0,
                        LengthMM = 4670.0,
                        ManufactureYear = 2008,
                        Mileage = 65000.0,
                        PeakPowerHP = 196.0,
                        PeakTorqueNM = 244.0,
                        PredictedPrice = 41489.57m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2710.0,
                        WidthMM = 1790.0,
                        CarModelID = JaguarXType.ID,
                        CarModel = JaguarXType,
                        Title = "Jaguar XType 1048",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 44800.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1470.0,
                        LengthMM = 4415.0,
                        ManufactureYear = 2014,
                        Mileage = 90000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 45038.11m,
                        PricePerMonth = 3733.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 1049",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 175000.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1425.0,
                        LengthMM = 4005.0,
                        ManufactureYear = 2017,
                        Mileage = 50000.0,
                        PeakPowerHP = 192.0,
                        PeakTorqueNM = 280.0,
                        PredictedPrice = 160670.23m,
                        PricePerMonth = 14583.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2567.0,
                        WidthMM = 1727.0,
                        CarModelID = Mini5Door.ID,
                        CarModel = Mini5Door,
                        Title = "Mini 5Door 1050",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 51900.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1477.0,
                        LengthMM = 4440.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 54459.57m,
                        PricePerMonth = 4325.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1695.0,
                        CarModelID = HondaCity.ID,
                        CarModel = HondaCity,
                        Title = "Honda City 1051",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24889.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4275.0,
                        ManufactureYear = 2012,
                        Mileage = 85000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 150.0,
                        PredictedPrice = 32672.22m,
                        PricePerMonth = 2074.08m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2600.0,
                        WidthMM = 1730.0,
                        CarModelID = NissanLivinaXGear.ID,
                        CarModel = NissanLivinaXGear,
                        Title = "Nissan LivinaXGear 1052",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1453.0,
                        LengthMM = 3970.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 153.0,
                        PredictedPrice = 30065.52m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2456.0,
                        WidthMM = 1682.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 1053",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 119800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2356.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1695.0,
                        LengthMM = 4830.0,
                        ManufactureYear = 2014,
                        Mileage = 100000.0,
                        PeakPowerHP = 175.0,
                        PeakTorqueNM = 225.0,
                        PredictedPrice = 94092.24m,
                        PricePerMonth = 9983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2900.0,
                        WidthMM = 1820.0,
                        CarModelID = HondaOdyssey.ID,
                        CarModel = HondaOdyssey,
                        Title = "Honda Odyssey 1054",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 204999.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1639.0,
                        LengthMM = 4656.0,
                        ManufactureYear = 2017,
                        Mileage = 30000.0,
                        PeakPowerHP = 186.0,
                        PeakTorqueNM = 300.0,
                        PredictedPrice = 192812.1m,
                        PricePerMonth = 17083.25m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2873.0,
                        WidthMM = 1890.0,
                        CarModelID = MercedesBenzGlc200.ID,
                        CarModel = MercedesBenzGlc200,
                        Title = "MercedesBenz Glc200 1055",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 59800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 3456.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1730.0,
                        LengthMM = 4795.0,
                        ManufactureYear = 2008,
                        Mileage = 170000.0,
                        PeakPowerHP = 284.0,
                        PeakTorqueNM = 332.0,
                        PredictedPrice = 78591.98m,
                        PricePerMonth = 4983.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1800.0,
                        CarModelID = ToyotaEstima.ID,
                        CarModel = ToyotaEstima,
                        Title = "Toyota Estima 1056",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 49900.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1760.0,
                        LengthMM = 4585.0,
                        ManufactureYear = 2014,
                        Mileage = 115000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 45432.45m,
                        PricePerMonth = 4158.33m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 1057",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 37800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1396.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1455.0,
                        LengthMM = 4045.0,
                        ManufactureYear = 2015,
                        Mileage = 70000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 137.0,
                        PredictedPrice = 34493.5m,
                        PricePerMonth = 3150.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2570.0,
                        WidthMM = 1720.0,
                        CarModelID = KiaRio.ID,
                        CarModel = KiaRio,
                        Title = "Kia Rio 1058",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboSuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 38800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1197.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4384.0,
                        ManufactureYear = 2016,
                        Mileage = 75000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 175.0,
                        PredictedPrice = 58085.77m,
                        PricePerMonth = 3233.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2637.0,
                        WidthMM = 1699.0,
                        CarModelID = VolkswagenVento.ID,
                        CarModel = VolkswagenVento,
                        Title = "Volkswagen Vento 1059",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 143000.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1991.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1494.0,
                        LengthMM = 4417.0,
                        ManufactureYear = 2015,
                        Mileage = 120000.0,
                        PeakPowerHP = 211.0,
                        PeakTorqueNM = 350.0,
                        PredictedPrice = 140167.94m,
                        PricePerMonth = 11916.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2699.0,
                        WidthMM = 1804.0,
                        CarModelID = MercedesBenzGla250.ID,
                        CarModel = MercedesBenzGla250,
                        Title = "MercedesBenz Gla250 1060",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 28800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2499.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1435.0,
                        LengthMM = 4730.0,
                        ManufactureYear = 2005,
                        Mileage = 165000.0,
                        PeakPowerHP = 215.0,
                        PeakTorqueNM = 260.0,
                        PredictedPrice = 38899.89m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaMarkX.ID,
                        CarModel = ToyotaMarkX,
                        Title = "Toyota MarkX 1061",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 65000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 23596.64m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 1062",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 99800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2672.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2010,
                        Mileage = 125000.0,
                        PeakPowerHP = 185.0,
                        PeakTorqueNM = 252.0,
                        PredictedPrice = 78280.18m,
                        PricePerMonth = 8316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1885.0,
                        CarModelID = LexusRx270.ID,
                        CarModel = LexusRx270,
                        Title = "Lexus Rx270 1063",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 6900.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1298.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1550.0,
                        LengthMM = 3750.0,
                        ManufactureYear = 2010,
                        Mileage = 90000.0,
                        PeakPowerHP = 87.0,
                        PeakTorqueNM = 116.0,
                        PredictedPrice = 20141.02m,
                        PricePerMonth = 575.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1665.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 1064",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinScrollTurbo],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 23888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1525.0,
                        LengthMM = 4682.0,
                        ManufactureYear = 2015,
                        Mileage = 100000.0,
                        PeakPowerHP = 166.0,
                        PeakTorqueNM = 240.0,
                        PredictedPrice = 47558.93m,
                        PricePerMonth = 1990.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2710.0,
                        WidthMM = 1815.0,
                        CarModelID = Peugeot408.ID,
                        CarModel = Peugeot408,
                        Title = "Peugeot 408 1065",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 112888.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 3456.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4770.0,
                        ManufactureYear = 2012,
                        Mileage = 165000.0,
                        PeakPowerHP = 277.0,
                        PeakTorqueNM = 346.0,
                        PredictedPrice = 109199.21m,
                        PricePerMonth = 9407.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1885.0,
                        CarModelID = LexusRx350.ID,
                        CarModel = LexusRx350,
                        Title = "Lexus Rx350 1066",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 53700.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 4410.0,
                        ManufactureYear = 2017,
                        Mileage = 50000.0,
                        PeakPowerHP = 107.0,
                        PeakTorqueNM = 140.0,
                        PredictedPrice = 56313.79m,
                        PricePerMonth = 4475.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 1067",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 15300.0m,
                        Colour = "null",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1781.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1815.0,
                        LengthMM = 4535.0,
                        ManufactureYear = 2003,
                        Mileage = 145000.0,
                        PeakPowerHP = 83.0,
                        PeakTorqueNM = 147.0,
                        PredictedPrice = 20926.24m,
                        PricePerMonth = 1275.0m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2650.0,
                        WidthMM = 1710.0,
                        CarModelID = ToyotaUnser.ID,
                        CarModel = ToyotaUnser,
                        Title = "Toyota Unser 1068",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 17100.0m,
                        Colour = "Blue",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 3,
                        EngineCC = 1597.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1420.0,
                        LengthMM = 3905.0,
                        ManufactureYear = 2010,
                        Mileage = 65000.0,
                        PeakPowerHP = 111.0,
                        PeakTorqueNM = 148.0,
                        PredictedPrice = 21184.52m,
                        PricePerMonth = 1425.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2440.0,
                        WidthMM = 1710.0,
                        CarModelID = ProtonSatria.ID,
                        CarModel = ProtonSatria,
                        Title = "Proton Satria 1069",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 5500.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1468.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1385.0,
                        LengthMM = 4360.0,
                        ManufactureYear = 2000,
                        Mileage = 105000.0,
                        PeakPowerHP = 90.0,
                        PeakTorqueNM = 126.0,
                        PredictedPrice = 8838.95m,
                        PricePerMonth = 458.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1680.0,
                        CarModelID = ProtonWira.ID,
                        CarModel = ProtonWira,
                        Title = "Proton Wira 1070",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 89800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 4,
                        EngineCC = 2393.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.Diesel],
                        HeightMM = 1815.0,
                        LengthMM = 5330.0,
                        ManufactureYear = 2016,
                        Mileage = 130000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 93116.43m,
                        PricePerMonth = 7483.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 3085.0,
                        WidthMM = 1855.0,
                        CarModelID = ToyotaHilux.ID,
                        CarModel = ToyotaHilux,
                        Title = "Toyota Hilux 1071",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 70800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1465.0,
                        LengthMM = 4870.0,
                        ManufactureYear = 2015,
                        Mileage = 80000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 67241.89m,
                        PricePerMonth = 5900.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2775.0,
                        WidthMM = 1850.0,
                        CarModelID = HondaAccord.ID,
                        CarModel = HondaAccord,
                        Title = "Honda Accord 1072",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28500.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 3640.0,
                        ManufactureYear = 2017,
                        Mileage = 60000.0,
                        PeakPowerHP = 68.0,
                        PeakTorqueNM = 91.0,
                        PredictedPrice = 27046.98m,
                        PricePerMonth = 2375.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2455.0,
                        WidthMM = 1620.0,
                        CarModelID = PeroduaAxia.ID,
                        CarModel = PeroduaAxia,
                        Title = "Perodua Axia 1073",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 16800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1388.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2011,
                        Mileage = 105000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 128.0,
                        PredictedPrice = 18527.18m,
                        PricePerMonth = 1400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 1074",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 68777.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 2260.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1685.0,
                        LengthMM = 4860.0,
                        ManufactureYear = 2011,
                        Mileage = 85000.0,
                        PeakPowerHP = 163.0,
                        PeakTorqueNM = 203.0,
                        PredictedPrice = 65233.14m,
                        PricePerMonth = 5731.42m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2950.0,
                        WidthMM = 1850.0,
                        CarModelID = Mazda8.ID,
                        CarModel = Mazda8,
                        Title = "Mazda 8 1075",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 156800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 2494.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1445.0,
                        LengthMM = 4885.0,
                        ManufactureYear = 2019,
                        Mileage = 25000.0,
                        PeakPowerHP = 184.0,
                        PeakTorqueNM = 235.0,
                        PredictedPrice = 144093.66m,
                        PricePerMonth = 13066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2825.0,
                        WidthMM = 1840.0,
                        CarModelID = ToyotaCamry.ID,
                        CarModel = ToyotaCamry,
                        Title = "Toyota Camry 1076",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 23800.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1596.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1475.0,
                        LengthMM = 3950.0,
                        ManufactureYear = 2012,
                        Mileage = 115000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 152.0,
                        PredictedPrice = 22532.91m,
                        PricePerMonth = 1983.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2489.0,
                        WidthMM = 1722.0,
                        CarModelID = FordFiesta.ID,
                        CarModel = FordFiesta,
                        Title = "Ford Fiesta 1077",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 41999.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1995.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1615.0,
                        LengthMM = 4450.0,
                        ManufactureYear = 2013,
                        Mileage = 70000.0,
                        PeakPowerHP = 150.0,
                        PeakTorqueNM = 196.0,
                        PredictedPrice = 43886.06m,
                        PricePerMonth = 3499.92m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2635.0,
                        WidthMM = 1780.0,
                        CarModelID = SubaruXv.ID,
                        CarModel = SubaruXv,
                        Title = "Subaru Xv 1078",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 72800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2015,
                        Mileage = 75000.0,
                        PeakPowerHP = 155.0,
                        PeakTorqueNM = 200.0,
                        PredictedPrice = 74576.58m,
                        PricePerMonth = 6066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 1079",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.TwinTurboIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 538800.0m,
                        Colour = "Orange",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 2,
                        EngineCC = 3799.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1370.0,
                        LengthMM = 4710.0,
                        ManufactureYear = 2018,
                        Mileage = 15000.0,
                        PeakPowerHP = 570.0,
                        PeakTorqueNM = 637.0,
                        PredictedPrice = 416190.87m,
                        PricePerMonth = 44900.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2780.0,
                        WidthMM = 1895.0,
                        CarModelID = NissanGtR.ID,
                        CarModel = NissanGtR,
                        Title = "Nissan GtR 1080",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 43988.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1496.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1515.0,
                        LengthMM = 3895.0,
                        ManufactureYear = 2018,
                        Mileage = 20000.0,
                        PeakPowerHP = 103.0,
                        PeakTorqueNM = 136.0,
                        PredictedPrice = 43586.44m,
                        PricePerMonth = 3665.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2500.0,
                        WidthMM = 1735.0,
                        CarModelID = PeroduaMyvi.ID,
                        CarModel = PeroduaMyvi,
                        Title = "Perodua Myvi 1081",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 318000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 3605.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1418.0,
                        LengthMM = 5015.0,
                        ManufactureYear = 2014,
                        Mileage = 85000.0,
                        PeakPowerHP = 310.0,
                        PeakTorqueNM = 400.0,
                        PredictedPrice = 215516.68m,
                        PricePerMonth = 26500.0m,
                        SeatCapacity = 4,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2920.0,
                        WidthMM = 1931.0,
                        CarModelID = PorschePanamera.ID,
                        CarModel = PorschePanamera,
                        Title = "Porsche Panamera 1082",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 67999.0m,
                        Colour = "Bronze",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1666.0,
                        LengthMM = 4453.0,
                        ManufactureYear = 2018,
                        Mileage = 65000.0,
                        PeakPowerHP = 120.0,
                        PeakTorqueNM = 145.0,
                        PredictedPrice = 65343.89m,
                        PricePerMonth = 5666.58m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2662.0,
                        WidthMM = 1735.0,
                        CarModelID = HondaBrV.ID,
                        CarModel = HondaBrV,
                        Title = "Honda BrV 1083",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 48400.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1760.0,
                        LengthMM = 4585.0,
                        ManufactureYear = 2014,
                        Mileage = 70000.0,
                        PeakPowerHP = 136.0,
                        PeakTorqueNM = 182.0,
                        PredictedPrice = 45293.42m,
                        PricePerMonth = 4033.33m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2750.0,
                        WidthMM = 1775.0,
                        CarModelID = ToyotaInnova.ID,
                        CarModel = ToyotaInnova,
                        Title = "Toyota Innova 1084",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 58888.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1670.0,
                        LengthMM = 4555.0,
                        ManufactureYear = 2013,
                        Mileage = 90000.0,
                        PeakPowerHP = 154.0,
                        PeakTorqueNM = 198.0,
                        PredictedPrice = 62431.08m,
                        PricePerMonth = 4907.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1840.0,
                        CarModelID = MazdaCx5.ID,
                        CarModel = MazdaCx5,
                        Title = "Mazda Cx5 1085",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 24800.0m,
                        Colour = "Red",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1332.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1554.0,
                        LengthMM = 3920.0,
                        ManufactureYear = 2015,
                        Mileage = 55000.0,
                        PeakPowerHP = 95.0,
                        PeakTorqueNM = 120.0,
                        PredictedPrice = 22879.84m,
                        PricePerMonth = 2066.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2555.0,
                        WidthMM = 1722.0,
                        CarModelID = ProtonIriz.ID,
                        CarModel = ProtonIriz,
                        Title = "Proton Iriz 1086",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 63800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 1998.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1835.0,
                        LengthMM = 4715.0,
                        ManufactureYear = 2014,
                        Mileage = 105000.0,
                        PeakPowerHP = 151.0,
                        PeakTorqueNM = 190.0,
                        PredictedPrice = 57436.76m,
                        PricePerMonth = 5316.67m,
                        SeatCapacity = 8,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2850.0,
                        WidthMM = 1770.0,
                        CarModelID = MazdaBiante.ID,
                        CarModel = MazdaBiante,
                        Title = "Mazda Biante 1087",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.OfficialImport],
                        AssignedPrice = 43888.0m,
                        Colour = "White",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 5,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1735.0,
                        LengthMM = 4215.0,
                        ManufactureYear = 2012,
                        Mileage = 95000.0,
                        PeakPowerHP = 118.0,
                        PeakTorqueNM = 146.0,
                        PredictedPrice = 40886.55m,
                        PricePerMonth = 3657.33m,
                        SeatCapacity = 7,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2740.0,
                        WidthMM = 1700.0,
                        CarModelID = HondaFreed.ID,
                        CarModel = HondaFreed,
                        Title = "Honda Freed 1088",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 328000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 5000.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1855.0,
                        LengthMM = 4999.0,
                        ManufactureYear = 2013,
                        Mileage = 55000.0,
                        PeakPowerHP = 510.0,
                        PeakTorqueNM = 625.0,
                        PredictedPrice = 305753.25m,
                        PricePerMonth = 27333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2922.0,
                        WidthMM = 2220.0,
                        CarModelID = LandRoverRangeRover.ID,
                        CarModel = LandRoverRangeRover,
                        Title = "LandRover RangeRover 1089",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1598.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1466.0,
                        LengthMM = 4384.0,
                        ManufactureYear = 2014,
                        Mileage = 115000.0,
                        PeakPowerHP = 105.0,
                        PeakTorqueNM = 153.0,
                        PredictedPrice = 29570.16m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2552.0,
                        WidthMM = 1699.0,
                        CarModelID = VolkswagenPolo.ID,
                        CarModel = VolkswagenPolo,
                        Title = "Volkswagen Polo 1090",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 27800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1497.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1460.0,
                        LengthMM = 4300.0,
                        ManufactureYear = 2010,
                        Mileage = 75000.0,
                        PeakPowerHP = 109.0,
                        PeakTorqueNM = 141.0,
                        PredictedPrice = 32259.7m,
                        PricePerMonth = 2316.67m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2550.0,
                        WidthMM = 1700.0,
                        CarModelID = ToyotaVios.ID,
                        CarModel = ToyotaVios,
                        Title = "Toyota Vios 1091",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 28800.0m,
                        Colour = "Grey",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.MultiPointInjected],
                        Doors = 4,
                        EngineCC = 1997.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1510.0,
                        LengthMM = 1665.0,
                        ManufactureYear = 2013,
                        Mileage = 75000.0,
                        PeakPowerHP = 133.0,
                        PeakTorqueNM = 191.0,
                        PredictedPrice = 34595.23m,
                        PricePerMonth = 2400.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.No],
                        WheelBaseMM = 2700.0,
                        WidthMM = 1700.0,
                        CarModelID = NissanSylphy.ID,
                        CarModel = NissanSylphy,
                        Title = "Nissan Sylphy 1092",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.SuperchargedIntercooled],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.ParallelImport],
                        AssignedPrice = 328000.0m,
                        Colour = "Black",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.DirectInjection],
                        Doors = 5,
                        EngineCC = 5000.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1855.0,
                        LengthMM = 4999.0,
                        ManufactureYear = 2013,
                        Mileage = 53000.0,
                        PeakPowerHP = 510.0,
                        PeakTorqueNM = 625.0,
                        PredictedPrice = 317488.23m,
                        PricePerMonth = 27333.33m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Automatic],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2922.0,
                        WidthMM = 2220.0,
                        CarModelID = LandRoverRangeRover.ID,
                        CarModel = LandRoverRangeRover,
                        Title = "LandRover RangeRover 1093",
                    },
                    

                    new Car
                    {
                        Aspiration = Car.AspirationTypeList[(int)Car.AspirationType.Aspirated],
                        Assembled = Car.AssembledTypeList[(int)Car.AssembledType.LocallyBuilt],
                        AssignedPrice = 7800.0m,
                        Colour = "Silver",
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DirectInjection = Car.DirectInjectionList[(int)Car.DirectInjectionType.CarburettorSingle],
                        Doors = 5,
                        EngineCC = 659.0,
                        FuelType = Car.FuelTypeList[(int)Car.FuelTypeEnum.UnLeadedPetrol],
                        HeightMM = 1415.0,
                        LengthMM = 3365.0,
                        ManufactureYear = 2009,
                        Mileage = 165000.0,
                        PeakPowerHP = 31.0,
                        PeakTorqueNM = 49.0,
                        PredictedPrice = 6418.17m,
                        PricePerMonth = 650.0m,
                        SeatCapacity = 5,
                        SteeringType = Car.SteeringTypeList[(int)Car.SteeringTypeEnum.RackAndPinion],
                        Transmission = Car.TransmissionList[(int)Car.TransmissionType.Manual],
                        UpdateAnalytics = Car.UpdateAnalyticsList[(int)Car.UpdateAnalyticsEnum.Yes],
                        WheelBaseMM = 2280.0,
                        WidthMM = 1405.0,
                        CarModelID = PeroduaKancil.ID,
                        CarModel = PeroduaKancil,
                        Title = "Perodua Kancil 1094",
                    }
                );

                // Initialize leads
                context.Leads.AddRange(

                    new Lead
                    {
                        Name = "Charlene Chen",
                        Email = "charlene_chen@gmail.com",
                        PhoneNo = "017-3822148",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Clark",
                        Email = "angela_clark@gmail.com",
                        PhoneNo = "012-0268783",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Wanda Townsend",
                        Email = "wanda_townsend@gmail.com",
                        PhoneNo = "017-9450421",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 253.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Terry",
                        Email = "stephanie_terry@gmail.com",
                        PhoneNo = "010-7513500",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Earl Brown",
                        Email = "earl_brown@gmail.com",
                        PhoneNo = "012-6248691",
                        AvgPageViewPerVisit = 4.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 87.0
                    },
                    

                    new Lead
                    {
                        Name = "Isabel Reilly",
                        Email = "isabel_reilly@gmail.com",
                        PhoneNo = "016-1097764",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1192.0
                    },
                    

                    new Lead
                    {
                        Name = "Monica Gibson",
                        Email = "monica_gibson@gmail.com",
                        PhoneNo = "019-6735543",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1568,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 45.0
                    },
                    

                    new Lead
                    {
                        Name = "Natasha Trevino",
                        Email = "natasha_trevino@gmail.com",
                        PhoneNo = "010-3722530",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6816,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1730.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Stuart",
                        Email = "amanda_stuart@gmail.com",
                        PhoneNo = "010-9107892",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1732.0
                    },
                    

                    new Lead
                    {
                        Name = "Suzanne Middleton",
                        Email = "suzanne_middleton@gmail.com",
                        PhoneNo = "017-1232594",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 166.0
                    },
                    

                    new Lead
                    {
                        Name = "Gilbert Obrien",
                        Email = "gilbert_obrien@gmail.com",
                        PhoneNo = "018-9706701",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 298.0
                    },
                    

                    new Lead
                    {
                        Name = "Randy Webb",
                        Email = "randy_webb@gmail.com",
                        PhoneNo = "018-6439546",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1411.0
                    },
                    

                    new Lead
                    {
                        Name = "Kyle Smith",
                        Email = "kyle_smith@gmail.com",
                        PhoneNo = "018-0929957",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9478,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1083.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Smith",
                        Email = "angela_smith@gmail.com",
                        PhoneNo = "010-4022305",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dustin Lam",
                        Email = "dustin_lam@gmail.com",
                        PhoneNo = "016-9084260",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Shelby Rios",
                        Email = "shelby_rios@gmail.com",
                        PhoneNo = "010-5158959",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7183,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 866.0
                    },
                    

                    new Lead
                    {
                        Name = "Tracy Riley",
                        Email = "tracy_riley@gmail.com",
                        PhoneNo = "010-5778329",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.968,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1775.0
                    },
                    

                    new Lead
                    {
                        Name = "Brian Evans",
                        Email = "brian_evans@gmail.com",
                        PhoneNo = "014-4741715",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6401,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 609.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Gallagher",
                        Email = "richard_gallagher@gmail.com",
                        PhoneNo = "018-5813091",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7106,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1557.0
                    },
                    

                    new Lead
                    {
                        Name = "Emily Owens",
                        Email = "emily_owens@gmail.com",
                        PhoneNo = "019-2455036",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 781.0
                    },
                    

                    new Lead
                    {
                        Name = "Amber Montgomery",
                        Email = "amber_montgomery@gmail.com",
                        PhoneNo = "014-0617585",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2278,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 89.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Hill",
                        Email = "jennifer_hill@gmail.com",
                        PhoneNo = "019-8834563",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 231.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Parks",
                        Email = "karen_parks@gmail.com",
                        PhoneNo = "010-4971550",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina Williams",
                        Email = "christina_williams@gmail.com",
                        PhoneNo = "013-6998799",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6816,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1641.0
                    },
                    

                    new Lead
                    {
                        Name = "James Smith",
                        Email = "james_smith@gmail.com",
                        PhoneNo = "016-0298566",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 321.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Bryant",
                        Email = "jonathan_bryant@gmail.com",
                        PhoneNo = "016-9478825",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 371.0
                    },
                    

                    new Lead
                    {
                        Name = "Tina Thomas",
                        Email = "tina_thomas@gmail.com",
                        PhoneNo = "013-2471387",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.341,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 555.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Gill",
                        Email = "joseph_gill@gmail.com",
                        PhoneNo = "012-3607109",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7343,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1202.0
                    },
                    

                    new Lead
                    {
                        Name = "Bobby Carpenter",
                        Email = "bobby_carpenter@gmail.com",
                        PhoneNo = "010-9621814",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michele Ramirez",
                        Email = "michele_ramirez@gmail.com",
                        PhoneNo = "013-7609045",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Conner",
                        Email = "michael_conner@gmail.com",
                        PhoneNo = "013-3514521",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1576.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Dudley",
                        Email = "steven_dudley@gmail.com",
                        PhoneNo = "019-3928515",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1030.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Patel",
                        Email = "robert_patel@gmail.com",
                        PhoneNo = "013-4100016",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.32,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 464.0
                    },
                    

                    new Lead
                    {
                        Name = "Lauren Young",
                        Email = "lauren_young@gmail.com",
                        PhoneNo = "019-0396735",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Vasquez",
                        Email = "amanda_vasquez@gmail.com",
                        PhoneNo = "019-2877535",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 35.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Thomas MD",
                        Email = "ryan_thomas@gmail.com",
                        PhoneNo = "017-7546781",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0576,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 190.0
                    },
                    

                    new Lead
                    {
                        Name = "Jacob Baird",
                        Email = "jacob_baird@gmail.com",
                        PhoneNo = "010-7503050",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1659.0
                    },
                    

                    new Lead
                    {
                        Name = "Jay Peters",
                        Email = "jay_peters@gmail.com",
                        PhoneNo = "019-0634253",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Lopez",
                        Email = "mark_lopez@gmail.com",
                        PhoneNo = "017-7494570",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 186.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Morris",
                        Email = "jonathan_morris@gmail.com",
                        PhoneNo = "019-5954812",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Tracy Hamilton",
                        Email = "tracy_hamilton@gmail.com",
                        PhoneNo = "010-5115829",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 60.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Allen",
                        Email = "richard_allen@gmail.com",
                        PhoneNo = "012-1732748",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Clayton Rivera",
                        Email = "clayton_rivera@gmail.com",
                        PhoneNo = "016-9094132",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Chelsea Brewer",
                        Email = "chelsea_brewer@gmail.com",
                        PhoneNo = "010-6414527",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 882.0
                    },
                    

                    new Lead
                    {
                        Name = "Luke Nelson",
                        Email = "luke_nelson@gmail.com",
                        PhoneNo = "014-9267609",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 208.0
                    },
                    

                    new Lead
                    {
                        Name = "Mitchell Romero",
                        Email = "mitchell_romero@gmail.com",
                        PhoneNo = "019-0769182",
                        AvgPageViewPerVisit = 1.25,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2253,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 391.0
                    },
                    

                    new Lead
                    {
                        Name = "Sheila Daniel",
                        Email = "sheila_daniel@gmail.com",
                        PhoneNo = "017-7116279",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Tucker",
                        Email = "robert_tucker@gmail.com",
                        PhoneNo = "017-6871501",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Tracy Long",
                        Email = "tracy_long@gmail.com",
                        PhoneNo = "017-4022520",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 98.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Jordan",
                        Email = "jessica_jordan@gmail.com",
                        PhoneNo = "013-1575165",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "David Schultz",
                        Email = "david_schultz@gmail.com",
                        PhoneNo = "010-7624373",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Greene",
                        Email = "jennifer_greene@gmail.com",
                        PhoneNo = "010-2562366",
                        AvgPageViewPerVisit = 3.8,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 19.0,
                        TotalTimeSpendOnSite = 265.0
                    },
                    

                    new Lead
                    {
                        Name = "Hannah Holt",
                        Email = "hannah_holt@gmail.com",
                        PhoneNo = "010-1220952",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "James Lambert",
                        Email = "james_lambert@gmail.com",
                        PhoneNo = "012-4260759",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Leonard",
                        Email = "melissa_leonard@gmail.com",
                        PhoneNo = "019-6311432",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrea Powers",
                        Email = "andrea_powers@gmail.com",
                        PhoneNo = "010-7794478",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1745,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 500.0
                    },
                    

                    new Lead
                    {
                        Name = "Sheryl Duran",
                        Email = "sheryl_duran@gmail.com",
                        PhoneNo = "016-3085225",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Nash",
                        Email = "michelle_nash@gmail.com",
                        PhoneNo = "010-0834032",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 202.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Ramirez MD",
                        Email = "christopher_ramirez@gmail.com",
                        PhoneNo = "019-9424933",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "David Green MD",
                        Email = "david_green@gmail.com",
                        PhoneNo = "012-5605694",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 132.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Miller",
                        Email = "joshua_miller@gmail.com",
                        PhoneNo = "010-7677342",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 360.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Estes",
                        Email = "laura_estes@gmail.com",
                        PhoneNo = "010-9474683",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1196.0
                    },
                    

                    new Lead
                    {
                        Name = "Amy Brown",
                        Email = "amy_brown@gmail.com",
                        PhoneNo = "018-8999906",
                        AvgPageViewPerVisit = 1.38,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2259,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 8.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelly Vargas",
                        Email = "kelly_vargas@gmail.com",
                        PhoneNo = "013-1728073",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Mack",
                        Email = "andrew_mack@gmail.com",
                        PhoneNo = "016-0245384",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 211.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicholas Riggs",
                        Email = "nicholas_riggs@gmail.com",
                        PhoneNo = "012-5618657",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1009.0
                    },
                    

                    new Lead
                    {
                        Name = "Victor Jackson",
                        Email = "victor_jackson@gmail.com",
                        PhoneNo = "010-8488983",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 176.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephen Washington",
                        Email = "stephen_washington@gmail.com",
                        PhoneNo = "016-3221444",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1010.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeffrey Martinez",
                        Email = "jeffrey_martinez@gmail.com",
                        PhoneNo = "019-9761883",
                        AvgPageViewPerVisit = 4.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1355,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 127.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Ruiz",
                        Email = "laura_ruiz@gmail.com",
                        PhoneNo = "010-7595484",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 127.0
                    },
                    

                    new Lead
                    {
                        Name = "Misty Hurst",
                        Email = "misty_hurst@gmail.com",
                        PhoneNo = "018-8707627",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Chad Gibson",
                        Email = "chad_gibson@gmail.com",
                        PhoneNo = "013-6053599",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1537,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 260.0
                    },
                    

                    new Lead
                    {
                        Name = "Keith Hancock",
                        Email = "keith_hancock@gmail.com",
                        PhoneNo = "012-9135494",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6533,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 678.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Brown",
                        Email = "joseph_brown@gmail.com",
                        PhoneNo = "012-1732878",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 267.0
                    },
                    

                    new Lead
                    {
                        Name = "Adam Murphy",
                        Email = "adam_murphy@gmail.com",
                        PhoneNo = "012-9550633",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7145,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 1066.0
                    },
                    

                    new Lead
                    {
                        Name = "Maria Fernandez",
                        Email = "maria_fernandez@gmail.com",
                        PhoneNo = "012-1702419",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7334,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1022.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Gregory",
                        Email = "stephanie_gregory@gmail.com",
                        PhoneNo = "012-8418411",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7624,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 516.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Stone",
                        Email = "karen_stone@gmail.com",
                        PhoneNo = "019-4209864",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Yvette Allen",
                        Email = "yvette_allen@gmail.com",
                        PhoneNo = "012-6845278",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Lynn Wilson",
                        Email = "lynn_wilson@gmail.com",
                        PhoneNo = "013-6257201",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 45.0
                    },
                    

                    new Lead
                    {
                        Name = "Katherine Kennedy",
                        Email = "katherine_kennedy@gmail.com",
                        PhoneNo = "014-7557175",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 179.0
                    },
                    

                    new Lead
                    {
                        Name = "Cameron Reed",
                        Email = "cameron_reed@gmail.com",
                        PhoneNo = "014-0615643",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 298.0
                    },
                    

                    new Lead
                    {
                        Name = "April Allen",
                        Email = "april_allen@gmail.com",
                        PhoneNo = "010-3779990",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.257,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 422.0
                    },
                    

                    new Lead
                    {
                        Name = "Lucas Herrera",
                        Email = "lucas_herrera@gmail.com",
                        PhoneNo = "013-7612028",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 306.0
                    },
                    

                    new Lead
                    {
                        Name = "Lori Chambers",
                        Email = "lori_chambers@gmail.com",
                        PhoneNo = "014-4551820",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Strickland",
                        Email = "heather_strickland@gmail.com",
                        PhoneNo = "019-1771579",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 343.0
                    },
                    

                    new Lead
                    {
                        Name = "Cynthia Quinn",
                        Email = "cynthia_quinn@gmail.com",
                        PhoneNo = "012-0951216",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 816.0
                    },
                    

                    new Lead
                    {
                        Name = "Erin Cruz",
                        Email = "erin_cruz@gmail.com",
                        PhoneNo = "016-8147011",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1556.0
                    },
                    

                    new Lead
                    {
                        Name = "Dana Shaw",
                        Email = "dana_shaw@gmail.com",
                        PhoneNo = "013-6958937",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8303,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 297.0
                    },
                    

                    new Lead
                    {
                        Name = "Daniel Shaffer",
                        Email = "daniel_shaffer@gmail.com",
                        PhoneNo = "014-5452404",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7187,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1380.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephen Hayes",
                        Email = "stephen_hayes@gmail.com",
                        PhoneNo = "014-8926007",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 240.0
                    },
                    

                    new Lead
                    {
                        Name = "Jacob Miller",
                        Email = "jacob_miller@gmail.com",
                        PhoneNo = "017-9637183",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 289.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Bentley",
                        Email = "michelle_bentley@gmail.com",
                        PhoneNo = "017-4196316",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7334,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 12.0,
                        TotalTimeSpendOnSite = 1411.0
                    },
                    

                    new Lead
                    {
                        Name = "Linda Myers",
                        Email = "linda_myers@gmail.com",
                        PhoneNo = "014-9260801",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4804,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 703.0
                    },
                    

                    new Lead
                    {
                        Name = "Chad Young",
                        Email = "chad_young@gmail.com",
                        PhoneNo = "017-3810304",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Brock",
                        Email = "joseph_brock@gmail.com",
                        PhoneNo = "010-6615302",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4309,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1139.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Patel",
                        Email = "michelle_patel@gmail.com",
                        PhoneNo = "018-9656940",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Lindsay Gilbert",
                        Email = "lindsay_gilbert@gmail.com",
                        PhoneNo = "017-0949800",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 26.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Brown",
                        Email = "patrick_brown@gmail.com",
                        PhoneNo = "016-5070226",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jody Rodriguez",
                        Email = "jody_rodriguez@gmail.com",
                        PhoneNo = "017-6026335",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 210.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Campbell",
                        Email = "thomas_campbell@gmail.com",
                        PhoneNo = "012-2229055",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5101,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 683.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Rodriguez",
                        Email = "kimberly_rodriguez@gmail.com",
                        PhoneNo = "010-0889821",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3377,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1256.0
                    },
                    

                    new Lead
                    {
                        Name = "Bailey Harper",
                        Email = "bailey_harper@gmail.com",
                        PhoneNo = "010-6306601",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2453,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 479.0
                    },
                    

                    new Lead
                    {
                        Name = "Amy Horne",
                        Email = "amy_horne@gmail.com",
                        PhoneNo = "013-4560359",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Matthew Lewis",
                        Email = "matthew_lewis@gmail.com",
                        PhoneNo = "013-3783826",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 343.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Callahan",
                        Email = "joseph_callahan@gmail.com",
                        PhoneNo = "016-1010522",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 369.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Roberts",
                        Email = "patrick_roberts@gmail.com",
                        PhoneNo = "018-4986814",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1017.0
                    },
                    

                    new Lead
                    {
                        Name = "Daniel Weiss",
                        Email = "daniel_weiss@gmail.com",
                        PhoneNo = "017-7533976",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Keith Dixon",
                        Email = "keith_dixon@gmail.com",
                        PhoneNo = "017-4803615",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 188.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Fuller",
                        Email = "michelle_fuller@gmail.com",
                        PhoneNo = "016-8780134",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 74.0
                    },
                    

                    new Lead
                    {
                        Name = "Marcus Hall",
                        Email = "marcus_hall@gmail.com",
                        PhoneNo = "019-2125144",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2704,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 558.0
                    },
                    

                    new Lead
                    {
                        Name = "David Wood",
                        Email = "david_wood@gmail.com",
                        PhoneNo = "010-4539046",
                        AvgPageViewPerVisit = 2.83,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 17.0,
                        TotalTimeSpendOnSite = 380.0
                    },
                    

                    new Lead
                    {
                        Name = "Courtney Richardson",
                        Email = "courtney_richardson@gmail.com",
                        PhoneNo = "010-8968250",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1064,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 165.0
                    },
                    

                    new Lead
                    {
                        Name = "Janet Adams",
                        Email = "janet_adams@gmail.com",
                        PhoneNo = "017-0538936",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7291,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 10.0,
                        TotalTimeSpendOnSite = 1290.0
                    },
                    

                    new Lead
                    {
                        Name = "Erik Jackson",
                        Email = "erik_jackson@gmail.com",
                        PhoneNo = "018-2887559",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 31.0
                    },
                    

                    new Lead
                    {
                        Name = "Jose Vazquez",
                        Email = "jose_vazquez@gmail.com",
                        PhoneNo = "017-1491559",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7268,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 803.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Fernandez",
                        Email = "melissa_fernandez@gmail.com",
                        PhoneNo = "018-1187765",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6816,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1646.0
                    },
                    

                    new Lead
                    {
                        Name = "Tammy Clark",
                        Email = "tammy_clark@gmail.com",
                        PhoneNo = "017-8841903",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1911,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 450.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Gutierrez",
                        Email = "kimberly_gutierrez@gmail.com",
                        PhoneNo = "019-1203598",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7194,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1138.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Alexander",
                        Email = "susan_alexander@gmail.com",
                        PhoneNo = "014-0321663",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Businessman],
                        PredictedScore = 0.7385,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 709.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Riddle",
                        Email = "karen_riddle@gmail.com",
                        PhoneNo = "019-8705729",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0682,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 119.0
                    },
                    

                    new Lead
                    {
                        Name = "Jared Fisher",
                        Email = "jared_fisher@gmail.com",
                        PhoneNo = "010-7383327",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9389,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 886.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Sullivan",
                        Email = "jennifer_sullivan@gmail.com",
                        PhoneNo = "019-8721857",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Gallegos",
                        Email = "kimberly_gallegos@gmail.com",
                        PhoneNo = "016-9858280",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Dodson",
                        Email = "patrick_dodson@gmail.com",
                        PhoneNo = "018-3908610",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 183.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Miller",
                        Email = "richard_miller@gmail.com",
                        PhoneNo = "014-8853186",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2981,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 615.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelsey Berry",
                        Email = "kelsey_berry@gmail.com",
                        PhoneNo = "010-8819331",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 154.0
                    },
                    

                    new Lead
                    {
                        Name = "Erica Eaton DDS",
                        Email = "erica_eaton@gmail.com",
                        PhoneNo = "014-1761094",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2096,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 178.0
                    },
                    

                    new Lead
                    {
                        Name = "John Green",
                        Email = "john_green@gmail.com",
                        PhoneNo = "014-8997875",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9062,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1224.0
                    },
                    

                    new Lead
                    {
                        Name = "Jasmine Williamson",
                        Email = "jasmine_williamson@gmail.com",
                        PhoneNo = "019-2232488",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6264,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 690.0
                    },
                    

                    new Lead
                    {
                        Name = "Isaac Schneider",
                        Email = "isaac_schneider@gmail.com",
                        PhoneNo = "018-9397194",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1082.0
                    },
                    

                    new Lead
                    {
                        Name = "Wendy Smith",
                        Email = "wendy_smith@gmail.com",
                        PhoneNo = "016-2232550",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 277.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Lewis",
                        Email = "anthony_lewis@gmail.com",
                        PhoneNo = "010-4947247",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6882,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 698.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Martinez",
                        Email = "thomas_martinez@gmail.com",
                        PhoneNo = "016-0355478",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 127.0
                    },
                    

                    new Lead
                    {
                        Name = "Travis Sanchez",
                        Email = "travis_sanchez@gmail.com",
                        PhoneNo = "013-4600439",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9673,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1768.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Fry",
                        Email = "christopher_fry@gmail.com",
                        PhoneNo = "014-9222152",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6672,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1199.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Johnson",
                        Email = "lisa_johnson@gmail.com",
                        PhoneNo = "018-3863029",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7182,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 952.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Ayala",
                        Email = "anthony_ayala@gmail.com",
                        PhoneNo = "010-3784288",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 783.0
                    },
                    

                    new Lead
                    {
                        Name = "Gina Patel",
                        Email = "gina_patel@gmail.com",
                        PhoneNo = "019-3962926",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6245,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1246.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Mccoy",
                        Email = "christopher_mccoy@gmail.com",
                        PhoneNo = "014-0637379",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1566.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrea Bush",
                        Email = "andrea_bush@gmail.com",
                        PhoneNo = "012-3268179",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Theresa Terry",
                        Email = "theresa_terry@gmail.com",
                        PhoneNo = "012-2490326",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Nancy Ewing",
                        Email = "nancy_ewing@gmail.com",
                        PhoneNo = "016-3839427",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3217,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 549.0
                    },
                    

                    new Lead
                    {
                        Name = "Alyssa Webb",
                        Email = "alyssa_webb@gmail.com",
                        PhoneNo = "010-6625515",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1208.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Smith",
                        Email = "melissa_smith@gmail.com",
                        PhoneNo = "018-9499779",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0713,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 229.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. John Huynh",
                        Email = "dr._john@gmail.com",
                        PhoneNo = "013-5392390",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 357.0
                    },
                    

                    new Lead
                    {
                        Name = "Brandon Baker",
                        Email = "brandon_baker@gmail.com",
                        PhoneNo = "012-6313836",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelly Maxwell",
                        Email = "kelly_maxwell@gmail.com",
                        PhoneNo = "016-2357476",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1095,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 239.0
                    },
                    

                    new Lead
                    {
                        Name = "William Frazier",
                        Email = "william_frazier@gmail.com",
                        PhoneNo = "012-6427834",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1520.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Mcdonald",
                        Email = "michelle_mcdonald@gmail.com",
                        PhoneNo = "018-7962513",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8356,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 449.0
                    },
                    

                    new Lead
                    {
                        Name = "Todd Bowman",
                        Email = "todd_bowman@gmail.com",
                        PhoneNo = "013-3106259",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7232,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 931.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Debbie Macdonald",
                        Email = "mrs._debbie@gmail.com",
                        PhoneNo = "012-3953825",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeremiah Moody",
                        Email = "jeremiah_moody@gmail.com",
                        PhoneNo = "018-1265191",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 16.0
                    },
                    

                    new Lead
                    {
                        Name = "Arthur Miller",
                        Email = "arthur_miller@gmail.com",
                        PhoneNo = "016-6187178",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Hicks MD",
                        Email = "elizabeth_hicks@gmail.com",
                        PhoneNo = "014-7873092",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 300.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Hernandez",
                        Email = "stephanie_hernandez@gmail.com",
                        PhoneNo = "016-5905947",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7182,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1167.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Graham",
                        Email = "richard_graham@gmail.com",
                        PhoneNo = "019-0947958",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.208,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 28.0
                    },
                    

                    new Lead
                    {
                        Name = "Kevin Garcia",
                        Email = "kevin_garcia@gmail.com",
                        PhoneNo = "010-9040089",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 90.0
                    },
                    

                    new Lead
                    {
                        Name = "Cindy Jimenez",
                        Email = "cindy_jimenez@gmail.com",
                        PhoneNo = "016-3753951",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6245,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 899.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Tina Mendoza",
                        Email = "dr._tina@gmail.com",
                        PhoneNo = "019-4941090",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Garcia",
                        Email = "steven_garcia@gmail.com",
                        PhoneNo = "014-6493987",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.431,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1234.0
                    },
                    

                    new Lead
                    {
                        Name = "Jaclyn Harris",
                        Email = "jaclyn_harris@gmail.com",
                        PhoneNo = "017-3169601",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Cynthia Weeks",
                        Email = "cynthia_weeks@gmail.com",
                        PhoneNo = "017-0053249",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 96.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Smith",
                        Email = "amanda_smith@gmail.com",
                        PhoneNo = "019-5934890",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 369.0
                    },
                    

                    new Lead
                    {
                        Name = "Yvonne Taylor",
                        Email = "yvonne_taylor@gmail.com",
                        PhoneNo = "012-3232139",
                        AvgPageViewPerVisit = 5.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9794,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 2069.0
                    },
                    

                    new Lead
                    {
                        Name = "Alexis Smith",
                        Email = "alexis_smith@gmail.com",
                        PhoneNo = "010-8234324",
                        AvgPageViewPerVisit = 3.4,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7384,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 17.0,
                        TotalTimeSpendOnSite = 1439.0
                    },
                    

                    new Lead
                    {
                        Name = "Donald Skinner",
                        Email = "donald_skinner@gmail.com",
                        PhoneNo = "019-6156241",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Adkins",
                        Email = "steven_adkins@gmail.com",
                        PhoneNo = "019-9214920",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Smith",
                        Email = "christopher_smith@gmail.com",
                        PhoneNo = "012-8273992",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 198.0
                    },
                    

                    new Lead
                    {
                        Name = "Ronald Smith",
                        Email = "ronald_smith@gmail.com",
                        PhoneNo = "016-2180950",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1421.0
                    },
                    

                    new Lead
                    {
                        Name = "Dana George",
                        Email = "dana_george@gmail.com",
                        PhoneNo = "017-6316448",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3098,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 77.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Wright",
                        Email = "patrick_wright@gmail.com",
                        PhoneNo = "017-0646106",
                        AvgPageViewPerVisit = 3.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2096,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 127.0
                    },
                    

                    new Lead
                    {
                        Name = "Allen Petty",
                        Email = "allen_petty@gmail.com",
                        PhoneNo = "014-4905711",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1292.0
                    },
                    

                    new Lead
                    {
                        Name = "Carlos Walker",
                        Email = "carlos_walker@gmail.com",
                        PhoneNo = "014-7488905",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1027.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa White",
                        Email = "lisa_white@gmail.com",
                        PhoneNo = "014-0915389",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2087,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 66.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina Williams",
                        Email = "christina_williams@gmail.com",
                        PhoneNo = "017-1053173",
                        AvgPageViewPerVisit = 3.75,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1138,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 15.0,
                        TotalTimeSpendOnSite = 239.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Armstrong",
                        Email = "laura_armstrong@gmail.com",
                        PhoneNo = "012-9109238",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1301.0
                    },
                    

                    new Lead
                    {
                        Name = "Olivia Livingston",
                        Email = "olivia_livingston@gmail.com",
                        PhoneNo = "017-7796059",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4945,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 926.0
                    },
                    

                    new Lead
                    {
                        Name = "Jamie Vazquez",
                        Email = "jamie_vazquez@gmail.com",
                        PhoneNo = "014-8413539",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Young",
                        Email = "jonathan_young@gmail.com",
                        PhoneNo = "018-2208021",
                        AvgPageViewPerVisit = 2.2,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7446,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 1337.0
                    },
                    

                    new Lead
                    {
                        Name = "Johnny Miller",
                        Email = "johnny_miller@gmail.com",
                        PhoneNo = "016-2285825",
                        AvgPageViewPerVisit = 1.4,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2175,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 130.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Delgado",
                        Email = "christopher_delgado@gmail.com",
                        PhoneNo = "010-7771321",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 138.0
                    },
                    

                    new Lead
                    {
                        Name = "Vincent Ball",
                        Email = "vincent_ball@gmail.com",
                        PhoneNo = "018-3935739",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1131.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Ford",
                        Email = "andrew_ford@gmail.com",
                        PhoneNo = "016-6802306",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 330.0
                    },
                    

                    new Lead
                    {
                        Name = "James Sanchez",
                        Email = "james_sanchez@gmail.com",
                        PhoneNo = "018-8529571",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5873,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 658.0
                    },
                    

                    new Lead
                    {
                        Name = "Kenneth Cervantes",
                        Email = "kenneth_cervantes@gmail.com",
                        PhoneNo = "018-7100031",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 415.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Mclean",
                        Email = "ryan_mclean@gmail.com",
                        PhoneNo = "019-4159179",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1360.0
                    },
                    

                    new Lead
                    {
                        Name = "Debra Alvarez",
                        Email = "debra_alvarez@gmail.com",
                        PhoneNo = "017-3122096",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2426,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 472.0
                    },
                    

                    new Lead
                    {
                        Name = "Lori Holt",
                        Email = "lori_holt@gmail.com",
                        PhoneNo = "013-0839385",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Trujillo",
                        Email = "jennifer_trujillo@gmail.com",
                        PhoneNo = "019-1467120",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeanne Crosby",
                        Email = "jeanne_crosby@gmail.com",
                        PhoneNo = "010-8054388",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 398.0
                    },
                    

                    new Lead
                    {
                        Name = "April Bell",
                        Email = "april_bell@gmail.com",
                        PhoneNo = "017-7632491",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1176.0
                    },
                    

                    new Lead
                    {
                        Name = "Paula Anderson",
                        Email = "paula_anderson@gmail.com",
                        PhoneNo = "013-5765208",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5159,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 582.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Thompson",
                        Email = "angela_thompson@gmail.com",
                        PhoneNo = "016-8806974",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1455.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Small",
                        Email = "joseph_small@gmail.com",
                        PhoneNo = "014-4306131",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1576.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Lane",
                        Email = "michael_lane@gmail.com",
                        PhoneNo = "014-0540083",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Derrick Lewis",
                        Email = "derrick_lewis@gmail.com",
                        PhoneNo = "010-6870328",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 164.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Smith",
                        Email = "robert_smith@gmail.com",
                        PhoneNo = "018-6098792",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 363.0
                    },
                    

                    new Lead
                    {
                        Name = "Diana Marquez",
                        Email = "diana_marquez@gmail.com",
                        PhoneNo = "018-4428858",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 132.0
                    },
                    

                    new Lead
                    {
                        Name = "Matthew Lee",
                        Email = "matthew_lee@gmail.com",
                        PhoneNo = "019-3395846",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7214,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 793.0
                    },
                    

                    new Lead
                    {
                        Name = "Douglas Stokes",
                        Email = "douglas_stokes@gmail.com",
                        PhoneNo = "017-5404454",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1697.0
                    },
                    

                    new Lead
                    {
                        Name = "Sonya Myers",
                        Email = "sonya_myers@gmail.com",
                        PhoneNo = "012-2194508",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 132.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Gutierrez",
                        Email = "robert_gutierrez@gmail.com",
                        PhoneNo = "016-9338067",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.969,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1046.0
                    },
                    

                    new Lead
                    {
                        Name = "Stacy Hawkins",
                        Email = "stacy_hawkins@gmail.com",
                        PhoneNo = "017-2301574",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 18.0
                    },
                    

                    new Lead
                    {
                        Name = "Ashley Harris",
                        Email = "ashley_harris@gmail.com",
                        PhoneNo = "016-7540436",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1299,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 25.0
                    },
                    

                    new Lead
                    {
                        Name = "Christine Wall",
                        Email = "christine_wall@gmail.com",
                        PhoneNo = "016-9926599",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0853,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 495.0
                    },
                    

                    new Lead
                    {
                        Name = "Marcus Fields",
                        Email = "marcus_fields@gmail.com",
                        PhoneNo = "018-8467691",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Sara Davis",
                        Email = "sara_davis@gmail.com",
                        PhoneNo = "017-1096922",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 359.0
                    },
                    

                    new Lead
                    {
                        Name = "Tanner Jones",
                        Email = "tanner_jones@gmail.com",
                        PhoneNo = "016-1712798",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2637,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 180.0
                    },
                    

                    new Lead
                    {
                        Name = "Theresa Clark",
                        Email = "theresa_clark@gmail.com",
                        PhoneNo = "018-8180192",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9183,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 653.0
                    },
                    

                    new Lead
                    {
                        Name = "William Hall",
                        Email = "william_hall@gmail.com",
                        PhoneNo = "019-4194608",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9673,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 2094.0
                    },
                    

                    new Lead
                    {
                        Name = "Alicia Banks",
                        Email = "alicia_banks@gmail.com",
                        PhoneNo = "013-3426653",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 275.0
                    },
                    

                    new Lead
                    {
                        Name = "Ashley Cannon",
                        Email = "ashley_cannon@gmail.com",
                        PhoneNo = "018-0796687",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1214,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 77.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Castillo",
                        Email = "michael_castillo@gmail.com",
                        PhoneNo = "018-6282938",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Arnold",
                        Email = "elizabeth_arnold@gmail.com",
                        PhoneNo = "018-4314999",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7209,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1269.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Boyle",
                        Email = "angela_boyle@gmail.com",
                        PhoneNo = "017-6981444",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Allison Mays",
                        Email = "allison_mays@gmail.com",
                        PhoneNo = "019-9214165",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4643,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1369.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Susan Simmons DDS",
                        Email = "mrs._susan@gmail.com",
                        PhoneNo = "010-3380504",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.105,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 42.0
                    },
                    

                    new Lead
                    {
                        Name = "Mary Mcclure",
                        Email = "mary_mcclure@gmail.com",
                        PhoneNo = "017-6591200",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Logan Allen",
                        Email = "logan_allen@gmail.com",
                        PhoneNo = "016-0115268",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Katie Moore",
                        Email = "katie_moore@gmail.com",
                        PhoneNo = "013-5371827",
                        AvgPageViewPerVisit = 3.25,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7228,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 1725.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Ferguson",
                        Email = "angela_ferguson@gmail.com",
                        PhoneNo = "016-0459671",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Scott Edwards",
                        Email = "scott_edwards@gmail.com",
                        PhoneNo = "012-6495396",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ashley Cline",
                        Email = "ashley_cline@gmail.com",
                        PhoneNo = "010-4946585",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5309,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 636.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Jackson",
                        Email = "stephanie_jackson@gmail.com",
                        PhoneNo = "010-3938617",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 266.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Murphy",
                        Email = "robert_murphy@gmail.com",
                        PhoneNo = "010-0234554",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Derrick Campbell",
                        Email = "derrick_campbell@gmail.com",
                        PhoneNo = "010-7328263",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Victoria Hall",
                        Email = "victoria_hall@gmail.com",
                        PhoneNo = "014-4377975",
                        AvgPageViewPerVisit = 3.2,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7228,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 16.0,
                        TotalTimeSpendOnSite = 1059.0
                    },
                    

                    new Lead
                    {
                        Name = "Chelsea Walker",
                        Email = "chelsea_walker@gmail.com",
                        PhoneNo = "016-2599814",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9806,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1391.0
                    },
                    

                    new Lead
                    {
                        Name = "Erica Martin",
                        Email = "erica_martin@gmail.com",
                        PhoneNo = "016-0899958",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 60.0
                    },
                    

                    new Lead
                    {
                        Name = "Clayton Jones",
                        Email = "clayton_jones@gmail.com",
                        PhoneNo = "014-8439964",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 334.0
                    },
                    

                    new Lead
                    {
                        Name = "Barbara Ward",
                        Email = "barbara_ward@gmail.com",
                        PhoneNo = "010-9815726",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9902,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1540.0
                    },
                    

                    new Lead
                    {
                        Name = "Patricia Johnson",
                        Email = "patricia_johnson@gmail.com",
                        PhoneNo = "016-5994846",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1123.0
                    },
                    

                    new Lead
                    {
                        Name = "Lindsay Foster",
                        Email = "lindsay_foster@gmail.com",
                        PhoneNo = "019-2248624",
                        AvgPageViewPerVisit = 10.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 10.0,
                        TotalTimeSpendOnSite = 1026.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristin King",
                        Email = "kristin_king@gmail.com",
                        PhoneNo = "016-5635150",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 55.0
                    },
                    

                    new Lead
                    {
                        Name = "Danielle Gibson",
                        Email = "danielle_gibson@gmail.com",
                        PhoneNo = "019-4472185",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 77.0
                    },
                    

                    new Lead
                    {
                        Name = "Colleen Jacobs",
                        Email = "colleen_jacobs@gmail.com",
                        PhoneNo = "016-4665076",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 992.0
                    },
                    

                    new Lead
                    {
                        Name = "Brandy Mckay",
                        Email = "brandy_mckay@gmail.com",
                        PhoneNo = "018-6190118",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1329.0
                    },
                    

                    new Lead
                    {
                        Name = "Teresa Cochran",
                        Email = "teresa_cochran@gmail.com",
                        PhoneNo = "014-5103785",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jacob Fletcher",
                        Email = "jacob_fletcher@gmail.com",
                        PhoneNo = "013-2650590",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8606,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 605.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Clark",
                        Email = "stephanie_clark@gmail.com",
                        PhoneNo = "012-7288084",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Julie Cruz",
                        Email = "julie_cruz@gmail.com",
                        PhoneNo = "017-5250387",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 837.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Norris",
                        Email = "richard_norris@gmail.com",
                        PhoneNo = "010-6503743",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 104.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Smith",
                        Email = "angela_smith@gmail.com",
                        PhoneNo = "014-4739778",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Lynn Hampton",
                        Email = "mrs._lynn@gmail.com",
                        PhoneNo = "017-8320600",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Misty Sosa",
                        Email = "misty_sosa@gmail.com",
                        PhoneNo = "016-6810346",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1524.0
                    },
                    

                    new Lead
                    {
                        Name = "Samantha Pollard",
                        Email = "samantha_pollard@gmail.com",
                        PhoneNo = "017-9466306",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.1925,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 496.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Bright",
                        Email = "michael_bright@gmail.com",
                        PhoneNo = "010-6558313",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3548,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 521.0
                    },
                    

                    new Lead
                    {
                        Name = "John Riley",
                        Email = "john_riley@gmail.com",
                        PhoneNo = "014-6393743",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 12.0
                    },
                    

                    new Lead
                    {
                        Name = "Carrie Parker",
                        Email = "carrie_parker@gmail.com",
                        PhoneNo = "018-4141815",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 338.0
                    },
                    

                    new Lead
                    {
                        Name = "Mr. William Palmer",
                        Email = "mr._william@gmail.com",
                        PhoneNo = "013-4297152",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 86.0
                    },
                    

                    new Lead
                    {
                        Name = "Shelly Cooper",
                        Email = "shelly_cooper@gmail.com",
                        PhoneNo = "017-5659332",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Edward Phillips",
                        Email = "edward_phillips@gmail.com",
                        PhoneNo = "019-5985345",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 150.0
                    },
                    

                    new Lead
                    {
                        Name = "Norman Smith",
                        Email = "norman_smith@gmail.com",
                        PhoneNo = "019-9669152",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Samantha Payne",
                        Email = "samantha_payne@gmail.com",
                        PhoneNo = "017-0561854",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Rhonda Bonilla",
                        Email = "rhonda_bonilla@gmail.com",
                        PhoneNo = "010-0381886",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 214.0
                    },
                    

                    new Lead
                    {
                        Name = "Ashley Hansen",
                        Email = "ashley_hansen@gmail.com",
                        PhoneNo = "010-4188568",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Clark",
                        Email = "patrick_clark@gmail.com",
                        PhoneNo = "012-8152349",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 131.0
                    },
                    

                    new Lead
                    {
                        Name = "Marissa Jimenez",
                        Email = "marissa_jimenez@gmail.com",
                        PhoneNo = "014-3406008",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.65,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 730.0
                    },
                    

                    new Lead
                    {
                        Name = "Beverly Dixon",
                        Email = "beverly_dixon@gmail.com",
                        PhoneNo = "010-7143997",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 34.0
                    },
                    

                    new Lead
                    {
                        Name = "Brenda Pham",
                        Email = "brenda_pham@gmail.com",
                        PhoneNo = "019-6563850",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 144.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Yolanda Noble MD",
                        Email = "mrs._yolanda@gmail.com",
                        PhoneNo = "013-7139788",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 114.0
                    },
                    

                    new Lead
                    {
                        Name = "Lori Ingram",
                        Email = "lori_ingram@gmail.com",
                        PhoneNo = "013-0697922",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6021,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1247.0
                    },
                    

                    new Lead
                    {
                        Name = "Jill Mann",
                        Email = "jill_mann@gmail.com",
                        PhoneNo = "012-1897128",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6838,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1662.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Salazar",
                        Email = "michael_salazar@gmail.com",
                        PhoneNo = "017-1170011",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6894,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 763.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Koch",
                        Email = "charles_koch@gmail.com",
                        PhoneNo = "018-5746883",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 128.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Schwartz",
                        Email = "susan_schwartz@gmail.com",
                        PhoneNo = "017-4231875",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1382.0
                    },
                    

                    new Lead
                    {
                        Name = "Jill Wu",
                        Email = "jill_wu@gmail.com",
                        PhoneNo = "012-5483116",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 47.0
                    },
                    

                    new Lead
                    {
                        Name = "Chad Wilson",
                        Email = "chad_wilson@gmail.com",
                        PhoneNo = "019-5847160",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9847,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 959.0
                    },
                    

                    new Lead
                    {
                        Name = "Sara Cline",
                        Email = "sara_cline@gmail.com",
                        PhoneNo = "016-3856648",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6312,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1142.0
                    },
                    

                    new Lead
                    {
                        Name = "Scott Frank",
                        Email = "scott_frank@gmail.com",
                        PhoneNo = "012-1994545",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 73.0
                    },
                    

                    new Lead
                    {
                        Name = "Lucas Ball",
                        Email = "lucas_ball@gmail.com",
                        PhoneNo = "017-7640463",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2591,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 74.0
                    },
                    

                    new Lead
                    {
                        Name = "Matthew Pittman",
                        Email = "matthew_pittman@gmail.com",
                        PhoneNo = "017-6876762",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1370.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Simpson",
                        Email = "michael_simpson@gmail.com",
                        PhoneNo = "019-8896575",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5314,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1106.0
                    },
                    

                    new Lead
                    {
                        Name = "Becky Miller",
                        Email = "becky_miller@gmail.com",
                        PhoneNo = "017-5678287",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 391.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Wagner",
                        Email = "jessica_wagner@gmail.com",
                        PhoneNo = "010-5629833",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1055.0
                    },
                    

                    new Lead
                    {
                        Name = "Lorraine Lucas",
                        Email = "lorraine_lucas@gmail.com",
                        PhoneNo = "012-3949145",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Businessman],
                        PredictedScore = 0.6693,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mary Simpson",
                        Email = "mary_simpson@gmail.com",
                        PhoneNo = "017-9591975",
                        AvgPageViewPerVisit = 4.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 285.0
                    },
                    

                    new Lead
                    {
                        Name = "Donna Wilson",
                        Email = "donna_wilson@gmail.com",
                        PhoneNo = "014-7768838",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1193.0
                    },
                    

                    new Lead
                    {
                        Name = "Alexandra Brown",
                        Email = "alexandra_brown@gmail.com",
                        PhoneNo = "016-4852567",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.4126,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 459.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Mcconnell",
                        Email = "samuel_mcconnell@gmail.com",
                        PhoneNo = "014-5194744",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 426.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Cisneros",
                        Email = "joshua_cisneros@gmail.com",
                        PhoneNo = "018-7557293",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Walton",
                        Email = "samuel_walton@gmail.com",
                        PhoneNo = "012-4549721",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 50.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Kelley",
                        Email = "jonathan_kelley@gmail.com",
                        PhoneNo = "017-2704252",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3811,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 432.0
                    },
                    

                    new Lead
                    {
                        Name = "Katherine Gillespie",
                        Email = "katherine_gillespie@gmail.com",
                        PhoneNo = "014-4580075",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 60.0
                    },
                    

                    new Lead
                    {
                        Name = "Destiny Campbell",
                        Email = "destiny_campbell@gmail.com",
                        PhoneNo = "019-9868968",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.208,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 16.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Anna Morgan",
                        Email = "mrs._anna@gmail.com",
                        PhoneNo = "013-9508950",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9653,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 761.0
                    },
                    

                    new Lead
                    {
                        Name = "Regina Love",
                        Email = "regina_love@gmail.com",
                        PhoneNo = "014-6239609",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 353.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristen Smith",
                        Email = "kristen_smith@gmail.com",
                        PhoneNo = "012-6865164",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1163.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Smith",
                        Email = "heather_smith@gmail.com",
                        PhoneNo = "018-4133916",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Bautista",
                        Email = "jessica_bautista@gmail.com",
                        PhoneNo = "016-4494570",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6021,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1203.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebecca Turner",
                        Email = "rebecca_turner@gmail.com",
                        PhoneNo = "010-7641801",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6544,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1237.0
                    },
                    

                    new Lead
                    {
                        Name = "Jerry Powell",
                        Email = "jerry_powell@gmail.com",
                        PhoneNo = "012-8005884",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Jennifer Wells",
                        Email = "dr._jennifer@gmail.com",
                        PhoneNo = "014-3017284",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "James Navarro",
                        Email = "james_navarro@gmail.com",
                        PhoneNo = "019-1866141",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jaime Smith",
                        Email = "jaime_smith@gmail.com",
                        PhoneNo = "016-5214730",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 200.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Calhoun",
                        Email = "joshua_calhoun@gmail.com",
                        PhoneNo = "012-4479311",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2233,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 428.0
                    },
                    

                    new Lead
                    {
                        Name = "Tammy Stewart",
                        Email = "tammy_stewart@gmail.com",
                        PhoneNo = "014-6885922",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 397.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Bradford",
                        Email = "lisa_bradford@gmail.com",
                        PhoneNo = "014-4384696",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2986,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 448.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Foster",
                        Email = "stephanie_foster@gmail.com",
                        PhoneNo = "010-4908040",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6742,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 727.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Ayala",
                        Email = "christopher_ayala@gmail.com",
                        PhoneNo = "014-9340425",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Derrick Mcbride",
                        Email = "derrick_mcbride@gmail.com",
                        PhoneNo = "018-4731197",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9416,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 856.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Morrison",
                        Email = "lisa_morrison@gmail.com",
                        PhoneNo = "014-8452475",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Pamela Garner",
                        Email = "pamela_garner@gmail.com",
                        PhoneNo = "012-2761818",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 260.0
                    },
                    

                    new Lead
                    {
                        Name = "Cody Morales",
                        Email = "cody_morales@gmail.com",
                        PhoneNo = "016-7301107",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7943,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 185.0
                    },
                    

                    new Lead
                    {
                        Name = "Scott Pruitt",
                        Email = "scott_pruitt@gmail.com",
                        PhoneNo = "018-6418252",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.228,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 532.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Delgado",
                        Email = "joseph_delgado@gmail.com",
                        PhoneNo = "013-9315743",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7214,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 738.0
                    },
                    

                    new Lead
                    {
                        Name = "Michele Clark",
                        Email = "michele_clark@gmail.com",
                        PhoneNo = "019-9682589",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2959,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 519.0
                    },
                    

                    new Lead
                    {
                        Name = "Lance Mercer",
                        Email = "lance_mercer@gmail.com",
                        PhoneNo = "016-9610637",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1537,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 353.0
                    },
                    

                    new Lead
                    {
                        Name = "Emma Bradley",
                        Email = "emma_bradley@gmail.com",
                        PhoneNo = "013-0285409",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 391.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Cook",
                        Email = "laura_cook@gmail.com",
                        PhoneNo = "016-5839271",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.982,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1137.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristina Dalton",
                        Email = "kristina_dalton@gmail.com",
                        PhoneNo = "019-1096208",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1213.0
                    },
                    

                    new Lead
                    {
                        Name = "Keith Rhodes",
                        Email = "keith_rhodes@gmail.com",
                        PhoneNo = "016-1835286",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7209,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1347.0
                    },
                    

                    new Lead
                    {
                        Name = "Sandra Harris",
                        Email = "sandra_harris@gmail.com",
                        PhoneNo = "014-6561108",
                        AvgPageViewPerVisit = 1.25,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7291,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 992.0
                    },
                    

                    new Lead
                    {
                        Name = "Teresa Allen",
                        Email = "teresa_allen@gmail.com",
                        PhoneNo = "019-8943382",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 169.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Jackson",
                        Email = "michael_jackson@gmail.com",
                        PhoneNo = "016-3887158",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2293,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 467.0
                    },
                    

                    new Lead
                    {
                        Name = "Isaac Trujillo",
                        Email = "isaac_trujillo@gmail.com",
                        PhoneNo = "016-5060447",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 358.0
                    },
                    

                    new Lead
                    {
                        Name = "George Pearson",
                        Email = "george_pearson@gmail.com",
                        PhoneNo = "012-8643279",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Joyce Atkins",
                        Email = "joyce_atkins@gmail.com",
                        PhoneNo = "019-9850386",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2886,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 555.0
                    },
                    

                    new Lead
                    {
                        Name = "Hannah Watts",
                        Email = "hannah_watts@gmail.com",
                        PhoneNo = "010-2308070",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1568,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 2.0
                    },
                    

                    new Lead
                    {
                        Name = "Christine Cook",
                        Email = "christine_cook@gmail.com",
                        PhoneNo = "010-5191902",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6494,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1679.0
                    },
                    

                    new Lead
                    {
                        Name = "Seth Juarez",
                        Email = "seth_juarez@gmail.com",
                        PhoneNo = "019-7274976",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 199.0
                    },
                    

                    new Lead
                    {
                        Name = "Carol Larsen DDS",
                        Email = "carol_larsen@gmail.com",
                        PhoneNo = "016-9401474",
                        AvgPageViewPerVisit = 1.27,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7331,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 1747.0
                    },
                    

                    new Lead
                    {
                        Name = "Brian Gilmore",
                        Email = "brian_gilmore@gmail.com",
                        PhoneNo = "014-3467058",
                        AvgPageViewPerVisit = 3.38,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 27.0,
                        TotalTimeSpendOnSite = 340.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Steele",
                        Email = "thomas_steele@gmail.com",
                        PhoneNo = "017-8161810",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ellen Wilson",
                        Email = "ellen_wilson@gmail.com",
                        PhoneNo = "018-3702334",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.6716,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 221.0
                    },
                    

                    new Lead
                    {
                        Name = "Allison Cruz",
                        Email = "allison_cruz@gmail.com",
                        PhoneNo = "019-4106947",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 121.0
                    },
                    

                    new Lead
                    {
                        Name = "Dominic Berg",
                        Email = "dominic_berg@gmail.com",
                        PhoneNo = "017-7603624",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7291,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 978.0
                    },
                    

                    new Lead
                    {
                        Name = "Devon Jimenez",
                        Email = "devon_jimenez@gmail.com",
                        PhoneNo = "018-9863035",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Daniel Morris",
                        Email = "daniel_morris@gmail.com",
                        PhoneNo = "016-4916839",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7339,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 921.0
                    },
                    

                    new Lead
                    {
                        Name = "Amy Bryan",
                        Email = "amy_bryan@gmail.com",
                        PhoneNo = "013-8384349",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Danielle Johnson",
                        Email = "danielle_johnson@gmail.com",
                        PhoneNo = "019-2181858",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1299,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 17.0
                    },
                    

                    new Lead
                    {
                        Name = "Tony Hamilton",
                        Email = "tony_hamilton@gmail.com",
                        PhoneNo = "019-3384302",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2096,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 28.0,
                        TotalTimeSpendOnSite = 340.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Glover",
                        Email = "michael_glover@gmail.com",
                        PhoneNo = "017-7409413",
                        AvgPageViewPerVisit = 2.14,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1454,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 15.0,
                        TotalTimeSpendOnSite = 77.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Morales",
                        Email = "melissa_morales@gmail.com",
                        PhoneNo = "016-2298583",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6069,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1420.0
                    },
                    

                    new Lead
                    {
                        Name = "Brandon Walker",
                        Email = "brandon_walker@gmail.com",
                        PhoneNo = "013-6577526",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1545.0
                    },
                    

                    new Lead
                    {
                        Name = "Madeline Hernandez",
                        Email = "madeline_hernandez@gmail.com",
                        PhoneNo = "014-1529238",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.2202,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 437.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Sherman",
                        Email = "michael_sherman@gmail.com",
                        PhoneNo = "013-0406565",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 4.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Mitchell",
                        Email = "michael_mitchell@gmail.com",
                        PhoneNo = "010-8486603",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9422,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1270.0
                    },
                    

                    new Lead
                    {
                        Name = "William Thompson",
                        Email = "william_thompson@gmail.com",
                        PhoneNo = "017-6000229",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Tara Murray",
                        Email = "tara_murray@gmail.com",
                        PhoneNo = "010-3369726",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1780.0
                    },
                    

                    new Lead
                    {
                        Name = "Lucas Cook",
                        Email = "lucas_cook@gmail.com",
                        PhoneNo = "014-6809063",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 389.0
                    },
                    

                    new Lead
                    {
                        Name = "Katherine Irwin",
                        Email = "katherine_irwin@gmail.com",
                        PhoneNo = "016-8435867",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1340.0
                    },
                    

                    new Lead
                    {
                        Name = "Todd Powell",
                        Email = "todd_powell@gmail.com",
                        PhoneNo = "014-7785807",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1095.0
                    },
                    

                    new Lead
                    {
                        Name = "Kyle Holloway",
                        Email = "kyle_holloway@gmail.com",
                        PhoneNo = "014-5289318",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5702,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1744.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Williams",
                        Email = "stephanie_williams@gmail.com",
                        PhoneNo = "013-7664974",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4804,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 640.0
                    },
                    

                    new Lead
                    {
                        Name = "Curtis White",
                        Email = "curtis_white@gmail.com",
                        PhoneNo = "012-4514158",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.1314,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 496.0
                    },
                    

                    new Lead
                    {
                        Name = "James Guerrero",
                        Email = "james_guerrero@gmail.com",
                        PhoneNo = "017-3720956",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.105,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 166.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Dudley",
                        Email = "robert_dudley@gmail.com",
                        PhoneNo = "018-6784719",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 204.0
                    },
                    

                    new Lead
                    {
                        Name = "Matthew Lopez",
                        Email = "matthew_lopez@gmail.com",
                        PhoneNo = "018-1947121",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 169.0
                    },
                    

                    new Lead
                    {
                        Name = "Curtis Archer",
                        Email = "curtis_archer@gmail.com",
                        PhoneNo = "013-6153414",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 284.0
                    },
                    

                    new Lead
                    {
                        Name = "Nina Ho",
                        Email = "nina_ho@gmail.com",
                        PhoneNo = "014-7742281",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 201.0
                    },
                    

                    new Lead
                    {
                        Name = "Seth Garcia",
                        Email = "seth_garcia@gmail.com",
                        PhoneNo = "012-9598200",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 356.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Martin",
                        Email = "lisa_martin@gmail.com",
                        PhoneNo = "014-2007267",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 85.0
                    },
                    

                    new Lead
                    {
                        Name = "Ronald Ray",
                        Email = "ronald_ray@gmail.com",
                        PhoneNo = "010-0222070",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 417.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Gray",
                        Email = "andrew_gray@gmail.com",
                        PhoneNo = "010-4708938",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 534.0
                    },
                    

                    new Lead
                    {
                        Name = "Teresa Black",
                        Email = "teresa_black@gmail.com",
                        PhoneNo = "010-5739411",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2278,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 50.0
                    },
                    

                    new Lead
                    {
                        Name = "Adam Fry",
                        Email = "adam_fry@gmail.com",
                        PhoneNo = "019-7718527",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2754,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 457.0
                    },
                    

                    new Lead
                    {
                        Name = "Sarah Smith",
                        Email = "sarah_smith@gmail.com",
                        PhoneNo = "018-3414013",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 80.0
                    },
                    

                    new Lead
                    {
                        Name = "Jason Jordan Jr.",
                        Email = "jason_jordan@gmail.com",
                        PhoneNo = "013-7501574",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 67.0
                    },
                    

                    new Lead
                    {
                        Name = "Mitchell Smith",
                        Email = "mitchell_smith@gmail.com",
                        PhoneNo = "014-5845220",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dennis Mendez",
                        Email = "dennis_mendez@gmail.com",
                        PhoneNo = "019-4773384",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 51.0
                    },
                    

                    new Lead
                    {
                        Name = "Brenda Perkins DVM",
                        Email = "brenda_perkins@gmail.com",
                        PhoneNo = "014-3405374",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Vincent Mcdonald",
                        Email = "vincent_mcdonald@gmail.com",
                        PhoneNo = "013-0869233",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6777,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1548.0
                    },
                    

                    new Lead
                    {
                        Name = "Wayne Hernandez",
                        Email = "wayne_hernandez@gmail.com",
                        PhoneNo = "019-7691676",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 183.0
                    },
                    

                    new Lead
                    {
                        Name = "Noah Montgomery",
                        Email = "noah_montgomery@gmail.com",
                        PhoneNo = "013-8259256",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 247.0
                    },
                    

                    new Lead
                    {
                        Name = "Vanessa Simpson",
                        Email = "vanessa_simpson@gmail.com",
                        PhoneNo = "010-4177623",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Alicia Smith",
                        Email = "alicia_smith@gmail.com",
                        PhoneNo = "019-5019952",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 129.0
                    },
                    

                    new Lead
                    {
                        Name = "Justin Hoover",
                        Email = "justin_hoover@gmail.com",
                        PhoneNo = "016-9358070",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 786.0
                    },
                    

                    new Lead
                    {
                        Name = "Jared Buchanan",
                        Email = "jared_buchanan@gmail.com",
                        PhoneNo = "016-1854831",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.993,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1016.0
                    },
                    

                    new Lead
                    {
                        Name = "Jose Anderson",
                        Email = "jose_anderson@gmail.com",
                        PhoneNo = "010-0768057",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4727,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1452.0
                    },
                    

                    new Lead
                    {
                        Name = "Mr. Donald Jones",
                        Email = "mr._donald@gmail.com",
                        PhoneNo = "013-4895321",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dean Salazar",
                        Email = "dean_salazar@gmail.com",
                        PhoneNo = "019-5005998",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 174.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Kennedy",
                        Email = "richard_kennedy@gmail.com",
                        PhoneNo = "018-0446957",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1051.0
                    },
                    

                    new Lead
                    {
                        Name = "Jasmine Ramos",
                        Email = "jasmine_ramos@gmail.com",
                        PhoneNo = "012-5716600",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5702,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1638.0
                    },
                    

                    new Lead
                    {
                        Name = "Travis Moss",
                        Email = "travis_moss@gmail.com",
                        PhoneNo = "018-0024978",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 31.0
                    },
                    

                    new Lead
                    {
                        Name = "James Reeves",
                        Email = "james_reeves@gmail.com",
                        PhoneNo = "018-1276083",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 385.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Mcclure",
                        Email = "anthony_mcclure@gmail.com",
                        PhoneNo = "018-4321692",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "David Mendoza",
                        Email = "david_mendoza@gmail.com",
                        PhoneNo = "018-6875543",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7187,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1939.0
                    },
                    

                    new Lead
                    {
                        Name = "Bobby Graves",
                        Email = "bobby_graves@gmail.com",
                        PhoneNo = "012-3084212",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 904.0
                    },
                    

                    new Lead
                    {
                        Name = "Jamie Sharp",
                        Email = "jamie_sharp@gmail.com",
                        PhoneNo = "018-2148238",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9512,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1122.0
                    },
                    

                    new Lead
                    {
                        Name = "Stacey Cooke",
                        Email = "stacey_cooke@gmail.com",
                        PhoneNo = "014-3731131",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 186.0
                    },
                    

                    new Lead
                    {
                        Name = "Kyle Combs",
                        Email = "kyle_combs@gmail.com",
                        PhoneNo = "013-7585551",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6805,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1149.0
                    },
                    

                    new Lead
                    {
                        Name = "Rachel Sherman",
                        Email = "rachel_sherman@gmail.com",
                        PhoneNo = "013-2916707",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 198.0
                    },
                    

                    new Lead
                    {
                        Name = "Paul Wright",
                        Email = "paul_wright@gmail.com",
                        PhoneNo = "019-2928961",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Lauren Anderson",
                        Email = "lauren_anderson@gmail.com",
                        PhoneNo = "014-5811096",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2278,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 252.0
                    },
                    

                    new Lead
                    {
                        Name = "Amy Cunningham",
                        Email = "amy_cunningham@gmail.com",
                        PhoneNo = "018-4870525",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Angelica King",
                        Email = "angelica_king@gmail.com",
                        PhoneNo = "016-1118801",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 346.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrea Nicholson",
                        Email = "andrea_nicholson@gmail.com",
                        PhoneNo = "019-1158600",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 200.0
                    },
                    

                    new Lead
                    {
                        Name = "Dustin Whitaker",
                        Email = "dustin_whitaker@gmail.com",
                        PhoneNo = "014-9716030",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristin Scott",
                        Email = "kristin_scott@gmail.com",
                        PhoneNo = "014-4228229",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1841.0
                    },
                    

                    new Lead
                    {
                        Name = "Samantha Harris",
                        Email = "samantha_harris@gmail.com",
                        PhoneNo = "012-0948061",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 224.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina Turner",
                        Email = "christina_turner@gmail.com",
                        PhoneNo = "012-3422501",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 319.0
                    },
                    

                    new Lead
                    {
                        Name = "Danielle Berger",
                        Email = "danielle_berger@gmail.com",
                        PhoneNo = "013-8664568",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4767,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 949.0
                    },
                    

                    new Lead
                    {
                        Name = "Benjamin Archer",
                        Email = "benjamin_archer@gmail.com",
                        PhoneNo = "017-1580483",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 80.0
                    },
                    

                    new Lead
                    {
                        Name = "Nancy Bennett MD",
                        Email = "nancy_bennett@gmail.com",
                        PhoneNo = "013-4252409",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.979,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 959.0
                    },
                    

                    new Lead
                    {
                        Name = "Alicia Avery",
                        Email = "alicia_avery@gmail.com",
                        PhoneNo = "018-2127318",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 358.0
                    },
                    

                    new Lead
                    {
                        Name = "Bradley Arnold",
                        Email = "bradley_arnold@gmail.com",
                        PhoneNo = "013-1622272",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2514,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 759.0
                    },
                    

                    new Lead
                    {
                        Name = "Dustin Simpson",
                        Email = "dustin_simpson@gmail.com",
                        PhoneNo = "012-3682739",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 104.0
                    },
                    

                    new Lead
                    {
                        Name = "Mr. Thomas Hawkins",
                        Email = "mr._thomas@gmail.com",
                        PhoneNo = "017-1281011",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5101,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 702.0
                    },
                    

                    new Lead
                    {
                        Name = "John Tran IV",
                        Email = "john_tran@gmail.com",
                        PhoneNo = "017-7373877",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 92.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Austin",
                        Email = "samuel_austin@gmail.com",
                        PhoneNo = "012-9697997",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 831.0
                    },
                    

                    new Lead
                    {
                        Name = "Danny Wallace",
                        Email = "danny_wallace@gmail.com",
                        PhoneNo = "013-1142715",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7289,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 945.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrea Rowland",
                        Email = "andrea_rowland@gmail.com",
                        PhoneNo = "019-7593068",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9445,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1102.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Matthews",
                        Email = "michael_matthews@gmail.com",
                        PhoneNo = "016-3963641",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 298.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Warren",
                        Email = "kimberly_warren@gmail.com",
                        PhoneNo = "014-1821342",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1007.0
                    },
                    

                    new Lead
                    {
                        Name = "Megan Rodriguez",
                        Email = "megan_rodriguez@gmail.com",
                        PhoneNo = "010-8180632",
                        AvgPageViewPerVisit = 1.25,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2731,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 13.0
                    },
                    

                    new Lead
                    {
                        Name = "Brandon Foster",
                        Email = "brandon_foster@gmail.com",
                        PhoneNo = "018-7002516",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 188.0
                    },
                    

                    new Lead
                    {
                        Name = "Eric Brady",
                        Email = "eric_brady@gmail.com",
                        PhoneNo = "016-2291177",
                        AvgPageViewPerVisit = 3.4,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 17.0,
                        TotalTimeSpendOnSite = 71.0
                    },
                    

                    new Lead
                    {
                        Name = "Mitchell Wallace",
                        Email = "mitchell_wallace@gmail.com",
                        PhoneNo = "017-2507385",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 24.0
                    },
                    

                    new Lead
                    {
                        Name = "Kurt Stevens",
                        Email = "kurt_stevens@gmail.com",
                        PhoneNo = "019-9732580",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jason Villarreal",
                        Email = "jason_villarreal@gmail.com",
                        PhoneNo = "014-7901955",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Natalie Jones",
                        Email = "natalie_jones@gmail.com",
                        PhoneNo = "013-8575928",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 12.0
                    },
                    

                    new Lead
                    {
                        Name = "John Hoover",
                        Email = "john_hoover@gmail.com",
                        PhoneNo = "017-4674728",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1288.0
                    },
                    

                    new Lead
                    {
                        Name = "Belinda Peterson",
                        Email = "belinda_peterson@gmail.com",
                        PhoneNo = "019-3755997",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 345.0
                    },
                    

                    new Lead
                    {
                        Name = "Shannon Walker",
                        Email = "shannon_walker@gmail.com",
                        PhoneNo = "013-5010905",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jose Coleman",
                        Email = "jose_coleman@gmail.com",
                        PhoneNo = "016-6551362",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Winters",
                        Email = "christopher_winters@gmail.com",
                        PhoneNo = "012-8208998",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Hodges",
                        Email = "robert_hodges@gmail.com",
                        PhoneNo = "018-7938287",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 46.0
                    },
                    

                    new Lead
                    {
                        Name = "Jaime Wilson",
                        Email = "jaime_wilson@gmail.com",
                        PhoneNo = "018-5055184",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1851.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicolas Bryant",
                        Email = "nicolas_bryant@gmail.com",
                        PhoneNo = "012-6662635",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7214,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 781.0
                    },
                    

                    new Lead
                    {
                        Name = "Catherine Fields",
                        Email = "catherine_fields@gmail.com",
                        PhoneNo = "013-2088621",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Darryl Bright",
                        Email = "darryl_bright@gmail.com",
                        PhoneNo = "018-0629396",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9841,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1536.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Lee",
                        Email = "karen_lee@gmail.com",
                        PhoneNo = "016-1832694",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 87.0
                    },
                    

                    new Lead
                    {
                        Name = "Emily Gallegos",
                        Email = "emily_gallegos@gmail.com",
                        PhoneNo = "018-1997660",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Casey Rodriguez",
                        Email = "casey_rodriguez@gmail.com",
                        PhoneNo = "016-6542722",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5702,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1995.0
                    },
                    

                    new Lead
                    {
                        Name = "Tyler Zamora",
                        Email = "tyler_zamora@gmail.com",
                        PhoneNo = "019-5692678",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7106,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1346.0
                    },
                    

                    new Lead
                    {
                        Name = "Diana Davies",
                        Email = "diana_davies@gmail.com",
                        PhoneNo = "013-5274780",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 60.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Hawkins",
                        Email = "samuel_hawkins@gmail.com",
                        PhoneNo = "017-9908999",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7289,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 895.0
                    },
                    

                    new Lead
                    {
                        Name = "Henry Walls",
                        Email = "henry_walls@gmail.com",
                        PhoneNo = "013-9990251",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9378,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 586.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Davis",
                        Email = "michael_davis@gmail.com",
                        PhoneNo = "017-1618613",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 229.0
                    },
                    

                    new Lead
                    {
                        Name = "Dennis Montoya",
                        Email = "dennis_montoya@gmail.com",
                        PhoneNo = "014-7670422",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9101,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 644.0
                    },
                    

                    new Lead
                    {
                        Name = "Lauren Michael",
                        Email = "lauren_michael@gmail.com",
                        PhoneNo = "012-4328963",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Briggs",
                        Email = "christopher_briggs@gmail.com",
                        PhoneNo = "012-0562307",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 10.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Nguyen",
                        Email = "stephanie_nguyen@gmail.com",
                        PhoneNo = "019-4746695",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 26.0
                    },
                    

                    new Lead
                    {
                        Name = "Sharon Robinson",
                        Email = "sharon_robinson@gmail.com",
                        PhoneNo = "010-4000408",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1965.0
                    },
                    

                    new Lead
                    {
                        Name = "Carl Jimenez",
                        Email = "carl_jimenez@gmail.com",
                        PhoneNo = "010-4316807",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Paula Leonard",
                        Email = "paula_leonard@gmail.com",
                        PhoneNo = "019-8730701",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Denise Kline DVM",
                        Email = "mrs._denise@gmail.com",
                        PhoneNo = "017-4553647",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.653,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 700.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Hernandez",
                        Email = "christopher_hernandez@gmail.com",
                        PhoneNo = "018-7890682",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christian Evans",
                        Email = "christian_evans@gmail.com",
                        PhoneNo = "018-3559131",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Chad White",
                        Email = "chad_white@gmail.com",
                        PhoneNo = "016-0051440",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 307.0
                    },
                    

                    new Lead
                    {
                        Name = "Stacy Harris",
                        Email = "stacy_harris@gmail.com",
                        PhoneNo = "013-0400048",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina Hernandez",
                        Email = "christina_hernandez@gmail.com",
                        PhoneNo = "019-3543097",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Donna Lee",
                        Email = "donna_lee@gmail.com",
                        PhoneNo = "016-2287815",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Pam Hamilton",
                        Email = "pam_hamilton@gmail.com",
                        PhoneNo = "013-4487748",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2008,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 480.0
                    },
                    

                    new Lead
                    {
                        Name = "Jillian Washington",
                        Email = "jillian_washington@gmail.com",
                        PhoneNo = "018-9085522",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7241,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 921.0
                    },
                    

                    new Lead
                    {
                        Name = "Rachel Johnson",
                        Email = "rachel_johnson@gmail.com",
                        PhoneNo = "010-3130868",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 295.0
                    },
                    

                    new Lead
                    {
                        Name = "David Roy",
                        Email = "david_roy@gmail.com",
                        PhoneNo = "013-5414469",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 95.0
                    },
                    

                    new Lead
                    {
                        Name = "Mr. John Vaughn",
                        Email = "mr._john@gmail.com",
                        PhoneNo = "019-7900222",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 803.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Parker",
                        Email = "richard_parker@gmail.com",
                        PhoneNo = "019-2534267",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9445,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1264.0
                    },
                    

                    new Lead
                    {
                        Name = "Mandy Green",
                        Email = "mandy_green@gmail.com",
                        PhoneNo = "019-0356087",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7061,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1004.0
                    },
                    

                    new Lead
                    {
                        Name = "Oscar Rivera",
                        Email = "oscar_rivera@gmail.com",
                        PhoneNo = "018-3632810",
                        AvgPageViewPerVisit = 2.75,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5068,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 565.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Jackson",
                        Email = "joshua_jackson@gmail.com",
                        PhoneNo = "012-1631203",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1387.0
                    },
                    

                    new Lead
                    {
                        Name = "Reginald Gonzales",
                        Email = "reginald_gonzales@gmail.com",
                        PhoneNo = "010-4601253",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 222.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Schaefer",
                        Email = "andrew_schaefer@gmail.com",
                        PhoneNo = "017-2938362",
                        AvgPageViewPerVisit = 1.25,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7182,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1156.0
                    },
                    

                    new Lead
                    {
                        Name = "Carly Williams",
                        Email = "carly_williams@gmail.com",
                        PhoneNo = "017-8712654",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1816.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Little",
                        Email = "michael_little@gmail.com",
                        PhoneNo = "010-8655342",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6648,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 765.0
                    },
                    

                    new Lead
                    {
                        Name = "Ronald Green",
                        Email = "ronald_green@gmail.com",
                        PhoneNo = "012-1269088",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6849,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 740.0
                    },
                    

                    new Lead
                    {
                        Name = "Brenda Olson",
                        Email = "brenda_olson@gmail.com",
                        PhoneNo = "017-9888762",
                        AvgPageViewPerVisit = 11.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 23.0,
                        TotalTimeSpendOnSite = 194.0
                    },
                    

                    new Lead
                    {
                        Name = "Jordan Mccullough",
                        Email = "jordan_mccullough@gmail.com",
                        PhoneNo = "016-3970267",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 113.0
                    },
                    

                    new Lead
                    {
                        Name = "Sarah Foster",
                        Email = "sarah_foster@gmail.com",
                        PhoneNo = "012-3378726",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 252.0
                    },
                    

                    new Lead
                    {
                        Name = "Meghan Nguyen",
                        Email = "meghan_nguyen@gmail.com",
                        PhoneNo = "012-8430508",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1223.0
                    },
                    

                    new Lead
                    {
                        Name = "Jose Brooks",
                        Email = "jose_brooks@gmail.com",
                        PhoneNo = "012-7300196",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1235,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 453.0
                    },
                    

                    new Lead
                    {
                        Name = "Shannon Obrien",
                        Email = "shannon_obrien@gmail.com",
                        PhoneNo = "017-7309452",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1602.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Fisher",
                        Email = "christopher_fisher@gmail.com",
                        PhoneNo = "017-7998849",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7091,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 866.0
                    },
                    

                    new Lead
                    {
                        Name = "Paul Randolph",
                        Email = "paul_randolph@gmail.com",
                        PhoneNo = "014-9741609",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.264,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 517.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Mejia",
                        Email = "jennifer_mejia@gmail.com",
                        PhoneNo = "014-4411982",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Gregory Munoz",
                        Email = "gregory_munoz@gmail.com",
                        PhoneNo = "010-4701652",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.976,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1332.0
                    },
                    

                    new Lead
                    {
                        Name = "Ashley Jensen",
                        Email = "ashley_jensen@gmail.com",
                        PhoneNo = "016-5559761",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 164.0
                    },
                    

                    new Lead
                    {
                        Name = "Tony Tyler",
                        Email = "tony_tyler@gmail.com",
                        PhoneNo = "012-4649021",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 51.0
                    },
                    

                    new Lead
                    {
                        Name = "Zachary Gamble",
                        Email = "zachary_gamble@gmail.com",
                        PhoneNo = "010-7786824",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 320.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Mclaughlin",
                        Email = "ryan_mclaughlin@gmail.com",
                        PhoneNo = "017-8101957",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 198.0
                    },
                    

                    new Lead
                    {
                        Name = "Jill Rivera",
                        Email = "jill_rivera@gmail.com",
                        PhoneNo = "017-1979061",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9398,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1439.0
                    },
                    

                    new Lead
                    {
                        Name = "Shelley Martin",
                        Email = "shelley_martin@gmail.com",
                        PhoneNo = "014-2833830",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 46.0
                    },
                    

                    new Lead
                    {
                        Name = "Troy Brown",
                        Email = "troy_brown@gmail.com",
                        PhoneNo = "017-1063614",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3085,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 623.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Bean",
                        Email = "heather_bean@gmail.com",
                        PhoneNo = "013-5329275",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Benjamin Cook",
                        Email = "benjamin_cook@gmail.com",
                        PhoneNo = "019-1191506",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "David Collins",
                        Email = "david_collins@gmail.com",
                        PhoneNo = "013-9020116",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1286.0
                    },
                    

                    new Lead
                    {
                        Name = "Cesar Clements",
                        Email = "cesar_clements@gmail.com",
                        PhoneNo = "017-8835079",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Hopkins",
                        Email = "samuel_hopkins@gmail.com",
                        PhoneNo = "016-0286912",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 416.0
                    },
                    

                    new Lead
                    {
                        Name = "Brian Stephenson",
                        Email = "brian_stephenson@gmail.com",
                        PhoneNo = "018-8820771",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3037,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 515.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephen Parker",
                        Email = "stephen_parker@gmail.com",
                        PhoneNo = "014-0103845",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 242.0
                    },
                    

                    new Lead
                    {
                        Name = "Walter Murray",
                        Email = "walter_murray@gmail.com",
                        PhoneNo = "012-4321415",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 91.0
                    },
                    

                    new Lead
                    {
                        Name = "David Chapman",
                        Email = "david_chapman@gmail.com",
                        PhoneNo = "013-5868086",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2591,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 19.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Edwards",
                        Email = "karen_edwards@gmail.com",
                        PhoneNo = "017-0453702",
                        AvgPageViewPerVisit = 1.4,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.7069,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1762.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Nguyen",
                        Email = "amanda_nguyen@gmail.com",
                        PhoneNo = "013-6499545",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6312,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 923.0
                    },
                    

                    new Lead
                    {
                        Name = "Stacey Mason",
                        Email = "stacey_mason@gmail.com",
                        PhoneNo = "018-6313999",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Crystal Coleman",
                        Email = "crystal_coleman@gmail.com",
                        PhoneNo = "014-0327203",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 129.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina Logan",
                        Email = "christina_logan@gmail.com",
                        PhoneNo = "016-0152176",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 342.0
                    },
                    

                    new Lead
                    {
                        Name = "Donald Stewart",
                        Email = "donald_stewart@gmail.com",
                        PhoneNo = "010-0300830",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 271.0
                    },
                    

                    new Lead
                    {
                        Name = "Nathan Perry",
                        Email = "nathan_perry@gmail.com",
                        PhoneNo = "013-6919416",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 148.0
                    },
                    

                    new Lead
                    {
                        Name = "Gregory Calderon Jr.",
                        Email = "gregory_calderon@gmail.com",
                        PhoneNo = "013-8537906",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Serrano",
                        Email = "jonathan_serrano@gmail.com",
                        PhoneNo = "019-1556552",
                        AvgPageViewPerVisit = 3.29,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7186,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 23.0,
                        TotalTimeSpendOnSite = 1295.0
                    },
                    

                    new Lead
                    {
                        Name = "Bradley Mccarty",
                        Email = "bradley_mccarty@gmail.com",
                        PhoneNo = "016-0394290",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1537,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 273.0
                    },
                    

                    new Lead
                    {
                        Name = "Steve Rhodes",
                        Email = "steve_rhodes@gmail.com",
                        PhoneNo = "016-0078981",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8534,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 491.0
                    },
                    

                    new Lead
                    {
                        Name = "Deanna Brown",
                        Email = "deanna_brown@gmail.com",
                        PhoneNo = "014-5547066",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Amber Wagner",
                        Email = "amber_wagner@gmail.com",
                        PhoneNo = "013-6169038",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Brad Flores",
                        Email = "brad_flores@gmail.com",
                        PhoneNo = "012-1382679",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1000.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Dixon",
                        Email = "thomas_dixon@gmail.com",
                        PhoneNo = "010-2833256",
                        AvgPageViewPerVisit = 11.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1494,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 319.0
                    },
                    

                    new Lead
                    {
                        Name = "Jacob Mays",
                        Email = "jacob_mays@gmail.com",
                        PhoneNo = "017-4617576",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.105,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 139.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Davis",
                        Email = "andrew_davis@gmail.com",
                        PhoneNo = "014-2988056",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1663.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark White",
                        Email = "mark_white@gmail.com",
                        PhoneNo = "016-2262801",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 178.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Brown",
                        Email = "jessica_brown@gmail.com",
                        PhoneNo = "010-9754471",
                        AvgPageViewPerVisit = 6.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2419,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 54.0
                    },
                    

                    new Lead
                    {
                        Name = "George Lee",
                        Email = "george_lee@gmail.com",
                        PhoneNo = "012-0188030",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1516.0
                    },
                    

                    new Lead
                    {
                        Name = "Pamela Hunt",
                        Email = "pamela_hunt@gmail.com",
                        PhoneNo = "019-4211616",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.105,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 38.0
                    },
                    

                    new Lead
                    {
                        Name = "Carlos Peck",
                        Email = "carlos_peck@gmail.com",
                        PhoneNo = "016-6253186",
                        AvgPageViewPerVisit = 4.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2096,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 217.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Woodward",
                        Email = "jennifer_woodward@gmail.com",
                        PhoneNo = "010-9454537",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 178.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Craig",
                        Email = "kimberly_craig@gmail.com",
                        PhoneNo = "010-0460309",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1095,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 321.0
                    },
                    

                    new Lead
                    {
                        Name = "Ronald Johnston",
                        Email = "ronald_johnston@gmail.com",
                        PhoneNo = "016-4712691",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7374,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 20.0,
                        TotalTimeSpendOnSite = 1334.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Mcdonald",
                        Email = "robert_mcdonald@gmail.com",
                        PhoneNo = "012-0213466",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9825,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 938.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Hernandez",
                        Email = "kimberly_hernandez@gmail.com",
                        PhoneNo = "019-8408155",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jason Cooley",
                        Email = "jason_cooley@gmail.com",
                        PhoneNo = "013-0935188",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6315,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 694.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Willis",
                        Email = "michael_willis@gmail.com",
                        PhoneNo = "019-3065590",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1563.0
                    },
                    

                    new Lead
                    {
                        Name = "Sandra George",
                        Email = "sandra_george@gmail.com",
                        PhoneNo = "014-5048759",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1492.0
                    },
                    

                    new Lead
                    {
                        Name = "William Murray",
                        Email = "william_murray@gmail.com",
                        PhoneNo = "019-2622870",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 51.0
                    },
                    

                    new Lead
                    {
                        Name = "Matthew Maynard",
                        Email = "matthew_maynard@gmail.com",
                        PhoneNo = "017-7463776",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1521.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Bauer",
                        Email = "susan_bauer@gmail.com",
                        PhoneNo = "016-3216980",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 406.0
                    },
                    

                    new Lead
                    {
                        Name = "Lauren Moore",
                        Email = "lauren_moore@gmail.com",
                        PhoneNo = "012-5712986",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.969,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 906.0
                    },
                    

                    new Lead
                    {
                        Name = "Cynthia Kelly",
                        Email = "cynthia_kelly@gmail.com",
                        PhoneNo = "018-8267335",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 402.0
                    },
                    

                    new Lead
                    {
                        Name = "Cody Ortiz",
                        Email = "cody_ortiz@gmail.com",
                        PhoneNo = "018-4825589",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1245.0
                    },
                    

                    new Lead
                    {
                        Name = "Deborah Johns",
                        Email = "deborah_johns@gmail.com",
                        PhoneNo = "017-0960306",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1652.0
                    },
                    

                    new Lead
                    {
                        Name = "Gordon Smith",
                        Email = "gordon_smith@gmail.com",
                        PhoneNo = "012-9679294",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 280.0
                    },
                    

                    new Lead
                    {
                        Name = "Brad Jones",
                        Email = "brad_jones@gmail.com",
                        PhoneNo = "016-6037831",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1095,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 267.0
                    },
                    

                    new Lead
                    {
                        Name = "Christine Wheeler",
                        Email = "christine_wheeler@gmail.com",
                        PhoneNo = "019-1261915",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2851,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 512.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Christensen",
                        Email = "patrick_christensen@gmail.com",
                        PhoneNo = "019-0516546",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6312,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1237.0
                    },
                    

                    new Lead
                    {
                        Name = "James Griffin",
                        Email = "james_griffin@gmail.com",
                        PhoneNo = "012-4858373",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Underwood",
                        Email = "amanda_underwood@gmail.com",
                        PhoneNo = "014-6680966",
                        AvgPageViewPerVisit = 2.25,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2701,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 367.0
                    },
                    

                    new Lead
                    {
                        Name = "Deborah Robbins",
                        Email = "deborah_robbins@gmail.com",
                        PhoneNo = "012-2374197",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3804,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 61.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina White",
                        Email = "christina_white@gmail.com",
                        PhoneNo = "013-3460125",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1099.0
                    },
                    

                    new Lead
                    {
                        Name = "Eric Bailey",
                        Email = "eric_bailey@gmail.com",
                        PhoneNo = "010-9076045",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2672,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 481.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Nunez",
                        Email = "amanda_nunez@gmail.com",
                        PhoneNo = "013-7837234",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Chan",
                        Email = "richard_chan@gmail.com",
                        PhoneNo = "019-5395340",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 1033.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Jason Huynh Jr.",
                        Email = "dr._jason@gmail.com",
                        PhoneNo = "018-8298501",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Terry Mcconnell",
                        Email = "terry_mcconnell@gmail.com",
                        PhoneNo = "014-3260406",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Miller",
                        Email = "charles_miller@gmail.com",
                        PhoneNo = "019-5202725",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 96.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Cantrell",
                        Email = "joseph_cantrell@gmail.com",
                        PhoneNo = "012-9484603",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1329.0
                    },
                    

                    new Lead
                    {
                        Name = "Eric Miller",
                        Email = "eric_miller@gmail.com",
                        PhoneNo = "014-4366338",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1489.0
                    },
                    

                    new Lead
                    {
                        Name = "Edward Whitney",
                        Email = "edward_whitney@gmail.com",
                        PhoneNo = "016-5714367",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1149.0
                    },
                    

                    new Lead
                    {
                        Name = "Sean Stevens",
                        Email = "sean_stevens@gmail.com",
                        PhoneNo = "014-4145091",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1016.0
                    },
                    

                    new Lead
                    {
                        Name = "Courtney Jones",
                        Email = "courtney_jones@gmail.com",
                        PhoneNo = "012-8968671",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1069.0
                    },
                    

                    new Lead
                    {
                        Name = "Jo Johnson",
                        Email = "jo_johnson@gmail.com",
                        PhoneNo = "019-3868576",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2737,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 87.0
                    },
                    

                    new Lead
                    {
                        Name = "Bradley Holmes",
                        Email = "bradley_holmes@gmail.com",
                        PhoneNo = "016-9896659",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Thomas",
                        Email = "kimberly_thomas@gmail.com",
                        PhoneNo = "016-2826977",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Belinda Parker",
                        Email = "belinda_parker@gmail.com",
                        PhoneNo = "010-8212897",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 155.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Reid",
                        Email = "anthony_reid@gmail.com",
                        PhoneNo = "017-3148145",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5417,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 602.0
                    },
                    

                    new Lead
                    {
                        Name = "Cassandra Larson",
                        Email = "cassandra_larson@gmail.com",
                        PhoneNo = "014-4862258",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Lopez",
                        Email = "richard_lopez@gmail.com",
                        PhoneNo = "014-2077258",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Alyssa Dorsey",
                        Email = "alyssa_dorsey@gmail.com",
                        PhoneNo = "014-0384122",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9423,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1721.0
                    },
                    

                    new Lead
                    {
                        Name = "Betty Charles",
                        Email = "betty_charles@gmail.com",
                        PhoneNo = "017-8426725",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7017,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 759.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebekah Roberts",
                        Email = "rebekah_roberts@gmail.com",
                        PhoneNo = "018-3526621",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Sherri Logan",
                        Email = "sherri_logan@gmail.com",
                        PhoneNo = "017-8137943",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1348.0
                    },
                    

                    new Lead
                    {
                        Name = "Danielle Hudson",
                        Email = "danielle_hudson@gmail.com",
                        PhoneNo = "016-1904482",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 230.0
                    },
                    

                    new Lead
                    {
                        Name = "Mariah Hayes",
                        Email = "mariah_hayes@gmail.com",
                        PhoneNo = "013-6216301",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 235.0
                    },
                    

                    new Lead
                    {
                        Name = "Donna Navarro",
                        Email = "donna_navarro@gmail.com",
                        PhoneNo = "013-4639039",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Devin Williams",
                        Email = "devin_williams@gmail.com",
                        PhoneNo = "013-7380186",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Ray",
                        Email = "anthony_ray@gmail.com",
                        PhoneNo = "018-8687643",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ian Clark",
                        Email = "ian_clark@gmail.com",
                        PhoneNo = "018-4886809",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 292.0
                    },
                    

                    new Lead
                    {
                        Name = "Kendra Murphy",
                        Email = "kendra_murphy@gmail.com",
                        PhoneNo = "017-4581928",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 94.0
                    },
                    

                    new Lead
                    {
                        Name = "Martha Jones",
                        Email = "martha_jones@gmail.com",
                        PhoneNo = "016-8517077",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kari Smith",
                        Email = "kari_smith@gmail.com",
                        PhoneNo = "014-1235287",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Lucas Foster",
                        Email = "lucas_foster@gmail.com",
                        PhoneNo = "012-0600697",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Roy Sexton",
                        Email = "roy_sexton@gmail.com",
                        PhoneNo = "019-2012695",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9706,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1337.0
                    },
                    

                    new Lead
                    {
                        Name = "Carla Miller",
                        Email = "carla_miller@gmail.com",
                        PhoneNo = "016-5221921",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1445.0
                    },
                    

                    new Lead
                    {
                        Name = "Omar Rogers",
                        Email = "omar_rogers@gmail.com",
                        PhoneNo = "012-1230793",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9625,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1588.0
                    },
                    

                    new Lead
                    {
                        Name = "Leah Richard",
                        Email = "leah_richard@gmail.com",
                        PhoneNo = "013-6901850",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jesse Chen",
                        Email = "jesse_chen@gmail.com",
                        PhoneNo = "016-4282300",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1737,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 531.0
                    },
                    

                    new Lead
                    {
                        Name = "Cynthia Williams",
                        Email = "cynthia_williams@gmail.com",
                        PhoneNo = "010-2336835",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6816,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1709.0
                    },
                    

                    new Lead
                    {
                        Name = "Marc Harding",
                        Email = "marc_harding@gmail.com",
                        PhoneNo = "012-5891986",
                        AvgPageViewPerVisit = 1.8,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2737,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 38.0
                    },
                    

                    new Lead
                    {
                        Name = "Janet Lara",
                        Email = "janet_lara@gmail.com",
                        PhoneNo = "019-3526511",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 119.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicholas Pena",
                        Email = "nicholas_pena@gmail.com",
                        PhoneNo = "018-5130937",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1029.0
                    },
                    

                    new Lead
                    {
                        Name = "Marissa Gentry",
                        Email = "marissa_gentry@gmail.com",
                        PhoneNo = "010-4814426",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 40.0
                    },
                    

                    new Lead
                    {
                        Name = "Kenneth Myers",
                        Email = "kenneth_myers@gmail.com",
                        PhoneNo = "017-9117719",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0607,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 349.0
                    },
                    

                    new Lead
                    {
                        Name = "Randy Hudson",
                        Email = "randy_hudson@gmail.com",
                        PhoneNo = "012-4251976",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Reed",
                        Email = "mark_reed@gmail.com",
                        PhoneNo = "010-7997623",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jenna Rangel",
                        Email = "jenna_rangel@gmail.com",
                        PhoneNo = "013-2528714",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1591.0
                    },
                    

                    new Lead
                    {
                        Name = "Bryan Mcdaniel",
                        Email = "bryan_mcdaniel@gmail.com",
                        PhoneNo = "014-5956894",
                        AvgPageViewPerVisit = 13.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 181.0
                    },
                    

                    new Lead
                    {
                        Name = "Maureen Butler",
                        Email = "maureen_butler@gmail.com",
                        PhoneNo = "018-4551333",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7834,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 297.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeffrey Johnson",
                        Email = "jeffrey_johnson@gmail.com",
                        PhoneNo = "018-2646949",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "David Morrison",
                        Email = "david_morrison@gmail.com",
                        PhoneNo = "016-9910078",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1218.0
                    },
                    

                    new Lead
                    {
                        Name = "Antonio Young",
                        Email = "antonio_young@gmail.com",
                        PhoneNo = "016-6627213",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 181.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Alicia Juarez PhD",
                        Email = "mrs._alicia@gmail.com",
                        PhoneNo = "019-6841756",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Gary Woods",
                        Email = "gary_woods@gmail.com",
                        PhoneNo = "013-4614924",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 31.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Brooks",
                        Email = "thomas_brooks@gmail.com",
                        PhoneNo = "014-7968418",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 395.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristina Long",
                        Email = "kristina_long@gmail.com",
                        PhoneNo = "010-2413742",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9319,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1264.0
                    },
                    

                    new Lead
                    {
                        Name = "Katrina Castaneda",
                        Email = "katrina_castaneda@gmail.com",
                        PhoneNo = "013-7420216",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 27.0
                    },
                    

                    new Lead
                    {
                        Name = "Alec Roberts",
                        Email = "alec_roberts@gmail.com",
                        PhoneNo = "016-7615268",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3705,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jerome Hart",
                        Email = "jerome_hart@gmail.com",
                        PhoneNo = "014-7774778",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0929,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 2.0
                    },
                    

                    new Lead
                    {
                        Name = "Erin Miller",
                        Email = "erin_miller@gmail.com",
                        PhoneNo = "013-1080176",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1734.0
                    },
                    

                    new Lead
                    {
                        Name = "Katie Compton",
                        Email = "katie_compton@gmail.com",
                        PhoneNo = "012-2579901",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 200.0
                    },
                    

                    new Lead
                    {
                        Name = "Austin Jensen",
                        Email = "austin_jensen@gmail.com",
                        PhoneNo = "012-7306920",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 122.0
                    },
                    

                    new Lead
                    {
                        Name = "Olivia Robinson",
                        Email = "olivia_robinson@gmail.com",
                        PhoneNo = "014-2668720",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 96.0
                    },
                    

                    new Lead
                    {
                        Name = "Jose Jones",
                        Email = "jose_jones@gmail.com",
                        PhoneNo = "016-0715172",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Debra Roberts",
                        Email = "debra_roberts@gmail.com",
                        PhoneNo = "014-2797281",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0545,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 156.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Short",
                        Email = "samuel_short@gmail.com",
                        PhoneNo = "016-9672220",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Candice Gonzalez",
                        Email = "candice_gonzalez@gmail.com",
                        PhoneNo = "010-7888248",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7617,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Robbins",
                        Email = "joshua_robbins@gmail.com",
                        PhoneNo = "017-3560653",
                        AvgPageViewPerVisit = 1.83,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7277,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 1079.0
                    },
                    

                    new Lead
                    {
                        Name = "Victoria Kelley",
                        Email = "victoria_kelley@gmail.com",
                        PhoneNo = "013-7805747",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8136,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 109.0
                    },
                    

                    new Lead
                    {
                        Name = "Paul Gonzalez",
                        Email = "paul_gonzalez@gmail.com",
                        PhoneNo = "016-7108314",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1558.0
                    },
                    

                    new Lead
                    {
                        Name = "Harold Deleon",
                        Email = "harold_deleon@gmail.com",
                        PhoneNo = "010-1815651",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1325.0
                    },
                    

                    new Lead
                    {
                        Name = "David Buchanan",
                        Email = "david_buchanan@gmail.com",
                        PhoneNo = "012-8821699",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0713,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 237.0
                    },
                    

                    new Lead
                    {
                        Name = "Adam Carlson",
                        Email = "adam_carlson@gmail.com",
                        PhoneNo = "019-4378926",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeremy Lee",
                        Email = "jeremy_lee@gmail.com",
                        PhoneNo = "014-9525264",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 198.0
                    },
                    

                    new Lead
                    {
                        Name = "Diana Smith",
                        Email = "diana_smith@gmail.com",
                        PhoneNo = "012-0543862",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Jamie Hernandez",
                        Email = "dr._jamie@gmail.com",
                        PhoneNo = "010-9532605",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura West",
                        Email = "laura_west@gmail.com",
                        PhoneNo = "016-3434876",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1622.0
                    },
                    

                    new Lead
                    {
                        Name = "Kara Brewer",
                        Email = "kara_brewer@gmail.com",
                        PhoneNo = "018-8177692",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1400.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Bennett",
                        Email = "amanda_bennett@gmail.com",
                        PhoneNo = "010-1109175",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 44.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Williams",
                        Email = "patrick_williams@gmail.com",
                        PhoneNo = "013-6220207",
                        AvgPageViewPerVisit = 4.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 1164.0
                    },
                    

                    new Lead
                    {
                        Name = "Allison Benjamin",
                        Email = "allison_benjamin@gmail.com",
                        PhoneNo = "018-3739801",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2329,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 448.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicholas Moore",
                        Email = "nicholas_moore@gmail.com",
                        PhoneNo = "014-7375147",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1468.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Johnson",
                        Email = "melissa_johnson@gmail.com",
                        PhoneNo = "017-5182498",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2678,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 120.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Morris",
                        Email = "ryan_morris@gmail.com",
                        PhoneNo = "016-7824350",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 313.0
                    },
                    

                    new Lead
                    {
                        Name = "Cory Cooper",
                        Email = "cory_cooper@gmail.com",
                        PhoneNo = "013-5078972",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michele Spencer",
                        Email = "michele_spencer@gmail.com",
                        PhoneNo = "016-9875185",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7737,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 3.0
                    },
                    

                    new Lead
                    {
                        Name = "Virginia King",
                        Email = "virginia_king@gmail.com",
                        PhoneNo = "016-6219916",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7145,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1092.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Reynolds",
                        Email = "steven_reynolds@gmail.com",
                        PhoneNo = "013-4123955",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9459,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 1241.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Flores",
                        Email = "michelle_flores@gmail.com",
                        PhoneNo = "016-0836393",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7106,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1524.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Herrera",
                        Email = "joshua_herrera@gmail.com",
                        PhoneNo = "016-5469086",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 10.0
                    },
                    

                    new Lead
                    {
                        Name = "Ms. Christine Rivas",
                        Email = "ms._christine@gmail.com",
                        PhoneNo = "016-9848623",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 977.0
                    },
                    

                    new Lead
                    {
                        Name = "Sarah Wells",
                        Email = "sarah_wells@gmail.com",
                        PhoneNo = "018-6849323",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 243.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristin Lee",
                        Email = "kristin_lee@gmail.com",
                        PhoneNo = "012-1972631",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Rogers",
                        Email = "michael_rogers@gmail.com",
                        PhoneNo = "010-3937588",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1020.0
                    },
                    

                    new Lead
                    {
                        Name = "Edward Barton",
                        Email = "edward_barton@gmail.com",
                        PhoneNo = "017-9910652",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9553,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1859.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Brennan",
                        Email = "amanda_brennan@gmail.com",
                        PhoneNo = "012-9357534",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1112,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 358.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Duncan",
                        Email = "angela_duncan@gmail.com",
                        PhoneNo = "014-3845620",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 48.0
                    },
                    

                    new Lead
                    {
                        Name = "Bobby York",
                        Email = "bobby_york@gmail.com",
                        PhoneNo = "013-8983355",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 69.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Carter",
                        Email = "jennifer_carter@gmail.com",
                        PhoneNo = "012-4283427",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1048.0
                    },
                    

                    new Lead
                    {
                        Name = "Danielle Nelson",
                        Email = "danielle_nelson@gmail.com",
                        PhoneNo = "012-3864794",
                        AvgPageViewPerVisit = 3.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1107,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 33.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Ward",
                        Email = "steven_ward@gmail.com",
                        PhoneNo = "010-0236667",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Johnson",
                        Email = "thomas_johnson@gmail.com",
                        PhoneNo = "013-5739682",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1029.0
                    },
                    

                    new Lead
                    {
                        Name = "Sara Garcia",
                        Email = "sara_garcia@gmail.com",
                        PhoneNo = "012-8058762",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1064.0
                    },
                    

                    new Lead
                    {
                        Name = "Bethany Martin",
                        Email = "bethany_martin@gmail.com",
                        PhoneNo = "017-7170720",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2158,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 406.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Yu",
                        Email = "thomas_yu@gmail.com",
                        PhoneNo = "013-8267037",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2158,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 33.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebecca Lewis",
                        Email = "rebecca_lewis@gmail.com",
                        PhoneNo = "019-0192930",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6488,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 674.0
                    },
                    

                    new Lead
                    {
                        Name = "Shannon Brown",
                        Email = "shannon_brown@gmail.com",
                        PhoneNo = "014-3593204",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 219.0
                    },
                    

                    new Lead
                    {
                        Name = "Brenda Moore",
                        Email = "brenda_moore@gmail.com",
                        PhoneNo = "018-5958488",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 25.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Allen",
                        Email = "robert_allen@gmail.com",
                        PhoneNo = "018-2893139",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Garcia",
                        Email = "amanda_garcia@gmail.com",
                        PhoneNo = "014-9608332",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.1815,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 60.0
                    },
                    

                    new Lead
                    {
                        Name = "Jane Frederick",
                        Email = "jane_frederick@gmail.com",
                        PhoneNo = "017-2982872",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 365.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Phillips",
                        Email = "christopher_phillips@gmail.com",
                        PhoneNo = "019-2249844",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7689,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 355.0
                    },
                    

                    new Lead
                    {
                        Name = "Wesley Harrison",
                        Email = "wesley_harrison@gmail.com",
                        PhoneNo = "016-6353718",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 206.0
                    },
                    

                    new Lead
                    {
                        Name = "Jodi Mcdaniel",
                        Email = "jodi_mcdaniel@gmail.com",
                        PhoneNo = "012-0235533",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Crystal Odonnell",
                        Email = "crystal_odonnell@gmail.com",
                        PhoneNo = "013-7444574",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5101,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 682.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Turner",
                        Email = "stephanie_turner@gmail.com",
                        PhoneNo = "019-6249106",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7329,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 916.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Oconnor",
                        Email = "michelle_oconnor@gmail.com",
                        PhoneNo = "012-9805999",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0575,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 71.0
                    },
                    

                    new Lead
                    {
                        Name = "Wendy Roth",
                        Email = "wendy_roth@gmail.com",
                        PhoneNo = "019-3689794",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8006,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 3.0
                    },
                    

                    new Lead
                    {
                        Name = "Frank Carpenter",
                        Email = "frank_carpenter@gmail.com",
                        PhoneNo = "014-0058764",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ellen Weber",
                        Email = "ellen_weber@gmail.com",
                        PhoneNo = "017-7983239",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1528.0
                    },
                    

                    new Lead
                    {
                        Name = "Kevin Barrett",
                        Email = "kevin_barrett@gmail.com",
                        PhoneNo = "014-1232733",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Adam Mora",
                        Email = "adam_mora@gmail.com",
                        PhoneNo = "013-8515903",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 1125.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle James",
                        Email = "michelle_james@gmail.com",
                        PhoneNo = "016-1851629",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 94.0
                    },
                    

                    new Lead
                    {
                        Name = "Tiffany Williams",
                        Email = "tiffany_williams@gmail.com",
                        PhoneNo = "017-2883268",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1014.0
                    },
                    

                    new Lead
                    {
                        Name = "Gary Kennedy",
                        Email = "gary_kennedy@gmail.com",
                        PhoneNo = "018-5352081",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7247,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 887.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Mathews",
                        Email = "angela_mathews@gmail.com",
                        PhoneNo = "019-0334326",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Tyrone Cole",
                        Email = "tyrone_cole@gmail.com",
                        PhoneNo = "012-6313864",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 290.0
                    },
                    

                    new Lead
                    {
                        Name = "Nancy Gonzalez",
                        Email = "nancy_gonzalez@gmail.com",
                        PhoneNo = "010-3628036",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1122.0
                    },
                    

                    new Lead
                    {
                        Name = "Brian Peterson",
                        Email = "brian_peterson@gmail.com",
                        PhoneNo = "018-9301174",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 165.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Nunez",
                        Email = "anthony_nunez@gmail.com",
                        PhoneNo = "014-8215267",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Shawna Smith",
                        Email = "dr._shawna@gmail.com",
                        PhoneNo = "018-7730740",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1194.0
                    },
                    

                    new Lead
                    {
                        Name = "Julie Smith",
                        Email = "julie_smith@gmail.com",
                        PhoneNo = "019-0626935",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1238.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Patterson",
                        Email = "heather_patterson@gmail.com",
                        PhoneNo = "010-7107873",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9834,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1373.0
                    },
                    

                    new Lead
                    {
                        Name = "John Perkins",
                        Email = "john_perkins@gmail.com",
                        PhoneNo = "019-7576426",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1281.0
                    },
                    

                    new Lead
                    {
                        Name = "John Nicholson DVM",
                        Email = "john_nicholson@gmail.com",
                        PhoneNo = "012-7976143",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2357,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 465.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Houston",
                        Email = "michael_houston@gmail.com",
                        PhoneNo = "010-0580954",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1299,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 137.0
                    },
                    

                    new Lead
                    {
                        Name = "David Smith",
                        Email = "david_smith@gmail.com",
                        PhoneNo = "019-8729943",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 199.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Briggs",
                        Email = "charles_briggs@gmail.com",
                        PhoneNo = "012-4273538",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2426,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 12.0,
                        TotalTimeSpendOnSite = 494.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Jackson",
                        Email = "andrew_jackson@gmail.com",
                        PhoneNo = "019-9906171",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mary Flores",
                        Email = "mary_flores@gmail.com",
                        PhoneNo = "017-5689580",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1341.0
                    },
                    

                    new Lead
                    {
                        Name = "Ana Gilbert",
                        Email = "ana_gilbert@gmail.com",
                        PhoneNo = "018-2565437",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1160.0
                    },
                    

                    new Lead
                    {
                        Name = "David Bush",
                        Email = "david_bush@gmail.com",
                        PhoneNo = "016-9962337",
                        AvgPageViewPerVisit = 1.22,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2903,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 126.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Brown",
                        Email = "michael_brown@gmail.com",
                        PhoneNo = "010-9055855",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 362.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Brown",
                        Email = "melissa_brown@gmail.com",
                        PhoneNo = "012-5851932",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Teresa Wilson",
                        Email = "teresa_wilson@gmail.com",
                        PhoneNo = "010-4481950",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1308,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 383.0
                    },
                    

                    new Lead
                    {
                        Name = "Seth Wright",
                        Email = "seth_wright@gmail.com",
                        PhoneNo = "018-1807222",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 242.0
                    },
                    

                    new Lead
                    {
                        Name = "Eileen Galvan",
                        Email = "eileen_galvan@gmail.com",
                        PhoneNo = "019-7537888",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 88.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Wright",
                        Email = "stephanie_wright@gmail.com",
                        PhoneNo = "010-5965375",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 30.0
                    },
                    

                    new Lead
                    {
                        Name = "Russell Cole",
                        Email = "russell_cole@gmail.com",
                        PhoneNo = "018-4030035",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Wesley Phillips",
                        Email = "wesley_phillips@gmail.com",
                        PhoneNo = "014-6262627",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7106,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1074.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Fleming",
                        Email = "angela_fleming@gmail.com",
                        PhoneNo = "014-4874121",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6021,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1058.0
                    },
                    

                    new Lead
                    {
                        Name = "Gary Stewart",
                        Email = "gary_stewart@gmail.com",
                        PhoneNo = "018-0131872",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2591,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 289.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeffrey Perry",
                        Email = "jeffrey_perry@gmail.com",
                        PhoneNo = "016-7633583",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 246.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Harrison",
                        Email = "charles_harrison@gmail.com",
                        PhoneNo = "013-9593764",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2565,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 171.0
                    },
                    

                    new Lead
                    {
                        Name = "Mackenzie Bowman",
                        Email = "mackenzie_bowman@gmail.com",
                        PhoneNo = "018-5617321",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 51.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicole Torres",
                        Email = "nicole_torres@gmail.com",
                        PhoneNo = "014-9724370",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1261.0
                    },
                    

                    new Lead
                    {
                        Name = "John Wood",
                        Email = "john_wood@gmail.com",
                        PhoneNo = "017-2987063",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Turner",
                        Email = "robert_turner@gmail.com",
                        PhoneNo = "019-2847120",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ashley Pratt",
                        Email = "ashley_pratt@gmail.com",
                        PhoneNo = "019-4249029",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1107,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 10.0,
                        TotalTimeSpendOnSite = 155.0
                    },
                    

                    new Lead
                    {
                        Name = "Jamie Walton",
                        Email = "jamie_walton@gmail.com",
                        PhoneNo = "018-1357805",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1101.0
                    },
                    

                    new Lead
                    {
                        Name = "Tammy Martin",
                        Email = "tammy_martin@gmail.com",
                        PhoneNo = "019-8823490",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 129.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Davis",
                        Email = "elizabeth_davis@gmail.com",
                        PhoneNo = "019-7704457",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1570.0
                    },
                    

                    new Lead
                    {
                        Name = "Matthew Bond",
                        Email = "matthew_bond@gmail.com",
                        PhoneNo = "016-8843626",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7409,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 123.0
                    },
                    

                    new Lead
                    {
                        Name = "Chase Roberts",
                        Email = "chase_roberts@gmail.com",
                        PhoneNo = "019-7138228",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 993.0
                    },
                    

                    new Lead
                    {
                        Name = "Jordan Marsh",
                        Email = "jordan_marsh@gmail.com",
                        PhoneNo = "018-2503780",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7061,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1063.0
                    },
                    

                    new Lead
                    {
                        Name = "Cynthia Vance DVM",
                        Email = "cynthia_vance@gmail.com",
                        PhoneNo = "014-3595011",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 263.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Schultz",
                        Email = "elizabeth_schultz@gmail.com",
                        PhoneNo = "017-4260555",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 36.0
                    },
                    

                    new Lead
                    {
                        Name = "Brandi Edwards",
                        Email = "brandi_edwards@gmail.com",
                        PhoneNo = "012-3299977",
                        AvgPageViewPerVisit = 2.2,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7446,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 1049.0
                    },
                    

                    new Lead
                    {
                        Name = "Sheila Cross",
                        Email = "sheila_cross@gmail.com",
                        PhoneNo = "018-9773747",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 75.0
                    },
                    

                    new Lead
                    {
                        Name = "Bruce Owens",
                        Email = "bruce_owens@gmail.com",
                        PhoneNo = "019-4682375",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1446.0
                    },
                    

                    new Lead
                    {
                        Name = "Jenna Martinez",
                        Email = "jenna_martinez@gmail.com",
                        PhoneNo = "012-2915378",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1621.0
                    },
                    

                    new Lead
                    {
                        Name = "Sarah Bailey",
                        Email = "sarah_bailey@gmail.com",
                        PhoneNo = "016-6578861",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Cole",
                        Email = "michael_cole@gmail.com",
                        PhoneNo = "013-5740743",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1568,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 28.0
                    },
                    

                    new Lead
                    {
                        Name = "Julia Gomez",
                        Email = "julia_gomez@gmail.com",
                        PhoneNo = "013-9814182",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Sheila Davis",
                        Email = "sheila_davis@gmail.com",
                        PhoneNo = "013-5801061",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7145,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1178.0
                    },
                    

                    new Lead
                    {
                        Name = "Joanna King",
                        Email = "joanna_king@gmail.com",
                        PhoneNo = "016-8088411",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 951.0
                    },
                    

                    new Lead
                    {
                        Name = "Patricia King",
                        Email = "patricia_king@gmail.com",
                        PhoneNo = "018-9734045",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 983.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Torres",
                        Email = "laura_torres@gmail.com",
                        PhoneNo = "014-7225598",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 152.0
                    },
                    

                    new Lead
                    {
                        Name = "Vincent Russell",
                        Email = "vincent_russell@gmail.com",
                        PhoneNo = "019-3561660",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Allen Lee",
                        Email = "allen_lee@gmail.com",
                        PhoneNo = "014-6218273",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1537,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 315.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Pittman",
                        Email = "jonathan_pittman@gmail.com",
                        PhoneNo = "014-7416031",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Fuller",
                        Email = "anthony_fuller@gmail.com",
                        PhoneNo = "017-6341593",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1099.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Zamora",
                        Email = "karen_zamora@gmail.com",
                        PhoneNo = "013-9087343",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 150.0
                    },
                    

                    new Lead
                    {
                        Name = "Evan Patterson",
                        Email = "evan_patterson@gmail.com",
                        PhoneNo = "012-6370139",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 358.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristine Williams",
                        Email = "kristine_williams@gmail.com",
                        PhoneNo = "016-2356153",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 294.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Torres",
                        Email = "joshua_torres@gmail.com",
                        PhoneNo = "013-2344557",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jerry Anderson",
                        Email = "jerry_anderson@gmail.com",
                        PhoneNo = "012-6536540",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 150.0
                    },
                    

                    new Lead
                    {
                        Name = "Anne Williams",
                        Email = "anne_williams@gmail.com",
                        PhoneNo = "016-3911346",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christian Morgan",
                        Email = "christian_morgan@gmail.com",
                        PhoneNo = "016-8267664",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 254.0
                    },
                    

                    new Lead
                    {
                        Name = "Edward Frey",
                        Email = "edward_frey@gmail.com",
                        PhoneNo = "016-5628903",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3123,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 536.0
                    },
                    

                    new Lead
                    {
                        Name = "Kevin Stewart",
                        Email = "kevin_stewart@gmail.com",
                        PhoneNo = "019-1177102",
                        AvgPageViewPerVisit = 14.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2827,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 354.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Vega",
                        Email = "kimberly_vega@gmail.com",
                        PhoneNo = "018-7581649",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 255.0
                    },
                    

                    new Lead
                    {
                        Name = "Gregory Steele",
                        Email = "gregory_steele@gmail.com",
                        PhoneNo = "014-5060812",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1353.0
                    },
                    

                    new Lead
                    {
                        Name = "Christine Wright",
                        Email = "christine_wright@gmail.com",
                        PhoneNo = "018-4664195",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1102.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Simmons",
                        Email = "anthony_simmons@gmail.com",
                        PhoneNo = "014-2784230",
                        AvgPageViewPerVisit = 2.86,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4423,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 20.0,
                        TotalTimeSpendOnSite = 808.0
                    },
                    

                    new Lead
                    {
                        Name = "Carol Ewing",
                        Email = "carol_ewing@gmail.com",
                        PhoneNo = "017-4171541",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7339,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 887.0
                    },
                    

                    new Lead
                    {
                        Name = "Lance Logan",
                        Email = "lance_logan@gmail.com",
                        PhoneNo = "017-7116775",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1359,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 233.0
                    },
                    

                    new Lead
                    {
                        Name = "William Walker",
                        Email = "william_walker@gmail.com",
                        PhoneNo = "014-8903949",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Nancy Jones",
                        Email = "nancy_jones@gmail.com",
                        PhoneNo = "016-9681625",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0607,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 345.0
                    },
                    

                    new Lead
                    {
                        Name = "April Davis",
                        Email = "april_davis@gmail.com",
                        PhoneNo = "016-2994092",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1568,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 55.0
                    },
                    

                    new Lead
                    {
                        Name = "Ruth Hernandez",
                        Email = "ruth_hernandez@gmail.com",
                        PhoneNo = "018-6154146",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Pamela Clark",
                        Email = "pamela_clark@gmail.com",
                        PhoneNo = "017-4203486",
                        AvgPageViewPerVisit = 1.75,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2293,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 86.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Long",
                        Email = "laura_long@gmail.com",
                        PhoneNo = "014-9808181",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Diane Dunn",
                        Email = "diane_dunn@gmail.com",
                        PhoneNo = "019-9275508",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9416,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 857.0
                    },
                    

                    new Lead
                    {
                        Name = "Hunter Palmer",
                        Email = "hunter_palmer@gmail.com",
                        PhoneNo = "014-6205644",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 832.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Chapman",
                        Email = "lisa_chapman@gmail.com",
                        PhoneNo = "019-8777863",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Joe Simmons",
                        Email = "joe_simmons@gmail.com",
                        PhoneNo = "010-1335025",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 72.0
                    },
                    

                    new Lead
                    {
                        Name = "Kenneth Johnson",
                        Email = "kenneth_johnson@gmail.com",
                        PhoneNo = "017-3612958",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Emily Edwards",
                        Email = "emily_edwards@gmail.com",
                        PhoneNo = "014-0667590",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Brandon Berg",
                        Email = "brandon_berg@gmail.com",
                        PhoneNo = "018-8136500",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 450.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Caldwell",
                        Email = "richard_caldwell@gmail.com",
                        PhoneNo = "013-2285379",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9868,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 10.0,
                        TotalTimeSpendOnSite = 762.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Vasquez",
                        Email = "steven_vasquez@gmail.com",
                        PhoneNo = "019-7829307",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 405.0
                    },
                    

                    new Lead
                    {
                        Name = "Sarah Watson",
                        Email = "sarah_watson@gmail.com",
                        PhoneNo = "017-8689153",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1214,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 27.0
                    },
                    

                    new Lead
                    {
                        Name = "Erika Myers",
                        Email = "erika_myers@gmail.com",
                        PhoneNo = "016-2347331",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5702,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1634.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Palmer",
                        Email = "angela_palmer@gmail.com",
                        PhoneNo = "010-1862599",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Kelly",
                        Email = "jessica_kelly@gmail.com",
                        PhoneNo = "013-9462173",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 938.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Mccarty",
                        Email = "andrew_mccarty@gmail.com",
                        PhoneNo = "014-8753545",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 418.0
                    },
                    

                    new Lead
                    {
                        Name = "Elijah Gallagher",
                        Email = "elijah_gallagher@gmail.com",
                        PhoneNo = "013-9165532",
                        AvgPageViewPerVisit = 3.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1138,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 190.0
                    },
                    

                    new Lead
                    {
                        Name = "Lance Ochoa Jr.",
                        Email = "lance_ochoa@gmail.com",
                        PhoneNo = "013-7180042",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dwayne Brown",
                        Email = "dwayne_brown@gmail.com",
                        PhoneNo = "018-8321719",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Shelby Bryan",
                        Email = "shelby_bryan@gmail.com",
                        PhoneNo = "010-5441021",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Alicia Navarro",
                        Email = "alicia_navarro@gmail.com",
                        PhoneNo = "019-2400396",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 226.0
                    },
                    

                    new Lead
                    {
                        Name = "Anne Webb",
                        Email = "anne_webb@gmail.com",
                        PhoneNo = "017-2638097",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1262.0
                    },
                    

                    new Lead
                    {
                        Name = "Kenneth Rangel",
                        Email = "kenneth_rangel@gmail.com",
                        PhoneNo = "013-8412210",
                        AvgPageViewPerVisit = 2.09,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7446,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 23.0,
                        TotalTimeSpendOnSite = 1677.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Morales",
                        Email = "mark_morales@gmail.com",
                        PhoneNo = "013-5771766",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 244.0
                    },
                    

                    new Lead
                    {
                        Name = "Haley Daniel",
                        Email = "haley_daniel@gmail.com",
                        PhoneNo = "016-6828053",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7108,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 721.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Douglas",
                        Email = "angela_douglas@gmail.com",
                        PhoneNo = "012-7168739",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 383.0
                    },
                    

                    new Lead
                    {
                        Name = "Kurt Hayes",
                        Email = "kurt_hayes@gmail.com",
                        PhoneNo = "019-6196879",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1360.0
                    },
                    

                    new Lead
                    {
                        Name = "Chad Burke",
                        Email = "chad_burke@gmail.com",
                        PhoneNo = "017-9728932",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2447,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 500.0
                    },
                    

                    new Lead
                    {
                        Name = "John Morales",
                        Email = "john_morales@gmail.com",
                        PhoneNo = "019-2959216",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Peterson",
                        Email = "christopher_peterson@gmail.com",
                        PhoneNo = "017-1433329",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mario Beltran",
                        Email = "mario_beltran@gmail.com",
                        PhoneNo = "017-5977689",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.949,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 634.0
                    },
                    

                    new Lead
                    {
                        Name = "Allison Barron",
                        Email = "allison_barron@gmail.com",
                        PhoneNo = "014-6554809",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 350.0
                    },
                    

                    new Lead
                    {
                        Name = "Jacob Ponce",
                        Email = "jacob_ponce@gmail.com",
                        PhoneNo = "018-5525753",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1458.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Johnson",
                        Email = "thomas_johnson@gmail.com",
                        PhoneNo = "012-3189068",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3586,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 324.0
                    },
                    

                    new Lead
                    {
                        Name = "Aaron Nguyen",
                        Email = "aaron_nguyen@gmail.com",
                        PhoneNo = "014-6697361",
                        AvgPageViewPerVisit = 1.56,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9799,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 1507.0
                    },
                    

                    new Lead
                    {
                        Name = "Sara Harris",
                        Email = "sara_harris@gmail.com",
                        PhoneNo = "012-8788366",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.093,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 267.0
                    },
                    

                    new Lead
                    {
                        Name = "Carol Jensen",
                        Email = "carol_jensen@gmail.com",
                        PhoneNo = "019-5160799",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Johnny Turner",
                        Email = "johnny_turner@gmail.com",
                        PhoneNo = "013-8830006",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1408.0
                    },
                    

                    new Lead
                    {
                        Name = "Tina Adams",
                        Email = "tina_adams@gmail.com",
                        PhoneNo = "019-1086894",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8395,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 491.0
                    },
                    

                    new Lead
                    {
                        Name = "Holly Johnson",
                        Email = "holly_johnson@gmail.com",
                        PhoneNo = "012-1580276",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9786,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 1242.0
                    },
                    

                    new Lead
                    {
                        Name = "Darrell Newman",
                        Email = "darrell_newman@gmail.com",
                        PhoneNo = "014-3908558",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 931.0
                    },
                    

                    new Lead
                    {
                        Name = "Alyssa Robinson",
                        Email = "alyssa_robinson@gmail.com",
                        PhoneNo = "010-7820054",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6816,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1905.0
                    },
                    

                    new Lead
                    {
                        Name = "David Collins",
                        Email = "david_collins@gmail.com",
                        PhoneNo = "013-4852650",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5702,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1680.0
                    },
                    

                    new Lead
                    {
                        Name = "Sandra Roberts",
                        Email = "sandra_roberts@gmail.com",
                        PhoneNo = "016-1620493",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9841,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1353.0
                    },
                    

                    new Lead
                    {
                        Name = "Valerie Parker",
                        Email = "valerie_parker@gmail.com",
                        PhoneNo = "019-7568274",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9328,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1598.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Morrison",
                        Email = "jonathan_morrison@gmail.com",
                        PhoneNo = "013-6758212",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 339.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Powers",
                        Email = "heather_powers@gmail.com",
                        PhoneNo = "013-4845314",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 227.0
                    },
                    

                    new Lead
                    {
                        Name = "Miranda Lynn",
                        Email = "miranda_lynn@gmail.com",
                        PhoneNo = "019-2907593",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9481,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 970.0
                    },
                    

                    new Lead
                    {
                        Name = "David Hensley",
                        Email = "david_hensley@gmail.com",
                        PhoneNo = "014-8604680",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.653,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 701.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Whitney",
                        Email = "mark_whitney@gmail.com",
                        PhoneNo = "013-2804112",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2565,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Ruiz",
                        Email = "charles_ruiz@gmail.com",
                        PhoneNo = "018-4775449",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.945,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1117.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Robertson",
                        Email = "lisa_robertson@gmail.com",
                        PhoneNo = "012-9065814",
                        AvgPageViewPerVisit = 2.6,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 263.0
                    },
                    

                    new Lead
                    {
                        Name = "Tyrone Ortega",
                        Email = "tyrone_ortega@gmail.com",
                        PhoneNo = "010-7296524",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 126.0
                    },
                    

                    new Lead
                    {
                        Name = "Jon Edwards",
                        Email = "jon_edwards@gmail.com",
                        PhoneNo = "014-5568226",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Chen",
                        Email = "karen_chen@gmail.com",
                        PhoneNo = "013-4942457",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Anderson",
                        Email = "elizabeth_anderson@gmail.com",
                        PhoneNo = "018-1050306",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Alexis Dominguez",
                        Email = "alexis_dominguez@gmail.com",
                        PhoneNo = "016-2587123",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Wu",
                        Email = "laura_wu@gmail.com",
                        PhoneNo = "018-0859399",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 187.0
                    },
                    

                    new Lead
                    {
                        Name = "Jake Welch",
                        Email = "jake_welch@gmail.com",
                        PhoneNo = "010-1576069",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Smith",
                        Email = "susan_smith@gmail.com",
                        PhoneNo = "010-3702551",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 133.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Boyd MD",
                        Email = "thomas_boyd@gmail.com",
                        PhoneNo = "019-1701123",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Travis Moran",
                        Email = "travis_moran@gmail.com",
                        PhoneNo = "014-9414861",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 147.0
                    },
                    

                    new Lead
                    {
                        Name = "Pamela Adams",
                        Email = "pamela_adams@gmail.com",
                        PhoneNo = "017-8008827",
                        AvgPageViewPerVisit = 14.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2827,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 148.0
                    },
                    

                    new Lead
                    {
                        Name = "Courtney Zimmerman",
                        Email = "courtney_zimmerman@gmail.com",
                        PhoneNo = "012-1866478",
                        AvgPageViewPerVisit = 2.83,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2815,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 17.0,
                        TotalTimeSpendOnSite = 119.0
                    },
                    

                    new Lead
                    {
                        Name = "Mitchell Duncan",
                        Email = "mitchell_duncan@gmail.com",
                        PhoneNo = "014-5141635",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.1784,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 550.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicole Peterson",
                        Email = "nicole_peterson@gmail.com",
                        PhoneNo = "016-0416016",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 14.0
                    },
                    

                    new Lead
                    {
                        Name = "Julie Strickland",
                        Email = "julie_strickland@gmail.com",
                        PhoneNo = "013-4445780",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1216.0
                    },
                    

                    new Lead
                    {
                        Name = "Adriana Skinner MD",
                        Email = "adriana_skinner@gmail.com",
                        PhoneNo = "013-2216956",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2637,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 431.0
                    },
                    

                    new Lead
                    {
                        Name = "Derrick Reid",
                        Email = "derrick_reid@gmail.com",
                        PhoneNo = "014-5701541",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 420.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristine Patterson",
                        Email = "kristine_patterson@gmail.com",
                        PhoneNo = "016-0543858",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 185.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Wilson DDS",
                        Email = "christopher_wilson@gmail.com",
                        PhoneNo = "016-5563970",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1742.0
                    },
                    

                    new Lead
                    {
                        Name = "Abigail Arias",
                        Email = "abigail_arias@gmail.com",
                        PhoneNo = "018-2496365",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1157.0
                    },
                    

                    new Lead
                    {
                        Name = "Vincent Russell",
                        Email = "vincent_russell@gmail.com",
                        PhoneNo = "010-6565863",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 152.0
                    },
                    

                    new Lead
                    {
                        Name = "Kara Edwards",
                        Email = "kara_edwards@gmail.com",
                        PhoneNo = "018-5942068",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 317.0
                    },
                    

                    new Lead
                    {
                        Name = "Taylor Weber",
                        Email = "taylor_weber@gmail.com",
                        PhoneNo = "017-5566471",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1028.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebecca Fischer",
                        Email = "rebecca_fischer@gmail.com",
                        PhoneNo = "016-2467823",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Wilson",
                        Email = "patrick_wilson@gmail.com",
                        PhoneNo = "019-7372759",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 266.0
                    },
                    

                    new Lead
                    {
                        Name = "Veronica Allen",
                        Email = "veronica_allen@gmail.com",
                        PhoneNo = "010-2183673",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7061,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1472.0
                    },
                    

                    new Lead
                    {
                        Name = "Sandra Meza",
                        Email = "sandra_meza@gmail.com",
                        PhoneNo = "012-1285712",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1494.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrea Brady",
                        Email = "andrea_brady@gmail.com",
                        PhoneNo = "012-7470866",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1608.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Shawn Vargas",
                        Email = "dr._shawn@gmail.com",
                        PhoneNo = "016-2787013",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2096,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 40.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Hines",
                        Email = "jonathan_hines@gmail.com",
                        PhoneNo = "017-1426851",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1682,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 198.0
                    },
                    

                    new Lead
                    {
                        Name = "Walter Perez",
                        Email = "walter_perez@gmail.com",
                        PhoneNo = "014-0468505",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1459.0
                    },
                    

                    new Lead
                    {
                        Name = "George Rodriguez",
                        Email = "george_rodriguez@gmail.com",
                        PhoneNo = "018-4676495",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0713,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 49.0
                    },
                    

                    new Lead
                    {
                        Name = "James Hendrix",
                        Email = "james_hendrix@gmail.com",
                        PhoneNo = "017-7337030",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9416,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1112.0
                    },
                    

                    new Lead
                    {
                        Name = "Shaun Wheeler",
                        Email = "shaun_wheeler@gmail.com",
                        PhoneNo = "013-4414468",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 576.0
                    },
                    

                    new Lead
                    {
                        Name = "Erin Montgomery",
                        Email = "erin_montgomery@gmail.com",
                        PhoneNo = "018-3388833",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 327.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Katrina Maldonado",
                        Email = "mrs._katrina@gmail.com",
                        PhoneNo = "010-3529460",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Hall",
                        Email = "mark_hall@gmail.com",
                        PhoneNo = "010-9573836",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Yang",
                        Email = "charles_yang@gmail.com",
                        PhoneNo = "014-3829528",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Tammy Thomas",
                        Email = "tammy_thomas@gmail.com",
                        PhoneNo = "012-0596118",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 72.0
                    },
                    

                    new Lead
                    {
                        Name = "Penny Massey",
                        Email = "penny_massey@gmail.com",
                        PhoneNo = "010-3611099",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0929,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 52.0
                    },
                    

                    new Lead
                    {
                        Name = "Ms. Laurie Cook",
                        Email = "ms._laurie@gmail.com",
                        PhoneNo = "018-7627229",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6648,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 828.0
                    },
                    

                    new Lead
                    {
                        Name = "Stacy Ryan",
                        Email = "stacy_ryan@gmail.com",
                        PhoneNo = "013-2329729",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 358.0
                    },
                    

                    new Lead
                    {
                        Name = "Joe White",
                        Email = "joe_white@gmail.com",
                        PhoneNo = "010-9600593",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1478.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Bray",
                        Email = "susan_bray@gmail.com",
                        PhoneNo = "012-1713853",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.993,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1216.0
                    },
                    

                    new Lead
                    {
                        Name = "Nathan Thompson",
                        Email = "nathan_thompson@gmail.com",
                        PhoneNo = "018-8557974",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 166.0
                    },
                    

                    new Lead
                    {
                        Name = "Timothy Smith",
                        Email = "timothy_smith@gmail.com",
                        PhoneNo = "014-3324600",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1139,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 396.0
                    },
                    

                    new Lead
                    {
                        Name = "Wesley Ramsey",
                        Email = "wesley_ramsey@gmail.com",
                        PhoneNo = "013-7233770",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0576,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 236.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrea Gardner",
                        Email = "andrea_gardner@gmail.com",
                        PhoneNo = "010-3679320",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Brian Rogers",
                        Email = "brian_rogers@gmail.com",
                        PhoneNo = "013-9931346",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.257,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 439.0
                    },
                    

                    new Lead
                    {
                        Name = "Willie Martin",
                        Email = "willie_martin@gmail.com",
                        PhoneNo = "014-9242289",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 250.0
                    },
                    

                    new Lead
                    {
                        Name = "Roger Jensen",
                        Email = "roger_jensen@gmail.com",
                        PhoneNo = "019-2999670",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5873,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 623.0
                    },
                    

                    new Lead
                    {
                        Name = "Tiffany Meadows",
                        Email = "tiffany_meadows@gmail.com",
                        PhoneNo = "018-7676528",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 26.0
                    },
                    

                    new Lead
                    {
                        Name = "Renee Smith",
                        Email = "renee_smith@gmail.com",
                        PhoneNo = "013-9944233",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1012.0
                    },
                    

                    new Lead
                    {
                        Name = "Erica Mcdonald",
                        Email = "erica_mcdonald@gmail.com",
                        PhoneNo = "012-1708584",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1077,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 146.0
                    },
                    

                    new Lead
                    {
                        Name = "Alyssa Lara",
                        Email = "alyssa_lara@gmail.com",
                        PhoneNo = "016-6389018",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2591,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 266.0
                    },
                    

                    new Lead
                    {
                        Name = "David Sanders",
                        Email = "david_sanders@gmail.com",
                        PhoneNo = "017-2593829",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Sheppard",
                        Email = "karen_sheppard@gmail.com",
                        PhoneNo = "017-6010490",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jasmine Orr",
                        Email = "jasmine_orr@gmail.com",
                        PhoneNo = "013-9331076",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1086.0
                    },
                    

                    new Lead
                    {
                        Name = "Ashley White",
                        Email = "ashley_white@gmail.com",
                        PhoneNo = "016-6774708",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9449,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1429.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua White MD",
                        Email = "joshua_white@gmail.com",
                        PhoneNo = "013-2314312",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1395.0
                    },
                    

                    new Lead
                    {
                        Name = "Carol Rodriguez",
                        Email = "carol_rodriguez@gmail.com",
                        PhoneNo = "010-5706679",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1205.0
                    },
                    

                    new Lead
                    {
                        Name = "Daniel Kennedy",
                        Email = "daniel_kennedy@gmail.com",
                        PhoneNo = "010-3766911",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 228.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Blankenship",
                        Email = "ryan_blankenship@gmail.com",
                        PhoneNo = "012-3027255",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 23.0
                    },
                    

                    new Lead
                    {
                        Name = "David Harvey",
                        Email = "david_harvey@gmail.com",
                        PhoneNo = "010-7119809",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 899.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Johns",
                        Email = "joseph_johns@gmail.com",
                        PhoneNo = "014-6598926",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 189.0
                    },
                    

                    new Lead
                    {
                        Name = "William Davis",
                        Email = "william_davis@gmail.com",
                        PhoneNo = "016-5577177",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Gregory Robinson PhD",
                        Email = "gregory_robinson@gmail.com",
                        PhoneNo = "019-9758872",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jade Walter",
                        Email = "jade_walter@gmail.com",
                        PhoneNo = "012-1276365",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 391.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Holloway",
                        Email = "michelle_holloway@gmail.com",
                        PhoneNo = "014-9547269",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1413.0
                    },
                    

                    new Lead
                    {
                        Name = "Bill Johnson",
                        Email = "bill_johnson@gmail.com",
                        PhoneNo = "018-9933115",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kenneth Lee",
                        Email = "kenneth_lee@gmail.com",
                        PhoneNo = "010-6229578",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3803,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 598.0
                    },
                    

                    new Lead
                    {
                        Name = "Eric Mitchell",
                        Email = "eric_mitchell@gmail.com",
                        PhoneNo = "014-2031950",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Frederick Jenkins",
                        Email = "frederick_jenkins@gmail.com",
                        PhoneNo = "012-4320479",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1077,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 111.0
                    },
                    

                    new Lead
                    {
                        Name = "Timothy Rodriguez",
                        Email = "timothy_rodriguez@gmail.com",
                        PhoneNo = "019-6876617",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 325.0
                    },
                    

                    new Lead
                    {
                        Name = "Sean Watson",
                        Email = "sean_watson@gmail.com",
                        PhoneNo = "010-7962176",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9729,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1709.0
                    },
                    

                    new Lead
                    {
                        Name = "Kyle Boyd",
                        Email = "kyle_boyd@gmail.com",
                        PhoneNo = "012-1785472",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9902,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1491.0
                    },
                    

                    new Lead
                    {
                        Name = "Fernando Villanueva",
                        Email = "fernando_villanueva@gmail.com",
                        PhoneNo = "018-5849969",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Anna Fritz",
                        Email = "anna_fritz@gmail.com",
                        PhoneNo = "018-8518428",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1463,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 129.0
                    },
                    

                    new Lead
                    {
                        Name = "Adam Thompson",
                        Email = "adam_thompson@gmail.com",
                        PhoneNo = "014-7772595",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Scott Espinoza",
                        Email = "scott_espinoza@gmail.com",
                        PhoneNo = "019-4793344",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 295.0
                    },
                    

                    new Lead
                    {
                        Name = "Pamela Cross",
                        Email = "pamela_cross@gmail.com",
                        PhoneNo = "019-7384851",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1081,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 181.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Gordon",
                        Email = "jennifer_gordon@gmail.com",
                        PhoneNo = "012-6749518",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6544,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1534.0
                    },
                    

                    new Lead
                    {
                        Name = "Gina King",
                        Email = "gina_king@gmail.com",
                        PhoneNo = "017-3200961",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Jones",
                        Email = "thomas_jones@gmail.com",
                        PhoneNo = "010-0614460",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Frank Leon",
                        Email = "frank_leon@gmail.com",
                        PhoneNo = "010-1045791",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Russo",
                        Email = "michael_russo@gmail.com",
                        PhoneNo = "016-0239095",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2565,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 46.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Vaughan",
                        Email = "anthony_vaughan@gmail.com",
                        PhoneNo = "016-9269800",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6312,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 907.0
                    },
                    

                    new Lead
                    {
                        Name = "Albert Wagner",
                        Email = "albert_wagner@gmail.com",
                        PhoneNo = "016-7806067",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6247,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1871.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrew Bishop",
                        Email = "andrew_bishop@gmail.com",
                        PhoneNo = "010-4136097",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 208.0
                    },
                    

                    new Lead
                    {
                        Name = "Douglas Benjamin",
                        Email = "douglas_benjamin@gmail.com",
                        PhoneNo = "016-3331069",
                        AvgPageViewPerVisit = 4.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4727,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 898.0
                    },
                    

                    new Lead
                    {
                        Name = "Bradley Chapman",
                        Email = "bradley_chapman@gmail.com",
                        PhoneNo = "019-9403363",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Gomez",
                        Email = "joshua_gomez@gmail.com",
                        PhoneNo = "014-5895287",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Businessman],
                        PredictedScore = 0.6693,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Helen Banks",
                        Email = "helen_banks@gmail.com",
                        PhoneNo = "012-8973237",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1064,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 125.0
                    },
                    

                    new Lead
                    {
                        Name = "Tina Mcclain",
                        Email = "tina_mcclain@gmail.com",
                        PhoneNo = "012-0253612",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9704,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1925.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Johnson",
                        Email = "ryan_johnson@gmail.com",
                        PhoneNo = "010-4729096",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1279.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Cruz",
                        Email = "michael_cruz@gmail.com",
                        PhoneNo = "010-1642291",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "William Robertson",
                        Email = "william_robertson@gmail.com",
                        PhoneNo = "016-2897371",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.4869,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 660.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Wright",
                        Email = "robert_wright@gmail.com",
                        PhoneNo = "013-4311610",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Eric Garner",
                        Email = "eric_garner@gmail.com",
                        PhoneNo = "018-9732086",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6049,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 686.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Castaneda",
                        Email = "steven_castaneda@gmail.com",
                        PhoneNo = "010-7958935",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 19.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Pace",
                        Email = "michael_pace@gmail.com",
                        PhoneNo = "014-7102679",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 155.0
                    },
                    

                    new Lead
                    {
                        Name = "Alexander Carter",
                        Email = "alexander_carter@gmail.com",
                        PhoneNo = "019-3813662",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Schmitt",
                        Email = "elizabeth_schmitt@gmail.com",
                        PhoneNo = "016-9418639",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Bruce Taylor",
                        Email = "bruce_taylor@gmail.com",
                        PhoneNo = "010-4999278",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Susan Carr DDS",
                        Email = "dr._susan@gmail.com",
                        PhoneNo = "019-9829109",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.6069,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1532.0
                    },
                    

                    new Lead
                    {
                        Name = "Miss Lindsey Mcbride",
                        Email = "miss_lindsey@gmail.com",
                        PhoneNo = "010-9675627",
                        AvgPageViewPerVisit = 1.25,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9799,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1288.0
                    },
                    

                    new Lead
                    {
                        Name = "William Sutton",
                        Email = "william_sutton@gmail.com",
                        PhoneNo = "019-6141875",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7247,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 934.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Lee",
                        Email = "jennifer_lee@gmail.com",
                        PhoneNo = "016-6709056",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 976.0
                    },
                    

                    new Lead
                    {
                        Name = "Trevor Martinez",
                        Email = "trevor_martinez@gmail.com",
                        PhoneNo = "012-2937620",
                        AvgPageViewPerVisit = 4.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4873,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 594.0
                    },
                    

                    new Lead
                    {
                        Name = "Paul Davis",
                        Email = "paul_davis@gmail.com",
                        PhoneNo = "019-5659513",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2922,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 467.0
                    },
                    

                    new Lead
                    {
                        Name = "Taylor Davis",
                        Email = "taylor_davis@gmail.com",
                        PhoneNo = "017-5685672",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7409,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 341.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebecca Moore",
                        Email = "rebecca_moore@gmail.com",
                        PhoneNo = "018-6150038",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1081,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 174.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelly Henderson",
                        Email = "kelly_henderson@gmail.com",
                        PhoneNo = "016-2734802",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Katrina Fleming",
                        Email = "katrina_fleming@gmail.com",
                        PhoneNo = "013-8773752",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7182,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1234.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Harris",
                        Email = "heather_harris@gmail.com",
                        PhoneNo = "019-8745355",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 306.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Johnson",
                        Email = "susan_johnson@gmail.com",
                        PhoneNo = "018-0029635",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1266.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Brown",
                        Email = "amanda_brown@gmail.com",
                        PhoneNo = "016-1624084",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicole Stewart",
                        Email = "nicole_stewart@gmail.com",
                        PhoneNo = "013-7782747",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 18.0,
                        TotalTimeSpendOnSite = 264.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Johns",
                        Email = "joshua_johns@gmail.com",
                        PhoneNo = "018-9851093",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelly Allen",
                        Email = "kelly_allen@gmail.com",
                        PhoneNo = "017-1348533",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7061,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1397.0
                    },
                    

                    new Lead
                    {
                        Name = "Donald Lin",
                        Email = "donald_lin@gmail.com",
                        PhoneNo = "013-0317220",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jordan Romero",
                        Email = "jordan_romero@gmail.com",
                        PhoneNo = "010-3308091",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 94.0
                    },
                    

                    new Lead
                    {
                        Name = "Krystal Moore",
                        Email = "krystal_moore@gmail.com",
                        PhoneNo = "012-1949138",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 208.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Moreno",
                        Email = "christopher_moreno@gmail.com",
                        PhoneNo = "012-8791472",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7291,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1198.0
                    },
                    

                    new Lead
                    {
                        Name = "Christine Russell",
                        Email = "christine_russell@gmail.com",
                        PhoneNo = "014-9569545",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "James Dominguez",
                        Email = "james_dominguez@gmail.com",
                        PhoneNo = "018-7340384",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Karen Barber",
                        Email = "karen_barber@gmail.com",
                        PhoneNo = "013-7050788",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Smith",
                        Email = "kimberly_smith@gmail.com",
                        PhoneNo = "016-8053537",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebecca Johnson",
                        Email = "rebecca_johnson@gmail.com",
                        PhoneNo = "016-8790466",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 94.0
                    },
                    

                    new Lead
                    {
                        Name = "John Brown",
                        Email = "john_brown@gmail.com",
                        PhoneNo = "019-7673068",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 212.0
                    },
                    

                    new Lead
                    {
                        Name = "Tina Ayala",
                        Email = "tina_ayala@gmail.com",
                        PhoneNo = "017-6443952",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 305.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina Chung",
                        Email = "christina_chung@gmail.com",
                        PhoneNo = "016-0459288",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Roger Larson",
                        Email = "roger_larson@gmail.com",
                        PhoneNo = "019-5115293",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 186.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Molina DDS",
                        Email = "richard_molina@gmail.com",
                        PhoneNo = "017-4269580",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1615.0
                    },
                    

                    new Lead
                    {
                        Name = "Dylan Bond",
                        Email = "dylan_bond@gmail.com",
                        PhoneNo = "016-7797867",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Aaron Warren",
                        Email = "aaron_warren@gmail.com",
                        PhoneNo = "016-3639772",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Emily Gallagher",
                        Email = "emily_gallagher@gmail.com",
                        PhoneNo = "019-9443251",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 107.0
                    },
                    

                    new Lead
                    {
                        Name = "Justin Buchanan",
                        Email = "justin_buchanan@gmail.com",
                        PhoneNo = "018-0336235",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "William Blake",
                        Email = "william_blake@gmail.com",
                        PhoneNo = "013-1486924",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1745.0
                    },
                    

                    new Lead
                    {
                        Name = "Tracy Lawson",
                        Email = "tracy_lawson@gmail.com",
                        PhoneNo = "010-4751638",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6648,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 803.0
                    },
                    

                    new Lead
                    {
                        Name = "Lauren Hutchinson",
                        Email = "lauren_hutchinson@gmail.com",
                        PhoneNo = "017-1671905",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 256.0
                    },
                    

                    new Lead
                    {
                        Name = "Cheryl Ryan",
                        Email = "cheryl_ryan@gmail.com",
                        PhoneNo = "012-6099873",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 361.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Alexander",
                        Email = "thomas_alexander@gmail.com",
                        PhoneNo = "018-5996080",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 45.0
                    },
                    

                    new Lead
                    {
                        Name = "Chris Shepard",
                        Email = "chris_shepard@gmail.com",
                        PhoneNo = "010-5081404",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2419,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 223.0
                    },
                    

                    new Lead
                    {
                        Name = "James Tran",
                        Email = "james_tran@gmail.com",
                        PhoneNo = "019-1689081",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Miranda Espinoza",
                        Email = "miranda_espinoza@gmail.com",
                        PhoneNo = "016-2645342",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 170.0
                    },
                    

                    new Lead
                    {
                        Name = "Benjamin Huynh",
                        Email = "benjamin_huynh@gmail.com",
                        PhoneNo = "010-4933611",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1552.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristen James",
                        Email = "kristen_james@gmail.com",
                        PhoneNo = "014-4525660",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 255.0
                    },
                    

                    new Lead
                    {
                        Name = "Lindsay Palmer",
                        Email = "lindsay_palmer@gmail.com",
                        PhoneNo = "013-2863965",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1566.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Bolton",
                        Email = "joshua_bolton@gmail.com",
                        PhoneNo = "019-8186535",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Teresa Martin",
                        Email = "dr._teresa@gmail.com",
                        PhoneNo = "010-3861455",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 240.0
                    },
                    

                    new Lead
                    {
                        Name = "Alyssa Mcdaniel",
                        Email = "alyssa_mcdaniel@gmail.com",
                        PhoneNo = "019-5343774",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1568,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 24.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Stout",
                        Email = "joseph_stout@gmail.com",
                        PhoneNo = "019-7522455",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 596.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeremy Romero",
                        Email = "jeremy_romero@gmail.com",
                        PhoneNo = "017-0507243",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Teresa Taylor",
                        Email = "teresa_taylor@gmail.com",
                        PhoneNo = "013-0837669",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 35.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Robinson",
                        Email = "lisa_robinson@gmail.com",
                        PhoneNo = "018-0217050",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2158,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 94.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Powers",
                        Email = "jonathan_powers@gmail.com",
                        PhoneNo = "018-0840562",
                        AvgPageViewPerVisit = 5.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2096,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 78.0
                    },
                    

                    new Lead
                    {
                        Name = "Timothy Butler",
                        Email = "timothy_butler@gmail.com",
                        PhoneNo = "019-9515773",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7334,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 18.0,
                        TotalTimeSpendOnSite = 1428.0
                    },
                    

                    new Lead
                    {
                        Name = "James Santos",
                        Email = "james_santos@gmail.com",
                        PhoneNo = "018-9299914",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 852.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Thomas",
                        Email = "joshua_thomas@gmail.com",
                        PhoneNo = "017-5933244",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Andrea Miller",
                        Email = "andrea_miller@gmail.com",
                        PhoneNo = "016-8753474",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 13.0
                    },
                    

                    new Lead
                    {
                        Name = "Jason Collins",
                        Email = "jason_collins@gmail.com",
                        PhoneNo = "016-8063227",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Zachary Leon",
                        Email = "zachary_leon@gmail.com",
                        PhoneNo = "014-0767295",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 115.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristin Avery",
                        Email = "kristin_avery@gmail.com",
                        PhoneNo = "017-3391058",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 252.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Brown",
                        Email = "joseph_brown@gmail.com",
                        PhoneNo = "012-1212592",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Tonya Lloyd",
                        Email = "tonya_lloyd@gmail.com",
                        PhoneNo = "010-9441369",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 337.0
                    },
                    

                    new Lead
                    {
                        Name = "Joel Williams",
                        Email = "joel_williams@gmail.com",
                        PhoneNo = "012-3118869",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Natalie Park",
                        Email = "natalie_park@gmail.com",
                        PhoneNo = "013-8411639",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7409,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 205.0
                    },
                    

                    new Lead
                    {
                        Name = "Dale Garcia",
                        Email = "dale_garcia@gmail.com",
                        PhoneNo = "016-4149873",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Randall Bass",
                        Email = "randall_bass@gmail.com",
                        PhoneNo = "016-2317260",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1068.0
                    },
                    

                    new Lead
                    {
                        Name = "Tiffany Cook",
                        Email = "tiffany_cook@gmail.com",
                        PhoneNo = "019-5234379",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3377,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 847.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Woods",
                        Email = "kimberly_woods@gmail.com",
                        PhoneNo = "019-6187212",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 112.0
                    },
                    

                    new Lead
                    {
                        Name = "Lauren Mcmahon",
                        Email = "lauren_mcmahon@gmail.com",
                        PhoneNo = "017-0299497",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6274,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 699.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicole Taylor",
                        Email = "nicole_taylor@gmail.com",
                        PhoneNo = "019-5036335",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1.0
                    },
                    

                    new Lead
                    {
                        Name = "Janet Harris",
                        Email = "janet_harris@gmail.com",
                        PhoneNo = "019-5636800",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Morgan",
                        Email = "susan_morgan@gmail.com",
                        PhoneNo = "010-7202835",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1237.0
                    },
                    

                    new Lead
                    {
                        Name = "Denise Flowers",
                        Email = "denise_flowers@gmail.com",
                        PhoneNo = "012-7562585",
                        AvgPageViewPerVisit = 1.78,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9777,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 16.0,
                        TotalTimeSpendOnSite = 1448.0
                    },
                    

                    new Lead
                    {
                        Name = "James Carey",
                        Email = "james_carey@gmail.com",
                        PhoneNo = "019-6632232",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1320.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Ellison",
                        Email = "robert_ellison@gmail.com",
                        PhoneNo = "014-2171819",
                        AvgPageViewPerVisit = 1.56,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2377,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 143.0
                    },
                    

                    new Lead
                    {
                        Name = "Sabrina Hurst",
                        Email = "sabrina_hurst@gmail.com",
                        PhoneNo = "017-4794419",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 52.0
                    },
                    

                    new Lead
                    {
                        Name = "Kendra Shelton",
                        Email = "kendra_shelton@gmail.com",
                        PhoneNo = "012-0047074",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 358.0
                    },
                    

                    new Lead
                    {
                        Name = "Cynthia Gentry",
                        Email = "cynthia_gentry@gmail.com",
                        PhoneNo = "012-6867285",
                        AvgPageViewPerVisit = 14.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7334,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 1595.0
                    },
                    

                    new Lead
                    {
                        Name = "Morgan Schneider",
                        Email = "morgan_schneider@gmail.com",
                        PhoneNo = "014-1728221",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Phillip Ward",
                        Email = "phillip_ward@gmail.com",
                        PhoneNo = "012-5336954",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 38.0
                    },
                    

                    new Lead
                    {
                        Name = "Kara Murphy",
                        Email = "kara_murphy@gmail.com",
                        PhoneNo = "016-9838665",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 236.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Rosales",
                        Email = "stephanie_rosales@gmail.com",
                        PhoneNo = "012-3476994",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6816,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1664.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Sweeney",
                        Email = "joseph_sweeney@gmail.com",
                        PhoneNo = "017-6843808",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1089.0
                    },
                    

                    new Lead
                    {
                        Name = "Timothy Mathews",
                        Email = "timothy_mathews@gmail.com",
                        PhoneNo = "018-8048815",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 33.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Hamilton",
                        Email = "charles_hamilton@gmail.com",
                        PhoneNo = "012-1671052",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Lynch",
                        Email = "christopher_lynch@gmail.com",
                        PhoneNo = "019-2974277",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 58.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Moran",
                        Email = "susan_moran@gmail.com",
                        PhoneNo = "013-0750920",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 409.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicholas Harris",
                        Email = "nicholas_harris@gmail.com",
                        PhoneNo = "013-3475407",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Olson",
                        Email = "thomas_olson@gmail.com",
                        PhoneNo = "019-1760656",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 291.0
                    },
                    

                    new Lead
                    {
                        Name = "Catherine Martin",
                        Email = "catherine_martin@gmail.com",
                        PhoneNo = "012-9993282",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 353.0
                    },
                    

                    new Lead
                    {
                        Name = "Mary King",
                        Email = "mary_king@gmail.com",
                        PhoneNo = "013-3802643",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6886,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 798.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Henderson",
                        Email = "jessica_henderson@gmail.com",
                        PhoneNo = "012-9622139",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2008,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 497.0
                    },
                    

                    new Lead
                    {
                        Name = "Kevin Armstrong",
                        Email = "kevin_armstrong@gmail.com",
                        PhoneNo = "014-6018701",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 74.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Thomas",
                        Email = "richard_thomas@gmail.com",
                        PhoneNo = "012-3661025",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1577.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Murray",
                        Email = "charles_murray@gmail.com",
                        PhoneNo = "014-5081938",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 281.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Brewer MD",
                        Email = "michael_brewer@gmail.com",
                        PhoneNo = "014-8869700",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 73.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Finley",
                        Email = "ryan_finley@gmail.com",
                        PhoneNo = "018-9142270",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 12.0,
                        TotalTimeSpendOnSite = 1543.0
                    },
                    

                    new Lead
                    {
                        Name = "Cassandra Vargas",
                        Email = "cassandra_vargas@gmail.com",
                        PhoneNo = "019-4974785",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2096,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 83.0
                    },
                    

                    new Lead
                    {
                        Name = "Paul Jackson",
                        Email = "paul_jackson@gmail.com",
                        PhoneNo = "010-4336993",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 153.0
                    },
                    

                    new Lead
                    {
                        Name = "Vanessa Vargas",
                        Email = "vanessa_vargas@gmail.com",
                        PhoneNo = "016-7771850",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7145,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1408.0
                    },
                    

                    new Lead
                    {
                        Name = "Kevin Cook",
                        Email = "kevin_cook@gmail.com",
                        PhoneNo = "012-7142346",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 101.0
                    },
                    

                    new Lead
                    {
                        Name = "Katherine Adkins",
                        Email = "katherine_adkins@gmail.com",
                        PhoneNo = "012-6958943",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9328,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1585.0
                    },
                    

                    new Lead
                    {
                        Name = "Dawn Deleon",
                        Email = "dawn_deleon@gmail.com",
                        PhoneNo = "010-6966125",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 55.0
                    },
                    

                    new Lead
                    {
                        Name = "Katherine Villanueva",
                        Email = "katherine_villanueva@gmail.com",
                        PhoneNo = "013-0589662",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8356,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 489.0
                    },
                    

                    new Lead
                    {
                        Name = "Melanie Kennedy",
                        Email = "melanie_kennedy@gmail.com",
                        PhoneNo = "014-9041087",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 339.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Young",
                        Email = "michelle_young@gmail.com",
                        PhoneNo = "018-8090522",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 135.0
                    },
                    

                    new Lead
                    {
                        Name = "Tyler Lyons",
                        Email = "tyler_lyons@gmail.com",
                        PhoneNo = "016-9353402",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Valenzuela",
                        Email = "melissa_valenzuela@gmail.com",
                        PhoneNo = "013-9102616",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1372.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Jones",
                        Email = "angela_jones@gmail.com",
                        PhoneNo = "017-6427666",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Diana Flores",
                        Email = "diana_flores@gmail.com",
                        PhoneNo = "017-3346122",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1321.0
                    },
                    

                    new Lead
                    {
                        Name = "James Lynch",
                        Email = "james_lynch@gmail.com",
                        PhoneNo = "018-9965315",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 5.0
                    },
                    

                    new Lead
                    {
                        Name = "James Nichols",
                        Email = "james_nichols@gmail.com",
                        PhoneNo = "014-5706417",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Adams",
                        Email = "charles_adams@gmail.com",
                        PhoneNo = "012-8580516",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1064,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 154.0
                    },
                    

                    new Lead
                    {
                        Name = "Sherri Barnes",
                        Email = "sherri_barnes@gmail.com",
                        PhoneNo = "014-8241908",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 229.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Campbell",
                        Email = "jennifer_campbell@gmail.com",
                        PhoneNo = "018-0012315",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3109,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 527.0
                    },
                    

                    new Lead
                    {
                        Name = "Lori Martinez",
                        Email = "lori_martinez@gmail.com",
                        PhoneNo = "014-2844366",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 139.0
                    },
                    

                    new Lead
                    {
                        Name = "Shawn Jackson",
                        Email = "shawn_jackson@gmail.com",
                        PhoneNo = "016-3842844",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1606.0
                    },
                    

                    new Lead
                    {
                        Name = "Bruce Nelson",
                        Email = "bruce_nelson@gmail.com",
                        PhoneNo = "010-5987245",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 928.0
                    },
                    

                    new Lead
                    {
                        Name = "Eric Andrews",
                        Email = "eric_andrews@gmail.com",
                        PhoneNo = "014-8290608",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6891,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 740.0
                    },
                    

                    new Lead
                    {
                        Name = "Bryce Dunn",
                        Email = "bryce_dunn@gmail.com",
                        PhoneNo = "018-8106522",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 949.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Smith",
                        Email = "samuel_smith@gmail.com",
                        PhoneNo = "014-9602738",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 133.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Terry",
                        Email = "jessica_terry@gmail.com",
                        PhoneNo = "016-2183911",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1306,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 43.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Hill",
                        Email = "michelle_hill@gmail.com",
                        PhoneNo = "010-1858992",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ronald Harris",
                        Email = "ronald_harris@gmail.com",
                        PhoneNo = "013-0705428",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1240.0
                    },
                    

                    new Lead
                    {
                        Name = "Dylan Huerta",
                        Email = "dylan_huerta@gmail.com",
                        PhoneNo = "012-3374874",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Isaac Wyatt",
                        Email = "isaac_wyatt@gmail.com",
                        PhoneNo = "010-5928996",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6264,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 651.0
                    },
                    

                    new Lead
                    {
                        Name = "Rachel Duncan",
                        Email = "rachel_duncan@gmail.com",
                        PhoneNo = "012-1744283",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kyle Cabrera",
                        Email = "kyle_cabrera@gmail.com",
                        PhoneNo = "016-6770149",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 11.0
                    },
                    

                    new Lead
                    {
                        Name = "Maria Evans",
                        Email = "maria_evans@gmail.com",
                        PhoneNo = "019-5854289",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Julie Durham",
                        Email = "julie_durham@gmail.com",
                        PhoneNo = "012-9507117",
                        AvgPageViewPerVisit = 2.75,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7099,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 702.0
                    },
                    

                    new Lead
                    {
                        Name = "Daniel Ross",
                        Email = "daniel_ross@gmail.com",
                        PhoneNo = "013-7975573",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9449,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1505.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela White",
                        Email = "angela_white@gmail.com",
                        PhoneNo = "012-0329846",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1243.0
                    },
                    

                    new Lead
                    {
                        Name = "Louis Martin",
                        Email = "louis_martin@gmail.com",
                        PhoneNo = "014-5778527",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 404.0
                    },
                    

                    new Lead
                    {
                        Name = "Molly Torres",
                        Email = "molly_torres@gmail.com",
                        PhoneNo = "010-6079206",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7339,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 929.0
                    },
                    

                    new Lead
                    {
                        Name = "Monica Luna",
                        Email = "monica_luna@gmail.com",
                        PhoneNo = "019-1311155",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Reeves",
                        Email = "angela_reeves@gmail.com",
                        PhoneNo = "013-6128915",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2329,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 469.0
                    },
                    

                    new Lead
                    {
                        Name = "Katherine Pitts",
                        Email = "katherine_pitts@gmail.com",
                        PhoneNo = "010-2497218",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1052.0
                    },
                    

                    new Lead
                    {
                        Name = "Amy Fuentes",
                        Email = "amy_fuentes@gmail.com",
                        PhoneNo = "012-9545915",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 883.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeffrey Crawford",
                        Email = "jeffrey_crawford@gmail.com",
                        PhoneNo = "017-7877927",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Amber Chavez",
                        Email = "amber_chavez@gmail.com",
                        PhoneNo = "014-5645582",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1510.0
                    },
                    

                    new Lead
                    {
                        Name = "Pamela Alvarado",
                        Email = "pamela_alvarado@gmail.com",
                        PhoneNo = "013-5135515",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 122.0
                    },
                    

                    new Lead
                    {
                        Name = "Catherine Clark",
                        Email = "catherine_clark@gmail.com",
                        PhoneNo = "010-2580494",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1460.0
                    },
                    

                    new Lead
                    {
                        Name = "Travis Nguyen MD",
                        Email = "travis_nguyen@gmail.com",
                        PhoneNo = "016-2249623",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 255.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Nunez",
                        Email = "robert_nunez@gmail.com",
                        PhoneNo = "016-8622253",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Emily Beasley",
                        Email = "emily_beasley@gmail.com",
                        PhoneNo = "010-5668732",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jordan Santana",
                        Email = "jordan_santana@gmail.com",
                        PhoneNo = "016-6128091",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2257,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 298.0
                    },
                    

                    new Lead
                    {
                        Name = "James Kramer",
                        Email = "james_kramer@gmail.com",
                        PhoneNo = "014-9393788",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7297,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 914.0
                    },
                    

                    new Lead
                    {
                        Name = "Greg Anderson",
                        Email = "greg_anderson@gmail.com",
                        PhoneNo = "019-8580272",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 216.0
                    },
                    

                    new Lead
                    {
                        Name = "Jonathan Sexton",
                        Email = "jonathan_sexton@gmail.com",
                        PhoneNo = "010-5537540",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2581,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 28.0
                    },
                    

                    new Lead
                    {
                        Name = "Amy Craig",
                        Email = "amy_craig@gmail.com",
                        PhoneNo = "016-9091161",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 195.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebecca Brady",
                        Email = "rebecca_brady@gmail.com",
                        PhoneNo = "018-9801324",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 232.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Christian",
                        Email = "jennifer_christian@gmail.com",
                        PhoneNo = "018-8816171",
                        AvgPageViewPerVisit = 2.75,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7321,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 964.0
                    },
                    

                    new Lead
                    {
                        Name = "Victoria Francis",
                        Email = "victoria_francis@gmail.com",
                        PhoneNo = "010-1855308",
                        AvgPageViewPerVisit = 4.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7186,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 1659.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Whitaker",
                        Email = "patrick_whitaker@gmail.com",
                        PhoneNo = "013-3629513",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 272.0
                    },
                    

                    new Lead
                    {
                        Name = "James Smith",
                        Email = "james_smith@gmail.com",
                        PhoneNo = "012-0909907",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 21.0
                    },
                    

                    new Lead
                    {
                        Name = "Dana Phillips",
                        Email = "dana_phillips@gmail.com",
                        PhoneNo = "016-3229513",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 44.0
                    },
                    

                    new Lead
                    {
                        Name = "James Pope",
                        Email = "james_pope@gmail.com",
                        PhoneNo = "016-6451124",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1592.0
                    },
                    

                    new Lead
                    {
                        Name = "Trevor Walker",
                        Email = "trevor_walker@gmail.com",
                        PhoneNo = "010-4210344",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7796,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 75.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Wells",
                        Email = "angela_wells@gmail.com",
                        PhoneNo = "012-7939546",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9409,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1119.0
                    },
                    

                    new Lead
                    {
                        Name = "Alexandra Johnson",
                        Email = "alexandra_johnson@gmail.com",
                        PhoneNo = "012-0777967",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9077,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1269.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Jackson",
                        Email = "elizabeth_jackson@gmail.com",
                        PhoneNo = "013-0480653",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Lawrence Herman",
                        Email = "lawrence_herman@gmail.com",
                        PhoneNo = "017-9394310",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2475,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 743.0
                    },
                    

                    new Lead
                    {
                        Name = "Brenda Davis",
                        Email = "brenda_davis@gmail.com",
                        PhoneNo = "019-8220774",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Devin Welch",
                        Email = "dr._devin@gmail.com",
                        PhoneNo = "012-6422871",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 111.0
                    },
                    

                    new Lead
                    {
                        Name = "Walter Perez",
                        Email = "walter_perez@gmail.com",
                        PhoneNo = "019-9256070",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Billy Kim",
                        Email = "billy_kim@gmail.com",
                        PhoneNo = "012-4021544",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Aaron Smith",
                        Email = "aaron_smith@gmail.com",
                        PhoneNo = "019-5622834",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.7978,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 69.0
                    },
                    

                    new Lead
                    {
                        Name = "Chad Johnson",
                        Email = "chad_johnson@gmail.com",
                        PhoneNo = "013-3587946",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Victoria Michael",
                        Email = "victoria_michael@gmail.com",
                        PhoneNo = "014-2998313",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1302.0
                    },
                    

                    new Lead
                    {
                        Name = "Hayley Fuentes",
                        Email = "hayley_fuentes@gmail.com",
                        PhoneNo = "019-8897296",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5314,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1054.0
                    },
                    

                    new Lead
                    {
                        Name = "Jody Macias",
                        Email = "jody_macias@gmail.com",
                        PhoneNo = "017-9810103",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2362,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 70.0
                    },
                    

                    new Lead
                    {
                        Name = "Marissa Macdonald",
                        Email = "marissa_macdonald@gmail.com",
                        PhoneNo = "017-6425000",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6773,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1011.0
                    },
                    

                    new Lead
                    {
                        Name = "Stephanie Smith",
                        Email = "stephanie_smith@gmail.com",
                        PhoneNo = "013-2579598",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2591,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 300.0
                    },
                    

                    new Lead
                    {
                        Name = "Alicia Goodwin",
                        Email = "alicia_goodwin@gmail.com",
                        PhoneNo = "012-3246905",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6507,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 885.0
                    },
                    

                    new Lead
                    {
                        Name = "Vanessa Woods",
                        Email = "vanessa_woods@gmail.com",
                        PhoneNo = "010-6772188",
                        AvgPageViewPerVisit = 3.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 10.0,
                        TotalTimeSpendOnSite = 212.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Anderson",
                        Email = "michael_anderson@gmail.com",
                        PhoneNo = "019-1909502",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1507.0
                    },
                    

                    new Lead
                    {
                        Name = "Sydney Rodriguez",
                        Email = "sydney_rodriguez@gmail.com",
                        PhoneNo = "013-7498627",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 301.0
                    },
                    

                    new Lead
                    {
                        Name = "Jesse Day",
                        Email = "jesse_day@gmail.com",
                        PhoneNo = "019-6493583",
                        AvgPageViewPerVisit = 15.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7334,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 15.0,
                        TotalTimeSpendOnSite = 1042.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Perry",
                        Email = "joseph_perry@gmail.com",
                        PhoneNo = "014-5528837",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 86.0
                    },
                    

                    new Lead
                    {
                        Name = "Barbara Jones",
                        Email = "barbara_jones@gmail.com",
                        PhoneNo = "013-4094243",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 182.0
                    },
                    

                    new Lead
                    {
                        Name = "Maurice Grant",
                        Email = "maurice_grant@gmail.com",
                        PhoneNo = "014-4427092",
                        AvgPageViewPerVisit = 1.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 90.0
                    },
                    

                    new Lead
                    {
                        Name = "David Stanley",
                        Email = "david_stanley@gmail.com",
                        PhoneNo = "012-1401836",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9409,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1130.0
                    },
                    

                    new Lead
                    {
                        Name = "Ricardo Wright",
                        Email = "ricardo_wright@gmail.com",
                        PhoneNo = "019-5349839",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1609.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Wright",
                        Email = "ryan_wright@gmail.com",
                        PhoneNo = "019-9762993",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4945,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1606.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Rodriguez",
                        Email = "angela_rodriguez@gmail.com",
                        PhoneNo = "012-4646254",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Taylor Phelps",
                        Email = "taylor_phelps@gmail.com",
                        PhoneNo = "017-6046571",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1568.0
                    },
                    

                    new Lead
                    {
                        Name = "Adriana Lopez",
                        Email = "adriana_lopez@gmail.com",
                        PhoneNo = "013-7063123",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 102.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristen Anthony",
                        Email = "kristen_anthony@gmail.com",
                        PhoneNo = "013-5418641",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Myers",
                        Email = "christopher_myers@gmail.com",
                        PhoneNo = "013-0991641",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 100.0
                    },
                    

                    new Lead
                    {
                        Name = "Peter Rios",
                        Email = "peter_rios@gmail.com",
                        PhoneNo = "019-8913986",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 26.0
                    },
                    

                    new Lead
                    {
                        Name = "Malik Jackson",
                        Email = "malik_jackson@gmail.com",
                        PhoneNo = "019-1400035",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Hannah Park",
                        Email = "hannah_park@gmail.com",
                        PhoneNo = "013-1019424",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1081,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 203.0
                    },
                    

                    new Lead
                    {
                        Name = "Patrick Smith",
                        Email = "patrick_smith@gmail.com",
                        PhoneNo = "013-9735469",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 166.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Long",
                        Email = "michael_long@gmail.com",
                        PhoneNo = "016-8124288",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mario Hill",
                        Email = "mario_hill@gmail.com",
                        PhoneNo = "010-4620930",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 160.0
                    },
                    

                    new Lead
                    {
                        Name = "David Baird",
                        Email = "david_baird@gmail.com",
                        PhoneNo = "013-9197457",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 18.0
                    },
                    

                    new Lead
                    {
                        Name = "Brian Palmer",
                        Email = "brian_palmer@gmail.com",
                        PhoneNo = "014-0762572",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2158,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 154.0
                    },
                    

                    new Lead
                    {
                        Name = "Tyler Stewart",
                        Email = "tyler_stewart@gmail.com",
                        PhoneNo = "013-9201879",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9422,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1499.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Bentley",
                        Email = "robert_bentley@gmail.com",
                        PhoneNo = "018-6448713",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 824.0
                    },
                    

                    new Lead
                    {
                        Name = "Steven Jarvis",
                        Email = "steven_jarvis@gmail.com",
                        PhoneNo = "016-5920445",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Carrie Spencer",
                        Email = "carrie_spencer@gmail.com",
                        PhoneNo = "013-8723944",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2726,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 543.0
                    },
                    

                    new Lead
                    {
                        Name = "Tyler Sanders",
                        Email = "tyler_sanders@gmail.com",
                        PhoneNo = "018-8169307",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1537,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 169.0
                    },
                    

                    new Lead
                    {
                        Name = "Luis Whitaker",
                        Email = "luis_whitaker@gmail.com",
                        PhoneNo = "014-6137573",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1120.0
                    },
                    

                    new Lead
                    {
                        Name = "Megan Ingram MD",
                        Email = "megan_ingram@gmail.com",
                        PhoneNo = "019-2935891",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 300.0
                    },
                    

                    new Lead
                    {
                        Name = "Timothy Moore",
                        Email = "timothy_moore@gmail.com",
                        PhoneNo = "018-1062902",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1874.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Oconnor",
                        Email = "richard_oconnor@gmail.com",
                        PhoneNo = "018-6560804",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7144,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 947.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Cowan",
                        Email = "jessica_cowan@gmail.com",
                        PhoneNo = "017-7446638",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 144.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Perry",
                        Email = "christopher_perry@gmail.com",
                        PhoneNo = "012-9003769",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9445,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1039.0
                    },
                    

                    new Lead
                    {
                        Name = "Melinda Hall",
                        Email = "melinda_hall@gmail.com",
                        PhoneNo = "018-3193295",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 66.0
                    },
                    

                    new Lead
                    {
                        Name = "Sandra Pham",
                        Email = "sandra_pham@gmail.com",
                        PhoneNo = "016-2484370",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Bond",
                        Email = "jessica_bond@gmail.com",
                        PhoneNo = "012-1983402",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9959,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 970.0
                    },
                    

                    new Lead
                    {
                        Name = "Carolyn Alvarado",
                        Email = "carolyn_alvarado@gmail.com",
                        PhoneNo = "018-9550029",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6312,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 910.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Brown",
                        Email = "lisa_brown@gmail.com",
                        PhoneNo = "016-5633210",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 203.0
                    },
                    

                    new Lead
                    {
                        Name = "Jesus Valdez",
                        Email = "jesus_valdez@gmail.com",
                        PhoneNo = "016-8085965",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7343,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1027.0
                    },
                    

                    new Lead
                    {
                        Name = "Cole Castillo",
                        Email = "cole_castillo@gmail.com",
                        PhoneNo = "016-3869701",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1221.0
                    },
                    

                    new Lead
                    {
                        Name = "Austin Wang",
                        Email = "austin_wang@gmail.com",
                        PhoneNo = "010-6899882",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Annette Mullins",
                        Email = "annette_mullins@gmail.com",
                        PhoneNo = "018-2344922",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Alyssa Le",
                        Email = "alyssa_le@gmail.com",
                        PhoneNo = "014-5815309",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7187,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1098.0
                    },
                    

                    new Lead
                    {
                        Name = "Samantha Pace",
                        Email = "samantha_pace@gmail.com",
                        PhoneNo = "016-4270264",
                        AvgPageViewPerVisit = 11.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6255,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 608.0
                    },
                    

                    new Lead
                    {
                        Name = "Sharon Patel",
                        Email = "sharon_patel@gmail.com",
                        PhoneNo = "016-1578207",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1388.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Pitts",
                        Email = "robert_pitts@gmail.com",
                        PhoneNo = "010-8638025",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 306.0
                    },
                    

                    new Lead
                    {
                        Name = "Margaret Hawkins",
                        Email = "margaret_hawkins@gmail.com",
                        PhoneNo = "014-7468525",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 419.0
                    },
                    

                    new Lead
                    {
                        Name = "Michele Mendoza",
                        Email = "michele_mendoza@gmail.com",
                        PhoneNo = "014-0182165",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Bradley Rhodes",
                        Email = "bradley_rhodes@gmail.com",
                        PhoneNo = "012-6109877",
                        AvgPageViewPerVisit = 1.75,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7329,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 875.0
                    },
                    

                    new Lead
                    {
                        Name = "James Abbott",
                        Email = "james_abbott@gmail.com",
                        PhoneNo = "013-4839039",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 8.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Hernandez",
                        Email = "christopher_hernandez@gmail.com",
                        PhoneNo = "014-4591196",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6312,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1241.0
                    },
                    

                    new Lead
                    {
                        Name = "Stacy Willis",
                        Email = "stacy_willis@gmail.com",
                        PhoneNo = "012-4641831",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9569,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1823.0
                    },
                    

                    new Lead
                    {
                        Name = "Kathy Herring",
                        Email = "kathy_herring@gmail.com",
                        PhoneNo = "017-2618979",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 106.0
                    },
                    

                    new Lead
                    {
                        Name = "Veronica Simmons",
                        Email = "veronica_simmons@gmail.com",
                        PhoneNo = "016-7377399",
                        AvgPageViewPerVisit = 2.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2257,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 171.0
                    },
                    

                    new Lead
                    {
                        Name = "David Jones",
                        Email = "david_jones@gmail.com",
                        PhoneNo = "012-3242980",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1514.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Mitchell",
                        Email = "jessica_mitchell@gmail.com",
                        PhoneNo = "014-4214329",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 335.0
                    },
                    

                    new Lead
                    {
                        Name = "Susan Miller",
                        Email = "susan_miller@gmail.com",
                        PhoneNo = "010-6277046",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2837,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 498.0
                    },
                    

                    new Lead
                    {
                        Name = "Diana Hill",
                        Email = "diana_hill@gmail.com",
                        PhoneNo = "016-9721188",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Richard Macdonald",
                        Email = "richard_macdonald@gmail.com",
                        PhoneNo = "018-3085336",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Angela Case",
                        Email = "angela_case@gmail.com",
                        PhoneNo = "010-2133296",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 130.0
                    },
                    

                    new Lead
                    {
                        Name = "Larry Perry",
                        Email = "larry_perry@gmail.com",
                        PhoneNo = "017-7285637",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Leslie Garcia",
                        Email = "leslie_garcia@gmail.com",
                        PhoneNo = "014-5738595",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Smith",
                        Email = "heather_smith@gmail.com",
                        PhoneNo = "010-2415129",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Damon Hall",
                        Email = "damon_hall@gmail.com",
                        PhoneNo = "012-9343138",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Charles Davis",
                        Email = "charles_davis@gmail.com",
                        PhoneNo = "018-1671683",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1108,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 278.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Williams",
                        Email = "robert_williams@gmail.com",
                        PhoneNo = "019-5684945",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1055.0
                    },
                    

                    new Lead
                    {
                        Name = "Evan Miller",
                        Email = "evan_miller@gmail.com",
                        PhoneNo = "016-6160579",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Olson",
                        Email = "melissa_olson@gmail.com",
                        PhoneNo = "012-7246335",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.257,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 439.0
                    },
                    

                    new Lead
                    {
                        Name = "Pamela Davis",
                        Email = "pamela_davis@gmail.com",
                        PhoneNo = "019-8753333",
                        AvgPageViewPerVisit = 2.22,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7594,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 20.0,
                        TotalTimeSpendOnSite = 1633.0
                    },
                    

                    new Lead
                    {
                        Name = "Jon Garcia",
                        Email = "jon_garcia@gmail.com",
                        PhoneNo = "018-9634228",
                        AvgPageViewPerVisit = 6.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 373.0
                    },
                    

                    new Lead
                    {
                        Name = "Erica Taylor",
                        Email = "erica_taylor@gmail.com",
                        PhoneNo = "019-6556400",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Timothy Morgan",
                        Email = "timothy_morgan@gmail.com",
                        PhoneNo = "013-1894952",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9398,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1558.0
                    },
                    

                    new Lead
                    {
                        Name = "David Moore",
                        Email = "david_moore@gmail.com",
                        PhoneNo = "019-4161343",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1621.0
                    },
                    

                    new Lead
                    {
                        Name = "William Martin",
                        Email = "william_martin@gmail.com",
                        PhoneNo = "014-0144664",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1126,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 394.0
                    },
                    

                    new Lead
                    {
                        Name = "Natalie Murphy",
                        Email = "natalie_murphy@gmail.com",
                        PhoneNo = "019-9180069",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 25.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Hunter",
                        Email = "christopher_hunter@gmail.com",
                        PhoneNo = "013-6733659",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 326.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Cox",
                        Email = "jennifer_cox@gmail.com",
                        PhoneNo = "014-0386540",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Brenda Hendrix",
                        Email = "brenda_hendrix@gmail.com",
                        PhoneNo = "019-7909823",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Nancy Parker",
                        Email = "nancy_parker@gmail.com",
                        PhoneNo = "010-3057792",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7291,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1190.0
                    },
                    

                    new Lead
                    {
                        Name = "Elijah Green",
                        Email = "elijah_green@gmail.com",
                        PhoneNo = "012-5165769",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 158.0
                    },
                    

                    new Lead
                    {
                        Name = "Juan Hall",
                        Email = "juan_hall@gmail.com",
                        PhoneNo = "016-1070940",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3705,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Philip Andrade",
                        Email = "philip_andrade@gmail.com",
                        PhoneNo = "013-7012387",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5314,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 944.0
                    },
                    

                    new Lead
                    {
                        Name = "Lawrence Garcia",
                        Email = "lawrence_garcia@gmail.com",
                        PhoneNo = "017-7229968",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer James",
                        Email = "jennifer_james@gmail.com",
                        PhoneNo = "012-9528607",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3613,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1157.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Martinez",
                        Email = "amanda_martinez@gmail.com",
                        PhoneNo = "013-4713338",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 588.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Fox",
                        Email = "michael_fox@gmail.com",
                        PhoneNo = "010-9430962",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6074,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Johnson",
                        Email = "mark_johnson@gmail.com",
                        PhoneNo = "010-3157476",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7141,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 927.0
                    },
                    

                    new Lead
                    {
                        Name = "Marcia Morales",
                        Email = "marcia_morales@gmail.com",
                        PhoneNo = "019-8758493",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 9.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Smith",
                        Email = "jessica_smith@gmail.com",
                        PhoneNo = "016-4936776",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 588.0
                    },
                    

                    new Lead
                    {
                        Name = "Kerry Cantrell",
                        Email = "kerry_cantrell@gmail.com",
                        PhoneNo = "012-3552643",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 157.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Hicks",
                        Email = "lisa_hicks@gmail.com",
                        PhoneNo = "012-3991169",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Julie Sharp",
                        Email = "julie_sharp@gmail.com",
                        PhoneNo = "010-0551835",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 199.0
                    },
                    

                    new Lead
                    {
                        Name = "Scott Mccarthy",
                        Email = "scott_mccarthy@gmail.com",
                        PhoneNo = "016-1933589",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 7.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Porter",
                        Email = "michelle_porter@gmail.com",
                        PhoneNo = "012-5227471",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 66.0
                    },
                    

                    new Lead
                    {
                        Name = "Chelsea Williams",
                        Email = "chelsea_williams@gmail.com",
                        PhoneNo = "013-5797521",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Patricia Arellano",
                        Email = "patricia_arellano@gmail.com",
                        PhoneNo = "017-1767847",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7182,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1219.0
                    },
                    

                    new Lead
                    {
                        Name = "Lauren Jones",
                        Email = "lauren_jones@gmail.com",
                        PhoneNo = "014-1760948",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 1932.0
                    },
                    

                    new Lead
                    {
                        Name = "Mary Cooke",
                        Email = "mary_cooke@gmail.com",
                        PhoneNo = "016-5074025",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 121.0
                    },
                    

                    new Lead
                    {
                        Name = "Lindsey Herrera",
                        Email = "lindsey_herrera@gmail.com",
                        PhoneNo = "018-4525597",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1831,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 31.0
                    },
                    

                    new Lead
                    {
                        Name = "David Harris",
                        Email = "david_harris@gmail.com",
                        PhoneNo = "010-9993420",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 297.0
                    },
                    

                    new Lead
                    {
                        Name = "Denise Mejia",
                        Email = "denise_mejia@gmail.com",
                        PhoneNo = "010-3533160",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2453,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 513.0
                    },
                    

                    new Lead
                    {
                        Name = "Tina Sanders",
                        Email = "tina_sanders@gmail.com",
                        PhoneNo = "014-0460592",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1627.0
                    },
                    

                    new Lead
                    {
                        Name = "William Hernandez",
                        Email = "william_hernandez@gmail.com",
                        PhoneNo = "017-2850887",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Cassie Taylor",
                        Email = "cassie_taylor@gmail.com",
                        PhoneNo = "012-3416760",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1013.0
                    },
                    

                    new Lead
                    {
                        Name = "William Lee",
                        Email = "william_lee@gmail.com",
                        PhoneNo = "016-3984706",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 963.0
                    },
                    

                    new Lead
                    {
                        Name = "Mary Ramirez",
                        Email = "mary_ramirez@gmail.com",
                        PhoneNo = "010-7861641",
                        AvgPageViewPerVisit = 5.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2698,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 529.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Elizabeth Jones",
                        Email = "dr._elizabeth@gmail.com",
                        PhoneNo = "012-7728378",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5314,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1462.0
                    },
                    

                    new Lead
                    {
                        Name = "Mr. Cody Johnson",
                        Email = "mr._cody@gmail.com",
                        PhoneNo = "017-6268674",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 413.0
                    },
                    

                    new Lead
                    {
                        Name = "Peter Soto",
                        Email = "peter_soto@gmail.com",
                        PhoneNo = "018-8185597",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1448,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 251.0
                    },
                    

                    new Lead
                    {
                        Name = "Caleb Gonzalez",
                        Email = "caleb_gonzalez@gmail.com",
                        PhoneNo = "014-6289083",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 12.0,
                        TotalTimeSpendOnSite = 341.0
                    },
                    

                    new Lead
                    {
                        Name = "Aaron Vasquez",
                        Email = "aaron_vasquez@gmail.com",
                        PhoneNo = "012-0635433",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 6.0
                    },
                    

                    new Lead
                    {
                        Name = "Cassidy Gonzalez",
                        Email = "cassidy_gonzalez@gmail.com",
                        PhoneNo = "010-0816602",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1537,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 118.0
                    },
                    

                    new Lead
                    {
                        Name = "Andre Scott III",
                        Email = "andre_scott@gmail.com",
                        PhoneNo = "010-6895810",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1300.0
                    },
                    

                    new Lead
                    {
                        Name = "Benjamin Carpenter",
                        Email = "benjamin_carpenter@gmail.com",
                        PhoneNo = "012-0169875",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 1468.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Brown",
                        Email = "michelle_brown@gmail.com",
                        PhoneNo = "017-7652585",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.8688,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 605.0
                    },
                    

                    new Lead
                    {
                        Name = "Harold Jones",
                        Email = "harold_jones@gmail.com",
                        PhoneNo = "016-4915547",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4767,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1158.0
                    },
                    

                    new Lead
                    {
                        Name = "Nicole Mcdaniel",
                        Email = "nicole_mcdaniel@gmail.com",
                        PhoneNo = "013-8673441",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1537,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 300.0
                    },
                    

                    new Lead
                    {
                        Name = "Rebecca Martin",
                        Email = "rebecca_martin@gmail.com",
                        PhoneNo = "019-4091836",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1148.0
                    },
                    

                    new Lead
                    {
                        Name = "Vanessa Jones",
                        Email = "vanessa_jones@gmail.com",
                        PhoneNo = "016-9419214",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2511,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 336.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Gonzales",
                        Email = "amanda_gonzales@gmail.com",
                        PhoneNo = "013-3964414",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9416,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 882.0
                    },
                    

                    new Lead
                    {
                        Name = "Linda Parker",
                        Email = "linda_parker@gmail.com",
                        PhoneNo = "017-2382442",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6494,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1795.0
                    },
                    

                    new Lead
                    {
                        Name = "Edward Berry",
                        Email = "edward_berry@gmail.com",
                        PhoneNo = "017-9999899",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1387.0
                    },
                    

                    new Lead
                    {
                        Name = "Donna Fields",
                        Email = "donna_fields@gmail.com",
                        PhoneNo = "013-1479915",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Samuel Green",
                        Email = "samuel_green@gmail.com",
                        PhoneNo = "018-2454908",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1081.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Brown DDS",
                        Email = "kimberly_brown@gmail.com",
                        PhoneNo = "012-1333893",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2419,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 348.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelly Marshall",
                        Email = "kelly_marshall@gmail.com",
                        PhoneNo = "017-0503504",
                        AvgPageViewPerVisit = 1.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 12.0
                    },
                    

                    new Lead
                    {
                        Name = "Candice Williams",
                        Email = "candice_williams@gmail.com",
                        PhoneNo = "016-7235237",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 359.0
                    },
                    

                    new Lead
                    {
                        Name = "Jordan Walton",
                        Email = "jordan_walton@gmail.com",
                        PhoneNo = "010-5096002",
                        AvgPageViewPerVisit = 7.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2059,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 14.0,
                        TotalTimeSpendOnSite = 171.0
                    },
                    

                    new Lead
                    {
                        Name = "John Johnson",
                        Email = "john_johnson@gmail.com",
                        PhoneNo = "014-3325530",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5018,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 689.0
                    },
                    

                    new Lead
                    {
                        Name = "Diana Crawford",
                        Email = "diana_crawford@gmail.com",
                        PhoneNo = "017-0513425",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9389,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1210.0
                    },
                    

                    new Lead
                    {
                        Name = "Megan Perry",
                        Email = "megan_perry@gmail.com",
                        PhoneNo = "018-0868399",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0713,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 258.0
                    },
                    

                    new Lead
                    {
                        Name = "Katie Hebert",
                        Email = "katie_hebert@gmail.com",
                        PhoneNo = "018-3257349",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Angel Bolton",
                        Email = "angel_bolton@gmail.com",
                        PhoneNo = "018-8636383",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3512,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 555.0
                    },
                    

                    new Lead
                    {
                        Name = "Teresa Mccoy",
                        Email = "teresa_mccoy@gmail.com",
                        PhoneNo = "019-5489021",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7252,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1100.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelsey Orozco",
                        Email = "kelsey_orozco@gmail.com",
                        PhoneNo = "010-6159825",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Thomas Rivera",
                        Email = "thomas_rivera@gmail.com",
                        PhoneNo = "019-8773101",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "John Mccarthy",
                        Email = "john_mccarthy@gmail.com",
                        PhoneNo = "014-0348727",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.4455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 937.0
                    },
                    

                    new Lead
                    {
                        Name = "Jeffrey Kennedy",
                        Email = "jeffrey_kennedy@gmail.com",
                        PhoneNo = "016-5610715",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Norman Rivera",
                        Email = "norman_rivera@gmail.com",
                        PhoneNo = "018-6362541",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1628.0
                    },
                    

                    new Lead
                    {
                        Name = "David Zimmerman",
                        Email = "david_zimmerman@gmail.com",
                        PhoneNo = "018-7175300",
                        AvgPageViewPerVisit = 2.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2637,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 58.0
                    },
                    

                    new Lead
                    {
                        Name = "Teresa Mason",
                        Email = "teresa_mason@gmail.com",
                        PhoneNo = "017-9058686",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kayla Fletcher",
                        Email = "kayla_fletcher@gmail.com",
                        PhoneNo = "017-3913369",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2357,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 467.0
                    },
                    

                    new Lead
                    {
                        Name = "Heather Parks",
                        Email = "heather_parks@gmail.com",
                        PhoneNo = "010-5218546",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Carla Tran",
                        Email = "carla_tran@gmail.com",
                        PhoneNo = "010-4205460",
                        AvgPageViewPerVisit = 4.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7186,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 13.0,
                        TotalTimeSpendOnSite = 1683.0
                    },
                    

                    new Lead
                    {
                        Name = "Mariah Brown PhD",
                        Email = "mariah_brown@gmail.com",
                        PhoneNo = "019-3314493",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 261.0
                    },
                    

                    new Lead
                    {
                        Name = "Sydney Lucas",
                        Email = "sydney_lucas@gmail.com",
                        PhoneNo = "016-1836862",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.723,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1427.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Mclean",
                        Email = "robert_mclean@gmail.com",
                        PhoneNo = "014-6277461",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2225,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 18.0
                    },
                    

                    new Lead
                    {
                        Name = "Cindy Boyer",
                        Email = "cindy_boyer@gmail.com",
                        PhoneNo = "017-1616303",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6094,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1647.0
                    },
                    

                    new Lead
                    {
                        Name = "Brittany Kelley",
                        Email = "brittany_kelley@gmail.com",
                        PhoneNo = "018-1901074",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Eric Shaffer",
                        Email = "eric_shaffer@gmail.com",
                        PhoneNo = "013-3967888",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Roberts",
                        Email = "melissa_roberts@gmail.com",
                        PhoneNo = "019-8480801",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Brett Rodriguez",
                        Email = "brett_rodriguez@gmail.com",
                        PhoneNo = "019-8581144",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7091,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 882.0
                    },
                    

                    new Lead
                    {
                        Name = "Tom Campbell",
                        Email = "tom_campbell@gmail.com",
                        PhoneNo = "019-6908499",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Adam Howard",
                        Email = "adam_howard@gmail.com",
                        PhoneNo = "016-5097521",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 300.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristy Johnson",
                        Email = "kristy_johnson@gmail.com",
                        PhoneNo = "013-9531080",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2221,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 146.0
                    },
                    

                    new Lead
                    {
                        Name = "Robert Porter",
                        Email = "robert_porter@gmail.com",
                        PhoneNo = "014-0452859",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jason Anderson",
                        Email = "jason_anderson@gmail.com",
                        PhoneNo = "019-3158254",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mr. Peter Woods",
                        Email = "mr._peter@gmail.com",
                        PhoneNo = "017-8821621",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 235.0
                    },
                    

                    new Lead
                    {
                        Name = "Troy Hodges",
                        Email = "troy_hodges@gmail.com",
                        PhoneNo = "017-4279234",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Angelica Gilmore",
                        Email = "angelica_gilmore@gmail.com",
                        PhoneNo = "018-0058459",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 234.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Flowers",
                        Email = "ryan_flowers@gmail.com",
                        PhoneNo = "016-9154192",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2412,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 151.0
                    },
                    

                    new Lead
                    {
                        Name = "Jessica Duran",
                        Email = "jessica_duran@gmail.com",
                        PhoneNo = "010-9458664",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 195.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Ellis",
                        Email = "kimberly_ellis@gmail.com",
                        PhoneNo = "019-7628967",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 372.0
                    },
                    

                    new Lead
                    {
                        Name = "Rose Garrett",
                        Email = "rose_garrett@gmail.com",
                        PhoneNo = "016-6893452",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9461,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1203.0
                    },
                    

                    new Lead
                    {
                        Name = "Lisa Ellis",
                        Email = "lisa_ellis@gmail.com",
                        PhoneNo = "019-4522102",
                        AvgPageViewPerVisit = 1.23,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7352,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 16.0,
                        TotalTimeSpendOnSite = 1482.0
                    },
                    

                    new Lead
                    {
                        Name = "Melinda Smith",
                        Email = "melinda_smith@gmail.com",
                        PhoneNo = "016-4351631",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 60.0
                    },
                    

                    new Lead
                    {
                        Name = "Danielle Carrillo",
                        Email = "danielle_carrillo@gmail.com",
                        PhoneNo = "012-8019461",
                        AvgPageViewPerVisit = 2.2,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7446,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 1129.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Johnson",
                        Email = "elizabeth_johnson@gmail.com",
                        PhoneNo = "017-6777642",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Beth Brooks",
                        Email = "beth_brooks@gmail.com",
                        PhoneNo = "014-4927296",
                        AvgPageViewPerVisit = 10.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6626,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 10.0,
                        TotalTimeSpendOnSite = 697.0
                    },
                    

                    new Lead
                    {
                        Name = "Colton Mcconnell",
                        Email = "colton_mcconnell@gmail.com",
                        PhoneNo = "014-7040128",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1343.0
                    },
                    

                    new Lead
                    {
                        Name = "Nathan Blair",
                        Email = "nathan_blair@gmail.com",
                        PhoneNo = "016-0544475",
                        AvgPageViewPerVisit = 2.465630081300813,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9493,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.59771732332708,
                        TotalTimeSpendOnSite = 1313.0
                    },
                    

                    new Lead
                    {
                        Name = "Debra Davies",
                        Email = "debra_davies@gmail.com",
                        PhoneNo = "019-7524815",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1528.0
                    },
                    

                    new Lead
                    {
                        Name = "Ricky Gibson",
                        Email = "ricky_gibson@gmail.com",
                        PhoneNo = "012-9520447",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7203,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1944.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Patel",
                        Email = "elizabeth_patel@gmail.com",
                        PhoneNo = "012-7628917",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Tina Neal",
                        Email = "tina_neal@gmail.com",
                        PhoneNo = "010-0653708",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1429.0
                    },
                    

                    new Lead
                    {
                        Name = "Brandon Herman",
                        Email = "brandon_herman@gmail.com",
                        PhoneNo = "012-0895994",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9304,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Danielle Barnett DDS",
                        Email = "danielle_barnett@gmail.com",
                        PhoneNo = "017-3043636",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6029,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1440.0
                    },
                    

                    new Lead
                    {
                        Name = "David Cox",
                        Email = "david_cox@gmail.com",
                        PhoneNo = "014-9902397",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1372.0
                    },
                    

                    new Lead
                    {
                        Name = "Carla Lopez",
                        Email = "carla_lopez@gmail.com",
                        PhoneNo = "018-9895001",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2399,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 167.0
                    },
                    

                    new Lead
                    {
                        Name = "Donald Martinez",
                        Email = "donald_martinez@gmail.com",
                        PhoneNo = "018-5849382",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.206,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 180.0
                    },
                    

                    new Lead
                    {
                        Name = "Garrett Butler",
                        Email = "garrett_butler@gmail.com",
                        PhoneNo = "016-6208018",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Michelle Aguilar",
                        Email = "michelle_aguilar@gmail.com",
                        PhoneNo = "018-1990483",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2565,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 161.0
                    },
                    

                    new Lead
                    {
                        Name = "Donald Brennan",
                        Email = "donald_brennan@gmail.com",
                        PhoneNo = "019-6461124",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5932,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1458.0
                    },
                    

                    new Lead
                    {
                        Name = "Amanda Williams",
                        Email = "amanda_williams@gmail.com",
                        PhoneNo = "010-3073731",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1521.0
                    },
                    

                    new Lead
                    {
                        Name = "Donna Hayes",
                        Email = "donna_hayes@gmail.com",
                        PhoneNo = "017-6771964",
                        AvgPageViewPerVisit = 9.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2662,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 540.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Mcdonald",
                        Email = "michael_mcdonald@gmail.com",
                        PhoneNo = "018-2507881",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.969,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1052.0
                    },
                    

                    new Lead
                    {
                        Name = "Alvin Williams",
                        Email = "alvin_williams@gmail.com",
                        PhoneNo = "012-1150513",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Justin Steele",
                        Email = "justin_steele@gmail.com",
                        PhoneNo = "018-0370517",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 274.0
                    },
                    

                    new Lead
                    {
                        Name = "Christina Clements",
                        Email = "christina_clements@gmail.com",
                        PhoneNo = "019-2528359",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ernest Leon",
                        Email = "ernest_leon@gmail.com",
                        PhoneNo = "016-9227108",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5636,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 1380.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Nicholson",
                        Email = "mark_nicholson@gmail.com",
                        PhoneNo = "016-1896702",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2003,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 30.0
                    },
                    

                    new Lead
                    {
                        Name = "Aaron Dillon",
                        Email = "aaron_dillon@gmail.com",
                        PhoneNo = "014-7990689",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9512,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 884.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Curtis",
                        Email = "kimberly_curtis@gmail.com",
                        PhoneNo = "013-5860420",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 154.0
                    },
                    

                    new Lead
                    {
                        Name = "Alexandra Harrison",
                        Email = "alexandra_harrison@gmail.com",
                        PhoneNo = "019-1935785",
                        AvgPageViewPerVisit = 6.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 6.0,
                        TotalTimeSpendOnSite = 1169.0
                    },
                    

                    new Lead
                    {
                        Name = "Joshua Bryant",
                        Email = "joshua_bryant@gmail.com",
                        PhoneNo = "017-9788948",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 114.0
                    },
                    

                    new Lead
                    {
                        Name = "Jacob Thornton",
                        Email = "jacob_thornton@gmail.com",
                        PhoneNo = "014-8800418",
                        AvgPageViewPerVisit = 3.33,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 10.0,
                        TotalTimeSpendOnSite = 1341.0
                    },
                    

                    new Lead
                    {
                        Name = "Amy Bush",
                        Email = "amy_bush@gmail.com",
                        PhoneNo = "013-5867619",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 77.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Woods",
                        Email = "michael_woods@gmail.com",
                        PhoneNo = "016-8856007",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9409,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 811.0
                    },
                    

                    new Lead
                    {
                        Name = "Kevin Reed",
                        Email = "kevin_reed@gmail.com",
                        PhoneNo = "018-0790059",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.093,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 329.0
                    },
                    

                    new Lead
                    {
                        Name = "Marissa Chandler",
                        Email = "marissa_chandler@gmail.com",
                        PhoneNo = "019-8355931",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1247.0
                    },
                    

                    new Lead
                    {
                        Name = "Caitlyn Buck",
                        Email = "caitlyn_buck@gmail.com",
                        PhoneNo = "012-9862186",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1199.0
                    },
                    

                    new Lead
                    {
                        Name = "Benjamin Simpson",
                        Email = "benjamin_simpson@gmail.com",
                        PhoneNo = "016-8739792",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5249,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 1710.0
                    },
                    

                    new Lead
                    {
                        Name = "Brenda Hurst",
                        Email = "brenda_hurst@gmail.com",
                        PhoneNo = "017-7965204",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.Yes],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.0575,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 17.0
                    },
                    

                    new Lead
                    {
                        Name = "Laura Cunningham",
                        Email = "laura_cunningham@gmail.com",
                        PhoneNo = "014-0538837",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Mrs. Candice Sellers",
                        Email = "mrs._candice@gmail.com",
                        PhoneNo = "017-9166700",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1544.0
                    },
                    

                    new Lead
                    {
                        Name = "Desiree Sherman",
                        Email = "desiree_sherman@gmail.com",
                        PhoneNo = "017-5669070",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Molly Robinson",
                        Email = "molly_robinson@gmail.com",
                        PhoneNo = "014-8484560",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 139.0
                    },
                    

                    new Lead
                    {
                        Name = "Monique Burgess",
                        Email = "monique_burgess@gmail.com",
                        PhoneNo = "016-7518338",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Brooke Ford",
                        Email = "brooke_ford@gmail.com",
                        PhoneNo = "012-8421937",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.2877,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 473.0
                    },
                    

                    new Lead
                    {
                        Name = "Tracy Williams",
                        Email = "tracy_williams@gmail.com",
                        PhoneNo = "016-6880640",
                        AvgPageViewPerVisit = 8.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7054,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 8.0,
                        TotalTimeSpendOnSite = 1271.0
                    },
                    

                    new Lead
                    {
                        Name = "Jacqueline Mack",
                        Email = "jacqueline_mack@gmail.com",
                        PhoneNo = "014-8611916",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7061,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 1374.0
                    },
                    

                    new Lead
                    {
                        Name = "Justin Johnson",
                        Email = "justin_johnson@gmail.com",
                        PhoneNo = "010-4331099",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2455,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 15.0,
                        TotalTimeSpendOnSite = 317.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Baker",
                        Email = "jennifer_baker@gmail.com",
                        PhoneNo = "013-3063850",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2345,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 45.0
                    },
                    

                    new Lead
                    {
                        Name = "Elizabeth Murphy",
                        Email = "elizabeth_murphy@gmail.com",
                        PhoneNo = "010-8240723",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kimberly Ayers",
                        Email = "kimberly_ayers@gmail.com",
                        PhoneNo = "010-6291632",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kelli Anderson",
                        Email = "kelli_anderson@gmail.com",
                        PhoneNo = "013-7538891",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7106,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1503.0
                    },
                    

                    new Lead
                    {
                        Name = "Natalie Mills",
                        Email = "natalie_mills@gmail.com",
                        PhoneNo = "017-8568355",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Larry Miller",
                        Email = "larry_miller@gmail.com",
                        PhoneNo = "017-0644813",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Joseph Haynes",
                        Email = "joseph_haynes@gmail.com",
                        PhoneNo = "012-8442282",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7302,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1385.0
                    },
                    

                    new Lead
                    {
                        Name = "Julie White",
                        Email = "julie_white@gmail.com",
                        PhoneNo = "010-4994533",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.9422,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1309.0
                    },
                    

                    new Lead
                    {
                        Name = "Patricia Johnston",
                        Email = "patricia_johnston@gmail.com",
                        PhoneNo = "019-2623234",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 192.0
                    },
                    

                    new Lead
                    {
                        Name = "Aaron Campbell",
                        Email = "aaron_campbell@gmail.com",
                        PhoneNo = "019-5922223",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Jennifer Cunningham",
                        Email = "jennifer_cunningham@gmail.com",
                        PhoneNo = "016-6159549",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 375.0
                    },
                    

                    new Lead
                    {
                        Name = "Mark Ross",
                        Email = "mark_ross@gmail.com",
                        PhoneNo = "012-6849490",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6891,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 771.0
                    },
                    

                    new Lead
                    {
                        Name = "John Simmons",
                        Email = "john_simmons@gmail.com",
                        PhoneNo = "017-4578227",
                        AvgPageViewPerVisit = 5.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2039,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 398.0
                    },
                    

                    new Lead
                    {
                        Name = "Kristen Adams",
                        Email = "kristen_adams@gmail.com",
                        PhoneNo = "018-2338405",
                        AvgPageViewPerVisit = 3.67,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7384,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 11.0,
                        TotalTimeSpendOnSite = 1002.0
                    },
                    

                    new Lead
                    {
                        Name = "Michael Nguyen",
                        Email = "michael_nguyen@gmail.com",
                        PhoneNo = "016-7686374",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3192,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Kenneth Griffin",
                        Email = "kenneth_griffin@gmail.com",
                        PhoneNo = "019-1935198",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.738,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 166.0
                    },
                    

                    new Lead
                    {
                        Name = "Christopher Cabrera",
                        Email = "christopher_cabrera@gmail.com",
                        PhoneNo = "017-3218458",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1670.0
                    },
                    

                    new Lead
                    {
                        Name = "Lydia Cameron",
                        Email = "lydia_cameron@gmail.com",
                        PhoneNo = "016-5405945",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5314,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 1.0,
                        TotalTimeSpendOnSite = 858.0
                    },
                    

                    new Lead
                    {
                        Name = "Melissa Smith",
                        Email = "melissa_smith@gmail.com",
                        PhoneNo = "014-3200426",
                        AvgPageViewPerVisit = 1.75,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7194,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 1141.0
                    },
                    

                    new Lead
                    {
                        Name = "Linda Long",
                        Email = "linda_long@gmail.com",
                        PhoneNo = "014-7695214",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.WorkingProfessional],
                        PredictedScore = 0.968,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 9.0,
                        TotalTimeSpendOnSite = 2125.0
                    },
                    

                    new Lead
                    {
                        Name = "Dr. Daniel Murphy",
                        Email = "dr._daniel@gmail.com",
                        PhoneNo = "013-9753100",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2205,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 32.0
                    },
                    

                    new Lead
                    {
                        Name = "Megan Harmon",
                        Email = "megan_harmon@gmail.com",
                        PhoneNo = "013-2083228",
                        AvgPageViewPerVisit = 4.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.7104,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 4.0,
                        TotalTimeSpendOnSite = 1554.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Cooper",
                        Email = "anthony_cooper@gmail.com",
                        PhoneNo = "018-2255868",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Anthony Strickland",
                        Email = "anthony_strickland@gmail.com",
                        PhoneNo = "016-5574648",
                        AvgPageViewPerVisit = 3.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.3748,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 7.0,
                        TotalTimeSpendOnSite = 229.0
                    },
                    

                    new Lead
                    {
                        Name = "Kayla Cannon",
                        Email = "kayla_cannon@gmail.com",
                        PhoneNo = "019-6672089",
                        AvgPageViewPerVisit = 2.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2922,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 5.0,
                        TotalTimeSpendOnSite = 458.0
                    },
                    

                    new Lead
                    {
                        Name = "Aaron Rogers",
                        Email = "aaron_rogers@gmail.com",
                        PhoneNo = "017-7839081",
                        AvgPageViewPerVisit = 1.5,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.6428,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1409.0
                    },
                    

                    new Lead
                    {
                        Name = "David Rivera",
                        Email = "david_rivera@gmail.com",
                        PhoneNo = "017-7076097",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Student],
                        PredictedScore = 0.2268,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 69.0
                    },
                    

                    new Lead
                    {
                        Name = "Edward Howe",
                        Email = "edward_howe@gmail.com",
                        PhoneNo = "016-5257704",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.3706,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 590.0
                    },
                    

                    new Lead
                    {
                        Name = "Alyssa Turner",
                        Email = "alyssa_turner@gmail.com",
                        PhoneNo = "010-1879400",
                        AvgPageViewPerVisit = 2.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.1801,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.Yes],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 263.0
                    },
                    

                    new Lead
                    {
                        Name = "Natasha Brown",
                        Email = "natasha_brown@gmail.com",
                        PhoneNo = "017-1695734",
                        AvgPageViewPerVisit = 1.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.2195,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Active],
                        TotalSiteVisit = 2.0,
                        TotalTimeSpendOnSite = 252.0
                    },
                    

                    new Lead
                    {
                        Name = "Lacey Guerrero",
                        Email = "lacey_guerrero@gmail.com",
                        PhoneNo = "013-9301135",
                        AvgPageViewPerVisit = 0.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.5709,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Qualified],
                        TotalSiteVisit = 0.0,
                        TotalTimeSpendOnSite = 0.0
                    },
                    

                    new Lead
                    {
                        Name = "Ryan Clarke",
                        Email = "ryan_clarke@gmail.com",
                        PhoneNo = "019-6531076",
                        AvgPageViewPerVisit = 3.0,
                        CreatedTimestamp = new DateTime(2022, 4, 1, 0, 0, 0),
                        DontCall = Lead.DontCallList[(int)Lead.DontCallEnum.No],
                        DontEmail = Lead.DontEmailList[(int)Lead.DontEmailEnum.No],
                        Occupation = Lead.OccupationList[(int)Lead.OccupationEnum.Unemployed],
                        PredictedScore = 0.675,
                        ReceivedFreeCopy = Lead.ReceivedFreeCopyList[(int)Lead.ReceivedFreeCopyEnum.No],
                        Status = Lead.StatusList[(int)Lead.StatusEnum.Disqualified],
                        TotalSiteVisit = 3.0,
                        TotalTimeSpendOnSite = 1195.0
                    }
                );

                context.SaveChanges();
            }
        }
    }
}